---
layout: post
title:  "getStyle的优化"
date:   2011-09-24 17:43:07
author: admin
categories: program
---

## getStyle的优化
### by admin
### at 2011-09-24 17:43:07
### original <http://stylechen.com/getstyle2.html>

<p>之前我写过一篇关于<a href="http://stylechen.com/getstyle.html">获取元素计算的样式</a>的文章，后来在使用发现中还有一些没想到的兼容问题，今天我对原来的代码进行了优化，并对一些常见的兼容问题进行了处理。</p>
<p>在javascript中“-”(中划线或连字符)代表的是减号，而在CSS中，许多样式属性都有这个符号，如padding-left、font-size等，所以在javascript中如果出现如下的代码就一个错误：</p>
<pre>
elem.style.margin-left = '20px';
</pre>
<p>正确的写法应该是：</p>
<pre>
elem.style.marginLeft = '20px';
</pre>
<p>这里需要把CSS的中划线去掉并把原来紧跟在中划线后的字母大写，俗称“驼峰式”写法，不管是使用javascript设置或是获取元素的CSS样式都应该是驼峰式的写法。但是不少对CSS熟悉而又对javascript不太熟悉的新手朋友总是会犯这种低级错误，使用replace的高级用法可以很简单的将CSS属性中的中划线替换成驼峰式的写法。</p>
<pre>
var newProp = prop.replace( /\-(\w)/g, function( $, $1 ){
	return $1.toUpperCase();
});
</pre>
<p>
对于float，在javascript中属于保留字，在javascript中设置或获取元素的float的值，都有其他的代替写法，在标准浏览器中为cssFloat，而在IE6/7/8中为styleFloat。
</p>
<p>如果top、right、bottom、left没有一个显式的值，在获取这些值的时候部分浏览器会返回一个auto，虽然auto这个值是一个合法的CSS属性值，但绝不是我们想要的结果，而应该是0px。</p>
<p>在IE6/7/8中要设置元素的透明度需要用到滤镜、如：filter:alpha(opacity=60)，对于标准浏览器直接设置opacity即可，IE9两种写法都支持，我对获取元素的透明度也做了兼容处理，只要使用opacity就可以获取到所有浏览器元素的透明度的值。</p>
<p>在IE6/7/8中获取元素的宽度和高度已经在上篇文中介绍过了，这里就不再复述了。还有一个需要注意的地方就是，如果元素的样式是使用style内联的写法，或者是已经使用javascript设置过样式的属性，可以使用下面的方法获取到元素的计算样式：</p>
<pre>
var height = elem.style.height;
</pre>
<p>这个方法比读取getComputedStyle或currentStyle中的属性值都要快，应该优先使用，当然前提条件就是样式是通过内联的写法设置的(使用javascript设置也是设置内联样式)。优化过的最终代码如下：</p>
<pre>
var getStyle = function( elem, p ){
  var rPos = /^(left|right|top|bottom)$/,
    ecma = &#39;getComputedStyle&#39; in window,
  // 将中划线转换成驼峰式 如：padding-left =&gt; paddingLeft
  p = p.replace( /\-(\w)/g, function( $, $1 ){
    return $1.toUpperCase();
  });
  // 对float进行处理
  p = p === &#39;float&#39; ? ( ecma ? &#39;cssFloat&#39; : &#39;styleFloat&#39; ) : p;

  return !!elem.style[p] ?
    elem.style[p] :
    ecma ?
    function(){
      var val = getComputedStyle( elem, null )[p];
      // 处理top、right、bottom、left为auto的情况
      if( rPos.test(p) &amp;&amp; val === &#39;auto&#39; ){
        return &#39;0px&#39;;
      }
      return val;
    }() :
    function(){
      var val =  elem.currentStyle[p];
          // 获取元素在IE6/7/8中的宽度和高度
	  if( (p === &quot;width&quot; || p === &quot;height&quot;) &amp;&amp; val === &#39;auto&#39; ){
	    var rect =  elem.getBoundingClientRect();
	    return ( p === &#39;width&#39; ? rect.right - rect.left : rect.bottom - rect.top ) + &#39;px&#39;;
	  }
	// 获取元素在IE6/7/8中的透明度
	  if( p === &#39;opacity&#39; ){
	    var filter = elem.currentStyle.filter;
	    if( /opacity/.test(filter) ){
  	      val = filter.match( /\d+/ )[0] / 100;
	      return (val === 1 || val === 0) ? val.toFixed(0) : val.toFixed(1);
	    }
	    else if( val === undefined ){
	      return &#39;1&#39;;
	    }
	  }
	  // 处理top、right、bottom、left为auto的情况
	  if( rPos.test(p) &amp;&amp; val === &#39;auto&#39; ){
	    return &#39;0px&#39;;
	  }
	  return val;
	}();
};
</pre>
<p>下面是调用示例：</p>
<pre>
&lt;style&gt;
.box{
  width:500px;
  height:200px;
  background:#000;
  filter:alpha(opacity=60);
  opacity:0.6;
}
&lt;/style&gt;

&lt;div id=&quot;box&quot;&gt;&lt;/div&gt;

&lt;script&gt;
var box = document.getElementById( &#39;box&#39; );

alert( getStyle(box, &#39;width&#39;) ); // &#39;500px&#39;
alert( getStyle(box, &#39;background-color&#39;) ); // &#39;rgb(0, 0, 0)&#39; / &#39;#000&#39;
alert( getStyle(box, &#39;opacity&#39;) ); // &#39;0.6&#39;
alert( getStyle(box, &#39;float&#39;) ); // &#39;none&#39;
&lt;/script&gt;
</pre>
<div>
原载于：雨夜带刀’s Blog<br>
本文链接：<a href="http://stylechen.com/getstyle2.html">http://stylechen.com/getstyle2.html</a><br>
如需转载请以链接形式注明原载与原文地址。
</div>