---
layout: post
title:  "从面试别人想到的"
date:   2010-12-05 11:47:36
author: 
categories: program
---

## 从面试别人想到的
### by 
### at 2010-12-05 11:47:36
### original <http://www.javaeye.com/topic/833774>

      最近一个月面试了10几个人，有应届毕业生，有在校寻找实习的学生，有工作了两三年的，也有工作了5到10年的，有在外包公司工作的，有目前在世界级外企的。结果是，一无所获。
<br>      想起两年前，研究生二年级上学期开始找工作，面试了几个公司的经历，和一些师弟师妹问我的一些问题，不禁让我想到了很多。主要有两个方面：
<br>      1 我们应该如何面试，才能挖掘出应聘者的真实能力
<br>      2 从面试中，我渐渐的画清楚，一个公司需要什么样的人才，我自己应该如何规划我的未来。
<br>      
<br>      我面试别人掌握两个原则：
<br>      1 此人掌握的主要技能是我们所需要的
<br>      2 此人虽然尚未掌握我们所需要的所有技能，但是从他已经掌握的技能可以看出他的潜力和当前的Level。
<br>      第二点很重要，就像Kent Beck不是Flex高手，但是我相信如果他愿意学习，他很快就会成为Flex的高手。
<br>
<br>      我觉得我们招人主要基于以下考虑：
<br>      1 需要某方面专门人才，来和我们现有的人形成互补。
<br>      2 需要一些具有我们项目所需要的技术的人，他的技能会跟我们类似，但即便这样，我们依然希望他会是某方面的专家，比如Spring Security这么一个框架的专长也是Plus。而且，我希望这个人比我强。
<br>
<br>    
<br>
<br>     我招人的时候希望此人具有以下的气质：
<br>     1 热爱编程，相信软件工艺，也相信软件工程。最近在看Kent Beck的实现模式和Bob大叔的代码整洁之道，我希望他能跟我一样，认为代码是给人看的，好的代码像一篇文章一样。能够反复去雕琢一段代码。但是要理解软件工程，不能为了雕琢每一段代码，而缺乏全局认识。
<br>     2 热爱编程，能够为解决一个问题，写一段漂亮的代码，甚至于为类起一个好的名字而失眠。
<br>     3 热爱编程，把这当作是一项事业，而非仅仅是工作。那种只是想把工作对付完了就OK的人是不适合的。
<br>     4 热爱编程，单纯的用程序交流，人也像好代码一样，干净利落，说话直来直去。大家都很忙，没时间听客套话和绕圈子。      
<br>
<br>      就像当年别人面试我的时候那样，我会这样去面试别人：
<br>      1 从简历里挑出我最关心的他所会的技能，比如最近我希望招一个JS高手，最好精通Dojo（我说的精通是真的精通）。
<br>      2 我会问他最擅长的技术（如果此技术不是我们最需要的那个），如果他最擅长的技术都语焉不详，那就没什么意思了。
<br>      3 我会问某项技术全貌上的问题，比如会让对方谈谈Dojo的整个架构，是怎么解决JS领域的一些核心问题的。
<br>      4 我会问一些技术细节，比如Spring的声明式事务处理是怎么实现的，因为这一个问题就暗含了AOP的概念和如何实现，代理模式，线程，JDBC事务处理。如果应聘者看过Spring的源代码，那么说明此人能够花心思追究技术更深层次的东西，具有优秀程序员一个优秀品质：好奇心。如果应聘者没看过Spring的源代码，他能回答上来，说明此人各方面基础知识扎实并能融会贯通去解决问题。同样我会问Hibernate的延迟加载是怎么实现的。
<br>      5 我会问一些工程性问题，比如Spring的依赖注入，Scope为Session的Bean如何注入到Scope为Singleton的Bean。比如如何调整Hibernate查询性能。比如数据库索引会在什么情况下失效，原理是什么。
<br>      6 我会问一些解决方案，比如如何重启服务器后，依然能够保持Session。
<br>      7 我会问一些企业开发中特别重要的问题对方是如何理解的，比如事务，并发，内存管理，异构系统整合，数据库性能优化。
<br>      8 我会问一些特别基础的问题，比如HashSet是如何判断新添加的对象是否已经存在的，如果已经存在，它是不再放进去，还是放进去覆盖之前的。比如ClassLoader的工作原理。
<br>      
<br>      当我面对一些工作了四年以上的人时，多少是有点惴惴，因为会担心对方很牛，我却挖掘不出。后来请教了一位工作了六年的同事，他说一个简单的原则是：
<br>      问他你目前在项目中遇到的问题，因为这些问题都是大家讨论的，深思熟虑的，然后问他的解决方案。
<br>
<br>      我面试的这些人，有时让我很感慨，为什么工作了四五年的人，甚至是十年的人，号称自己精通Dojo，但是一些基础性问题都不清楚，因为我是初学者，但是我会买一本Dojo之父写的精通Dojo去学习，甚至于我带的一个大四的实习生都知道去遍历网上所有的Dojo基础资料，然后把源代码看看。我需要的是，当我问及一个问题时，告诉我Dojo正确的做法是什么，而不是仅跟我一样，遇到一个JS问题，只能去网上搜一段代码，改改放到项目中，甚至于那段代码他都不完全理解。比如我现在也在阅读Javascript高级编程指南，以了解细节。
<br>       
<br>       跟一个很牛的同事一起面试别人JS，我觉得那人技术还算熟练，但是我的同事摇摇头说，一个人工作了四年，连如何用JS模拟Java中的类，JS的事件框架是怎么回事都不清楚，怎么能行呢。
<br>
<br>       我想，或许，这也是我的奋斗目标：
<br>       1 成为丁字形人才，有一项自己特别精通的技术，比如我的那位同事精通Extjs，精通JBPM，精通Spring Security，那是真的精通，另一位同事精通Lucence，还有的精通JQuery，有的非常熟悉Oracle。
<br>       2 其实我对于我想招的人的要求，就是对自己的基本要求。
<br>          
          
          <br><br>
          作者: <a href="http://sslaowan.javaeye.com">sslaowan</a> 
          <br>
          声明: 本文系JavaEye网站发布的原创文章，未经作者书面许可，严禁任何网站转载本文，否则必将追究法律责任！
          <br><br>
          <span style="color:red">
            <a href="http://www.javaeye.com/topic/833774" style="color:red">已有 <strong>7</strong> 人发表回复，猛击-&gt;&gt;<strong>这里</strong>&lt;&lt;-参与讨论</a>
          </span>
          <br><br><br>
<span style="color:#e28822">JavaEye推荐</span>
<br>
<ul><li><a href="http://www.iteye.com/clicks/433"><span style="color:red;font-weight:bold">—软件人才免语言低担保 赴美带薪读研！— </span></a></li></ul>
<br><br><br>