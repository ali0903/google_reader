---
layout: post
title:  "试用Workflow开发WPF应用程序"
date:   2010-08-20 22:29:00
author: suyan010203
categories: program
---

## 试用Workflow开发WPF应用程序
### by suyan010203
### at 2010-08-20 22:29:00
### original <http://www.cnblogs.com/suyan010203/archive/2010/08/20/1805007.html>

<p><a href="http://www.cnblogs.com/suyan010203/"><img src="http://pic.cnblogs.com/face/u116892.jpg" alt="" border="0"></a><br>作者: <a href="http://www.cnblogs.com/suyan010203/">suyan010203</a> 发表于 2010-08-20 22:29 <a href="http://www.cnblogs.com/suyan010203/archive/2010/08/20/1805007.html">原文链接</a> 阅读: 646 评论: 0</p><p><span style="font-size:12pt">     研究了半个月的《WF高级程序设计》，我觉得这个框架做的太有价值了，又将WCF和Web服务结合起来了，提高了它的应用领域。工作流使我们能够轻松地建模系统，实现真正逻辑意义上的人机交互功能。这在游戏开发中特别有用，而且将开发人员从架构的角度来设计程序，提高程序设计的逻辑性和可读性。由于书上的例子都是在WinForm和控制台上的，所以我觉得有必要运用到WPF开发中。由于WPF架构与WinForm许多的差异，所以我试着做了一个WPF的随机选数游戏来体验一下WPF与WF的结合。</span></p>
<p><span style="font-size:12pt">     由于本例子主要目的在于体现一个顺序机制，按理说应该是用顺序工作流来处理这个机制，考虑到以后的扩展，我选择了状态机工作流。我们先来了解一下状态机工作流，所谓“状态机工作流”是指一组应用程序状态以及状态之间的可能的转换。每个状态都可以处理多个外部事件，外部事件能够触发器子活动的执行，而自活动又可能包含一个到其他状态的转换。</span></p>
<p><span style="font-size:12pt">    先来看一下工作流机制：</span></p>
<p><a href="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E5%9B%BE%E7%89%873_4.png"><img height="259" width="188" src="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E5%9B%BE%E7%89%873_thumb_1.png" alt="图片3" border="0" title="图片3" style="background-image:none;padding-left:0px;padding-right:0px;display:inline;padding-top:0px;border:0px"></a></p>
<p>一、建立一个空的工作流项目[一个dll]</p>
<p>     1、定义一个公共的接口</p>
<p>      在这个接口中设计了五个事件和一个方法。定义的事件是为了提供给工作流的使用。</p>
<div>
<pre><img height="16" width="11" src="http://www.cnblogs.com/Images/OutliningIndicators/ContractedBlock.gif" align="top"><img height="16" width="11" src="http://www.cnblogs.com/Images/OutliningIndicators/ExpandedBlockStart.gif" align="top"><span>Generic.xaml</span><span><span style="color:#0000ff">using</span> System;
<span style="color:#0000ff">using</span> System.Collections.Generic;
<span style="color:#0000ff">using</span> System.Linq;
<span style="color:#0000ff">using</span> System.Text;
<span style="color:#0000ff">using</span> System.Workflow.Activities;

<span style="color:#0000ff">namespace</span> SelectGameWorkflow
{
    [ExternalDataExchange]
    <span style="color:#0000ff">public</span> <span style="color:#0000ff">interface</span> IPointSelect
	{
        <span style="color:#808080">/// &lt;summary&gt;</span>
        <span style="color:#808080">/// 开a始?选?择?事?件t，?以?得?到?的?数簓最?大洙?者?获?胜骸?</span>
        <span style="color:#808080">/// &lt;/summary&gt;</span>
        <span style="color:#0000ff">event</span> EventHandler&lt;ExternalDataEventArgs&gt; StartSelect;

        <span style="color:#808080">/// &lt;summary&gt;</span>
        <span style="color:#808080">/// 结á束?选?择?事?件t</span>
        <span style="color:#808080">/// &lt;/summary&gt;</span>
        <span style="color:#0000ff">event</span> EventHandler&lt;ExternalDataEventArgs&gt; StopSelect;

        <span style="color:#808080">/// &lt;summary&gt;</span>
        <span style="color:#808080">/// 第台?一?个?玩?家ò开a始?选?</span>
        <span style="color:#808080">/// &lt;/summary&gt;</span>
        <span style="color:#0000ff">event</span> EventHandler&lt;ExternalDataEventArgs&gt; First;

        <span style="color:#808080">/// &lt;summary&gt;</span>
        <span style="color:#808080">/// 第台?二t个?玩?家ò开a始?选?</span>
        <span style="color:#808080">/// &lt;/summary&gt;</span>
        <span style="color:#0000ff">event</span> EventHandler&lt;ExternalDataEventArgs&gt; Second;

        <span style="color:#808080">/// &lt;summary&gt;</span>
        <span style="color:#808080">/// 第台?三▂个?玩?家ò开a始?选?，?并￠且ò结á束?游?戏·</span>
        <span style="color:#808080">/// &lt;/summary&gt;</span>
        <span style="color:#0000ff">event</span> EventHandler&lt;ExternalDataEventArgs&gt; Third;


        <span style="color:#808080">/// &lt;summary&gt;</span>
        <span style="color:#808080">/// 玩?家ò结á束?</span>
        <span style="color:#808080">/// &lt;/summary&gt;</span>
        <span style="color:#0000ff">event</span> EventHandler&lt;ExternalDataEventArgs&gt; Completed;
        

        <span style="color:#808080">/// &lt;summary&gt;</span>
        <span style="color:#808080">/// 将?消?息￠传?递蘗到?宿T主÷</span>
        <span style="color:#808080">/// &lt;/summary&gt;</span>
        <span style="color:#808080">/// &lt;param name=&quot;message&quot;&gt;&lt;/param&gt;</span>
        <span style="color:#0000ff">void</span> SendMessage(<span style="color:#0000ff">string</span> message);
	}
}
</span></pre>
</div>
<p>      2、实现接口服务的PointSelectService类，这个外部服务类提供一组事件调用方法和一个事件，供宿主使用，相应的代码如下：</p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif"><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif"><span>代码</span>
<div>
<pre><div><span style="color:#0000ff">using</span><span style="color:#000000"> System;<br></span><span style="color:#0000ff">using</span><span style="color:#000000"> System.Collections.Generic;<br></span><span style="color:#0000ff">using</span><span style="color:#000000"> System.Linq;<br></span><span style="color:#0000ff">using</span><span style="color:#000000"> System.Text;<br></span><span style="color:#0000ff">using</span><span style="color:#000000"> System.Workflow.Activities;<br></span><span style="color:#0000ff">using</span><span style="color:#000000"> System.Workflow.Runtime;<br><br></span><span style="color:#0000ff">namespace</span><span style="color:#000000"> SelectGameWorkflow<br>{<br>    </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>    </span><span style="color:#808080">///</span><span style="color:#008000"> 实现服务接口类<br>    </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">    </span><span style="color:#0000ff">public</span><span style="color:#000000">     </span><span style="color:#0000ff">class</span><span style="color:#000000"> PointSelectService:IPointSelect <br>    {<br>        </span><span style="color:#0000ff">#region</span><span style="color:#000000"> IPointSelect 成员</span><span style="color:#000000"><br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">event</span><span style="color:#000000"> EventHandler</span><span style="color:#000000">&lt;</span><span style="color:#000000">System.Workflow.Activities.ExternalDataEventArgs</span><span style="color:#000000">&gt;</span><span style="color:#000000"> StartSelect;<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">event</span><span style="color:#000000"> EventHandler</span><span style="color:#000000">&lt;</span><span style="color:#000000">System.Workflow.Activities.ExternalDataEventArgs</span><span style="color:#000000">&gt;</span><span style="color:#000000"> StopSelect;<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">event</span><span style="color:#000000"> EventHandler</span><span style="color:#000000">&lt;</span><span style="color:#000000">System.Workflow.Activities.ExternalDataEventArgs</span><span style="color:#000000">&gt;</span><span style="color:#000000"> First;<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">event</span><span style="color:#000000"> EventHandler</span><span style="color:#000000">&lt;</span><span style="color:#000000">System.Workflow.Activities.ExternalDataEventArgs</span><span style="color:#000000">&gt;</span><span style="color:#000000"> Second;<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">event</span><span style="color:#000000"> EventHandler</span><span style="color:#000000">&lt;</span><span style="color:#000000">System.Workflow.Activities.ExternalDataEventArgs</span><span style="color:#000000">&gt;</span><span style="color:#000000"> Third;<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">event</span><span style="color:#000000"> EventHandler</span><span style="color:#000000">&lt;</span><span style="color:#000000">ExternalDataEventArgs</span><span style="color:#000000">&gt;</span><span style="color:#000000"> Completed;<br><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> 调用宿主的事件<br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;message&quot;&gt;&lt;/param&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> SendMessage(</span><span style="color:#0000ff">string</span><span style="color:#000000"> message)<br>        {<br>            </span><span style="color:#0000ff">if</span><span style="color:#000000"> (MessageReceived </span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#0000ff">null</span><span style="color:#000000">)<br>                MessageReceived(</span><span style="color:#0000ff">this</span><span style="color:#000000">, </span><span style="color:#0000ff">new</span><span style="color:#000000"> MessageReceivedEventArgs(WorkflowEnvironment.WorkflowInstanceId, message));<br>        }<br><br>        </span><span style="color:#0000ff">#endregion</span><span style="color:#000000"><br><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> <br>        </span><span style="color:#808080">///</span><span style="color:#008000"> 工作流使用的事件<br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">event</span><span style="color:#000000"> EventHandler</span><span style="color:#000000">&lt;</span><span style="color:#000000">MessageReceivedEventArgs</span><span style="color:#000000">&gt;</span><span style="color:#000000"> MessageReceived;<br><br>        </span><span style="color:#0000ff">#region</span><span style="color:#000000"> 以下定义了一组供宿主使用的方法</span><span style="color:#000000"><br><br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> OnStartSelect(ExternalDataEventArgs e)<br>        {<br>            </span><span style="color:#0000ff">if</span><span style="color:#000000"> (StartSelect </span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#0000ff">null</span><span style="color:#000000">)<br>                StartSelect(</span><span style="color:#0000ff">null</span><span style="color:#000000">, e);<br>        }<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> OnStopSelect(ExternalDataEventArgs e)<br>        {<br>            </span><span style="color:#0000ff">if</span><span style="color:#000000"> (StopSelect </span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#0000ff">null</span><span style="color:#000000">)<br>                StopSelect(</span><span style="color:#0000ff">null</span><span style="color:#000000">, e);<br>        }<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> OnFirst(ExternalDataEventArgs e)<br>        {<br>            </span><span style="color:#0000ff">if</span><span style="color:#000000"> (First </span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#0000ff">null</span><span style="color:#000000">)<br>                First(</span><span style="color:#0000ff">null</span><span style="color:#000000">, e);<br>        }<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> OnSecond(ExternalDataEventArgs e)<br>        {<br>            </span><span style="color:#0000ff">if</span><span style="color:#000000"> (Second </span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#0000ff">null</span><span style="color:#000000">)<br>                Second(</span><span style="color:#0000ff">null</span><span style="color:#000000">, e);<br>        }<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> OnThird(ExternalDataEventArgs e)<br>        {<br>            </span><span style="color:#0000ff">if</span><span style="color:#000000"> (Third </span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#0000ff">null</span><span style="color:#000000">)<br>                Third(</span><span style="color:#0000ff">null</span><span style="color:#000000">, e);<br>        }<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> OnCompleted(ExternalDataEventArgs e)<br>        {<br>            </span><span style="color:#0000ff">if</span><span style="color:#000000"> (Completed </span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#0000ff">null</span><span style="color:#000000">)<br>                Completed(</span><span style="color:#0000ff">null</span><span style="color:#000000">, e);<br>        }<br>        </span><span style="color:#0000ff">#endregion</span><span style="color:#000000"><br><br>    }</span></div></pre>
</div>
</div>
<p>  这里还定义了一个EventArgs的派生类来传递服务消息： </p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif"><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif"><span>代码</span>
<div>
<pre><div><span style="color:#000000">   </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>    </span><span style="color:#808080">///</span><span style="color:#008000"> 把工作流的相应消息发送到本地服务中<br>    </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">    [Serializable]<br>    </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">class</span><span style="color:#000000"> MessageReceivedEventArgs : ExternalDataEventArgs<br>    {<br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">string</span><span style="color:#000000"> Message { </span><span style="color:#0000ff">get</span><span style="color:#000000">; </span><span style="color:#0000ff">set</span><span style="color:#000000">; }<br><br><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> 在构造器中传递消息，其中会将工作流的ID传递到基类中<br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;instanceId&quot;&gt;&lt;/param&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;message&quot;&gt;&lt;/param&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">        </span><span style="color:#0000ff">public</span><span style="color:#000000"> MessageReceivedEventArgs(Guid instanceId, </span><span style="color:#0000ff">string</span><span style="color:#000000"> message):</span><span style="color:#0000ff">base</span><span style="color:#000000">(instanceId )<br>        {<br>            </span><span style="color:#0000ff">this</span><span style="color:#000000">.Message </span><span style="color:#000000">=</span><span style="color:#000000"> message;<br>        }<br>    }</span></div></pre>
</div>
</div>
<p> 3、在刚才的项目中添加一个状态机工作流：</p>
<p>  这里面定义了一组状态事件处理，如表所示：</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E6%97%A0%E6%A0%87%E9%A2%98_2.png"><img height="186" width="556" src="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E6%97%A0%E6%A0%87%E9%A2%98_thumb.png" alt="无标题" border="0" title="无标题" style="background-image:none;padding-left:0px;padding-right:0px;display:inline;padding-top:0px;border:0px"></a>   <br>   除了DoneState状态之外，每个State都有定义了三个活动，按顺序分别是：</p>
<p>   handleExternalEventActivity、callExternalMethodActivity、setStateActivity，可以分别设置他们的接口、事件和方法，如图所示：</p>
<p>   <a href="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E6%8D%95%E8%8E%B7.png"><img height="305" width="170" src="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E6%8D%95%E8%8E%B7_thumb.png" alt="捕获" border="0" title="捕获" style="background-image:none;padding-left:0px;padding-right:0px;display:inline;padding-top:0px;border:0px"></a>    整个状态机的工作流视图如下：       <a href="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E6%8D%95%E8%8E%B71.png"><img height="345" width="332" src="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E6%8D%95%E8%8E%B71_thumb.png" alt="捕获1" border="0" title="捕获1" style="background-image:none;padding-left:0px;padding-right:0px;display:inline;padding-top:0px;border:0px"></a></p>
<p>  现在我们可以重新生成动态库了，得到SelectGameWorkflow.dll文件</p>
<p> 二、添加一个WPF项目作为工作流的宿主，这个WPF命名为SelectGameWPF，</p>
<p>     1、 先设计界面，效果如下： </p>
<p>   <a href="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E6%8D%95%E8%8E%B73.png"><img height="283" width="394" src="http://images.cnblogs.com/cnblogs_com/suyan010203/WindowsLiveWriter/f71901db6f8a_1173A/%E6%8D%95%E8%8E%B73_thumb.png" alt="捕获3" border="0" title="捕获3" style="background-image:none;padding-left:0px;padding-right:0px;display:inline;padding-top:0px;border:0px"></a></p>
<p>   相应的XAML代码如下：</p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif"><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif"><span>代码</span>
<div>
<pre><div><span style="color:#000000">&lt;</span><span style="color:#000000">Window x:Class</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">SelectGameWPF.Window1</span><span style="color:#800000">"</span><span style="color:#000000"><br>    xmlns</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style="color:#800000">"</span><span style="color:#000000"><br>    xmlns:x</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">http://schemas.microsoft.com/winfx/2006/xaml</span><span style="color:#800000">"</span><span style="color:#000000"> <br>    Title</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">碰手气</span><span style="color:#800000">"</span><span style="color:#000000"> Height</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">300</span><span style="color:#800000">"</span><span style="color:#000000"> Width</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">300</span><span style="color:#800000">"</span><span style="color:#000000"> xmlns:my</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">clr-namespace:C4F.VistaP2P.WPF.Chat;assembly=C4F_P2PWPFControls</span><span style="color:#800000">"</span><span style="color:#000000"> Loaded</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Window_Loaded</span><span style="color:#800000">"</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>    </span><span style="color:#000000">&lt;</span><span style="color:#000000">Grid Background</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">LightBlue</span><span style="color:#800000">"</span><span style="color:#000000"> </span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>        </span><span style="color:#000000">&lt;</span><span style="color:#000000">Grid.RowDefinitions</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;</span><span style="color:#000000">RowDefinition Height</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">50</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;</span><span style="color:#000000">RowDefinition</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>        </span><span style="color:#000000">&lt;/</span><span style="color:#000000">Grid.RowDefinitions</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>        </span><span style="color:#000000">&lt;</span><span style="color:#000000">TextBlock Height</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">58</span><span style="color:#800000">"</span><span style="color:#000000">  Text</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">{Binding Number}</span><span style="color:#800000">"</span><span style="color:#000000"> x:Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">numberText</span><span style="color:#800000">"</span><span style="color:#000000"> VerticalAlignment</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Top</span><span style="color:#800000">"</span><span style="color:#000000"> FontSize</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">48</span><span style="color:#800000">"</span><span style="color:#000000"> HorizontalAlignment</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Center</span><span style="color:#800000">"</span><span style="color:#000000"> FontFamily</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Broadway</span><span style="color:#800000">"</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;</span><span style="color:#000000">TextBlock.OpacityMask</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>                </span><span style="color:#000000">&lt;</span><span style="color:#000000">LinearGradientBrush EndPoint</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">0.5,1</span><span style="color:#800000">"</span><span style="color:#000000"> StartPoint</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">0.5,0</span><span style="color:#800000">"</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>                    </span><span style="color:#000000">&lt;</span><span style="color:#000000">GradientStop Color</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">#E5000000</span><span style="color:#800000">"</span><span style="color:#000000"> Offset</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">0</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>                    </span><span style="color:#000000">&lt;</span><span style="color:#000000">GradientStop Color</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">#99FFFFFF</span><span style="color:#800000">"</span><span style="color:#000000"> Offset</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">1</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>                </span><span style="color:#000000">&lt;/</span><span style="color:#000000">LinearGradientBrush</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;/</span><span style="color:#000000">TextBlock.OpacityMask</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;</span><span style="color:#000000">TextBlock.Foreground</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>                </span><span style="color:#000000">&lt;</span><span style="color:#000000">LinearGradientBrush EndPoint</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">0.5,1</span><span style="color:#800000">"</span><span style="color:#000000"> StartPoint</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">0.5,0</span><span style="color:#800000">"</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>                    </span><span style="color:#000000">&lt;</span><span style="color:#000000">GradientStop Color</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">#FFED7B69</span><span style="color:#800000">"</span><span style="color:#000000"> Offset</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">0</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>                    </span><span style="color:#000000">&lt;</span><span style="color:#000000">GradientStop Color</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">#CCFFFFFF</span><span style="color:#800000">"</span><span style="color:#000000"> Offset</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">0.385</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>                    </span><span style="color:#000000">&lt;</span><span style="color:#000000">GradientStop Color</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">#E8E78851</span><span style="color:#800000">"</span><span style="color:#000000"> Offset</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">0.931</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>                </span><span style="color:#000000">&lt;/</span><span style="color:#000000">LinearGradientBrush</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;/</span><span style="color:#000000">TextBlock.Foreground</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>        </span><span style="color:#000000">&lt;/</span><span style="color:#000000">TextBlock</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>        </span><span style="color:#000000">&lt;</span><span style="color:#000000">GroupBox HorizontalAlignment</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Left</span><span style="color:#800000">"</span><span style="color:#000000"> VerticalAlignment</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Top</span><span style="color:#800000">"</span><span style="color:#000000"> Grid.Row</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">1</span><span style="color:#800000">"</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;</span><span style="color:#000000">GroupBox.Header</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>                </span><span style="color:#000000">&lt;</span><span style="color:#000000">TextBlock Text</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">控制</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;/</span><span style="color:#000000">GroupBox.Header</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;</span><span style="color:#000000">StackPanel  Width</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">100</span><span style="color:#800000">"</span><span style="color:#000000"> x:Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">controlButtons</span><span style="color:#800000">"</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>                    </span><span style="color:#000000">&lt;</span><span style="color:#000000">Button x:Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">startBtn</span><span style="color:#800000">"</span><span style="color:#000000">  Content</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">开  始</span><span style="color:#800000">"</span><span style="color:#000000"> Height</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">40</span><span style="color:#800000">"</span><span style="color:#000000"> Margin</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">5,20</span><span style="color:#800000">"</span><span style="color:#000000"> Click</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">startBtn_Click</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>                    </span><span style="color:#000000">&lt;</span><span style="color:#000000">Button x:Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">stopBtn</span><span style="color:#800000">"</span><span style="color:#000000">  Content</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">停  止</span><span style="color:#800000">"</span><span style="color:#000000"> Height</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">40</span><span style="color:#800000">"</span><span style="color:#000000"> Margin</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">5,0,5,20</span><span style="color:#800000">"</span><span style="color:#000000"> Click</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">stopBtn_Click</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>                </span><span style="color:#000000">&lt;/</span><span style="color:#000000">StackPanel</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>        </span><span style="color:#000000">&lt;/</span><span style="color:#000000">GroupBox</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>        </span><span style="color:#000000">&lt;</span><span style="color:#000000">GroupBox x:Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">control</span><span style="color:#800000">"</span><span style="color:#000000"> Header</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">玩家</span><span style="color:#800000">"</span><span style="color:#000000"> HorizontalAlignment</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Right</span><span style="color:#800000">"</span><span style="color:#000000"> VerticalAlignment</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Top</span><span style="color:#800000">"</span><span style="color:#000000"> Grid.Row</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">1</span><span style="color:#800000">"</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;</span><span style="color:#000000">StackPanel  Width</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">100</span><span style="color:#800000">"</span><span style="color:#000000"> x:Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">playerButtons</span><span style="color:#800000">"</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>                </span><span style="color:#000000">&lt;</span><span style="color:#000000">Button x:Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">firstBtn</span><span style="color:#800000">"</span><span style="color:#000000">  Content</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">第一个玩家</span><span style="color:#800000">"</span><span style="color:#000000"> Height</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">40</span><span style="color:#800000">"</span><span style="color:#000000"> Margin</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">5,20</span><span style="color:#800000">"</span><span style="color:#000000"> Click</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">firstBtn_Click</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>                </span><span style="color:#000000">&lt;</span><span style="color:#000000">Button x:Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">secondBtn</span><span style="color:#800000">"</span><span style="color:#000000">  Content</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">第二个玩家</span><span style="color:#800000">"</span><span style="color:#000000"> Height</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">40</span><span style="color:#800000">"</span><span style="color:#000000"> Margin</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">5,0,5,20</span><span style="color:#800000">"</span><span style="color:#000000"> Click</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">secondBtn_Click</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>                </span><span style="color:#000000">&lt;</span><span style="color:#000000">Button x:Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">thirdBtn</span><span style="color:#800000">"</span><span style="color:#000000">  Content</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">第三个玩家</span><span style="color:#800000">"</span><span style="color:#000000"> Height</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">40</span><span style="color:#800000">"</span><span style="color:#000000"> Margin</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">5,0,5,20</span><span style="color:#800000">"</span><span style="color:#000000"> Click</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">thirdBtn_Click</span><span style="color:#800000">"</span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>            </span><span style="color:#000000">&lt;/</span><span style="color:#000000">StackPanel</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>        </span><span style="color:#000000">&lt;/</span><span style="color:#000000">GroupBox</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br>        </span><span style="color:#000000">&lt;</span><span style="color:#000000">TextBlock Grid.Row</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">1</span><span style="color:#800000">"</span><span style="color:#000000"> Height</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">23</span><span style="color:#800000">"</span><span style="color:#000000"> HorizontalAlignment</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Left</span><span style="color:#800000">"</span><span style="color:#000000">  Name</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">textBlock1</span><span style="color:#800000">"</span><span style="color:#000000"> Text</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">{Binding Message}</span><span style="color:#800000">"</span><span style="color:#000000"> VerticalAlignment</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">Bottom</span><span style="color:#800000">"</span><span style="color:#000000"> Width</span><span style="color:#000000">=</span><span style="color:#800000">"</span><span style="color:#800000">160</span><span style="color:#800000">"</span><span style="color:#000000"> </span><span style="color:#000000">/&gt;</span><span style="color:#000000"><br>    </span><span style="color:#000000">&lt;/</span><span style="color:#000000">Grid</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br></span><span style="color:#000000">&lt;/</span><span style="color:#000000">Window</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br></span></div></pre>
</div>
</div>
<p> 2、添加两个更新界面的依赖属性：</p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif"><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif"><span>代码</span>
<div>
<pre><div><span style="color:#000000">      </span><span style="color:#0000ff">#region</span><span style="color:#000000"> 定义一个随机数和消息</span><span style="color:#000000"><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">static</span><span style="color:#000000"> </span><span style="color:#0000ff">readonly</span><span style="color:#000000"> DependencyProperty NumberProperty </span><span style="color:#000000">=</span><span style="color:#000000"> DependencyProperty.Register(</span><span style="color:#800000">"</span><span style="color:#800000">Number</span><span style="color:#800000">"</span><span style="color:#000000">, </span><span style="color:#0000ff">typeof</span><span style="color:#000000">(</span><span style="color:#0000ff">int</span><span style="color:#000000">), </span><span style="color:#0000ff">typeof</span><span style="color:#000000">(Window1), </span><span style="color:#0000ff">new</span><span style="color:#000000"> PropertyMetadata(</span><span style="color:#800080">0</span><span style="color:#000000">));<br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">static</span><span style="color:#000000"> </span><span style="color:#0000ff">readonly</span><span style="color:#000000"> DependencyProperty MessageProperty </span><span style="color:#000000">=</span><span style="color:#000000"> DependencyProperty.Register(</span><span style="color:#800000">"</span><span style="color:#800000">Message</span><span style="color:#800000">"</span><span style="color:#000000">, </span><span style="color:#0000ff">typeof</span><span style="color:#000000">(</span><span style="color:#0000ff">string</span><span style="color:#000000">), </span><span style="color:#0000ff">typeof</span><span style="color:#000000">(Window1), </span><span style="color:#0000ff">new</span><span style="color:#000000"> PropertyMetadata(</span><span style="color:#0000ff">string</span><span style="color:#000000">.Empty));<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">int</span><span style="color:#000000"> Number {<br>            </span><span style="color:#0000ff">get</span><span style="color:#000000"> { </span><span style="color:#0000ff">return</span><span style="color:#000000"> (</span><span style="color:#0000ff">int</span><span style="color:#000000">)GetValue(NumberProperty); }<br>            </span><span style="color:#0000ff">set</span><span style="color:#000000"> { SetValue(NumberProperty, value); }<br>        }<br><br>        </span><span style="color:#0000ff">public</span><span style="color:#000000"> </span><span style="color:#0000ff">string</span><span style="color:#000000"> Message {<br>            </span><span style="color:#0000ff">get</span><span style="color:#000000"> { </span><span style="color:#0000ff">return</span><span style="color:#000000"> (</span><span style="color:#0000ff">string</span><span style="color:#000000">)GetValue(MessageProperty); }<br>            </span><span style="color:#0000ff">set</span><span style="color:#000000"> { SetValue(MessageProperty, value); }<br>        }<br>        </span><span style="color:#0000ff">#endregion</span></div></pre>
</div>
</div>
<p> 为了能够在UI线程中更新视觉元素，我们使用了和WinForm的Invoke异步调用的相同的Dispatcher类的BeginInvoke方法： </p>
<p>如下所示：</p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif"><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif"><span>代码</span>
<div>
<pre><div><span style="color:#000000">     </span><span style="color:#0000ff">private</span><span style="color:#000000"> </span><span style="color:#0000ff">delegate</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> UpdateDelegate();<br><br>  </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> 在指定的时间段内产生随机数<br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;e&quot;&gt;&lt;/param&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">        </span><span style="color:#0000ff">void</span><span style="color:#000000"> timer_Tick(</span><span style="color:#0000ff">object</span><span style="color:#000000"> sender, EventArgs e)<br>        {<br>            </span><span style="color:#808080">///</span><span style="color:#008000">将数字呈现到前台</span><span style="color:#808080"><br></span><span style="color:#000000">            UpdateDelegate theDelg </span><span style="color:#000000">=</span><span style="color:#000000"> () </span><span style="color:#000000">=&gt;</span><span style="color:#000000"><br>            {<br>                Number </span><span style="color:#000000">=</span><span style="color:#000000"> rand.Next(</span><span style="color:#800080">100</span><span style="color:#000000">);<br>            };<br>            Dispatcher.BeginInvoke(theDelg, </span><span style="color:#0000ff">null</span><span style="color:#000000">);<br>        }</span></div></pre>
</div>
</div>
<p>其他的更新方式如上面所示</p>
<p>  3、接下来调用工作流项目以及将上面的SelectGameService服务加入到运行时：</p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif"><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif"><span>代码</span>
<div>
<pre><div><span style="color:#000000">     </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> 初始化工作流服务<br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;e&quot;&gt;&lt;/param&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">        </span><span style="color:#0000ff">private</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> Window_Loaded(</span><span style="color:#0000ff">object</span><span style="color:#000000"> sender, RoutedEventArgs e)<br>        {<br>            manager </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#0000ff">new</span><span style="color:#000000"> WorkflowRuntimeManager(</span><span style="color:#0000ff">new</span><span style="color:#000000"> WorkflowRuntime());<br><br>            </span><span style="color:#008000">//</span><span style="color:#008000">在转换到新的状态时发生</span><span style="color:#008000"><br></span><span style="color:#000000">            manager.WorkflowRuntime.WorkflowIdled </span><span style="color:#000000">+=</span><span style="color:#000000"> </span><span style="color:#0000ff">new</span><span style="color:#000000"> EventHandler</span><span style="color:#000000">&lt;</span><span style="color:#000000">WorkflowEventArgs</span><span style="color:#000000">&gt;</span><span style="color:#000000">(WorkflowRuntime_WorkflowIdled);<br>            AddServices(manager.WorkflowRuntime);<br>        }<br><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> 处理Idle事件<br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;e&quot;&gt;&lt;/param&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">        </span><span style="color:#0000ff">void</span><span style="color:#000000"> WorkflowRuntime_WorkflowIdled(</span><span style="color:#0000ff">object</span><span style="color:#000000"> sender, WorkflowEventArgs e)<br>        {<br>            UpdateDelegate theDelg </span><span style="color:#000000">=</span><span style="color:#000000"> () </span><span style="color:#000000">=&gt;</span><span style="color:#000000"><br>            {<br>                EnableEventButton(</span><span style="color:#0000ff">false</span><span style="color:#000000">);<br><br>                </span><span style="color:#008000">//</span><span style="color:#008000">得到内部队列信息</span><span style="color:#008000"><br></span><span style="color:#000000">                ReadOnlyCollection</span><span style="color:#000000">&lt;</span><span style="color:#000000">WorkflowQueueInfo</span><span style="color:#000000">&gt;</span><span style="color:#000000"> queueInfoData </span><span style="color:#000000">=</span><span style="color:#000000"> instanceWrapper.WorkflowInstance.GetWorkflowQueueData();<br><br>                </span><span style="color:#0000ff">if</span><span style="color:#000000"> (queueInfoData </span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#0000ff">null</span><span style="color:#000000">) {<br>                    </span><span style="color:#0000ff">foreach</span><span style="color:#000000"> (WorkflowQueueInfo  info </span><span style="color:#0000ff">in</span><span style="color:#000000"> queueInfoData) {<br>                        EventQueueName eventQueue </span><span style="color:#000000">=</span><span style="color:#000000"> info.QueueName </span><span style="color:#0000ff">as</span><span style="color:#000000"> EventQueueName;<br><br>                        </span><span style="color:#0000ff">if</span><span style="color:#000000"> (eventQueue </span><span style="color:#000000">==</span><span style="color:#000000"> </span><span style="color:#0000ff">null</span><span style="color:#000000">)<br>                            </span><span style="color:#0000ff">break</span><span style="color:#000000">;<br><br>                        EnableButtonForEvent(eventQueue.MethodName);<br>                    }<br>                }<br>            };<br><br>            Dispatcher.BeginInvoke(theDelg, </span><span style="color:#0000ff">null</span><span style="color:#000000">);<br>        }<br><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> 根据事件名启用按钮<br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;p&quot;&gt;&lt;/param&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">        </span><span style="color:#0000ff">private</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> EnableButtonForEvent(</span><span style="color:#0000ff">string</span><span style="color:#000000"> eventName)<br>        {<br>            var buttons1 </span><span style="color:#000000">=</span><span style="color:#000000"> controlButtons.Children;<br>            var buttons2 </span><span style="color:#000000">=</span><span style="color:#000000"> playerButtons.Children;<br><br>            </span><span style="color:#0000ff">foreach</span><span style="color:#000000"> (Button btn </span><span style="color:#0000ff">in</span><span style="color:#000000"> buttons1) {<br>                </span><span style="color:#0000ff">if</span><span style="color:#000000"> (btn.Tag.ToString() </span><span style="color:#000000">==</span><span style="color:#000000"> eventName)<br>                    btn.IsEnabled </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#0000ff">true</span><span style="color:#000000">;<br>            }<br>            </span><span style="color:#0000ff">foreach</span><span style="color:#000000"> (Button btn </span><span style="color:#0000ff">in</span><span style="color:#000000"> buttons2)<br>            {<br>                </span><span style="color:#0000ff">if</span><span style="color:#000000"> (btn.Tag.ToString() </span><span style="color:#000000">==</span><span style="color:#000000"> eventName)<br>                    btn.IsEnabled </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#0000ff">true</span><span style="color:#000000">;<br>            }<br>        }<br><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> 将服务添加到工作流运行时<br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;workflowRuntime&quot;&gt;&lt;/param&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">        </span><span style="color:#0000ff">private</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> AddServices(WorkflowRuntime workflowRuntime)<br>        {<br>            ExternalDataExchangeService exchangeService </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#0000ff">new</span><span style="color:#000000"> ExternalDataExchangeService();<br>            workflowRuntime.AddService(exchangeService);<br><br>            pointSelectService </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#0000ff">new</span><span style="color:#000000"> PointSelectService();<br>            pointSelectService.MessageReceived </span><span style="color:#000000">+=</span><span style="color:#000000"> </span><span style="color:#0000ff">new</span><span style="color:#000000"> EventHandler</span><span style="color:#000000">&lt;</span><span style="color:#000000">MessageReceivedEventArgs</span><span style="color:#000000">&gt;</span><span style="color:#000000">(pointSelectService_MessageReceived);<br>            exchangeService.AddService(pointSelectService);<br>        }<br><br>        </span><span style="color:#0000ff">void</span><span style="color:#000000"> pointSelectService_MessageReceived(</span><span style="color:#0000ff">object</span><span style="color:#000000"> sender, MessageReceivedEventArgs e)<br>        {<br>            UpdateDelegate theDelg </span><span style="color:#000000">=</span><span style="color:#000000"> () </span><span style="color:#000000">=&gt;</span><span style="color:#000000"><br>            {<br>                Message </span><span style="color:#000000">=</span><span style="color:#000000"> e.Message;<br>            };<br><br>            </span><span style="color:#008000">//</span><span style="color:#008000">保存工作流实例标识</span><span style="color:#008000"><br></span><span style="color:#000000">           System.Threading.Thread.Sleep(</span><span style="color:#800080">1000</span><span style="color:#000000">);<br>           timer.Start();<br>           instanceId </span><span style="color:#000000">=</span><span style="color:#000000"> e.InstanceId;<br><br>           Dispatcher.BeginInvoke(theDelg, </span><span style="color:#0000ff">null</span><span style="color:#000000">);<br>        }<br>    }</span></div></pre>
</div>
</div>
<p> 4、初始化按钮状态和定时器</p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif"><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif"><span>代码</span>
<div>
<pre><div><span style="color:#000000">   </span><span style="color:#0000ff">public</span><span style="color:#000000"> Window1()<br>        {<br>            InitializeComponent();<br>            timer </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#0000ff">new</span><span style="color:#000000"> DispatcherTimer();<br>            timer.Interval </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#0000ff">new</span><span style="color:#000000"> TimeSpan(</span><span style="color:#800080">0</span><span style="color:#000000">, </span><span style="color:#800080">0</span><span style="color:#000000">, </span><span style="color:#800080">0</span><span style="color:#000000">, </span><span style="color:#800080">0</span><span style="color:#000000">, </span><span style="color:#800080">300</span><span style="color:#000000">);<br>            timer.Tick </span><span style="color:#000000">+=</span><span style="color:#000000"> </span><span style="color:#0000ff">new</span><span style="color:#000000"> EventHandler(timer_Tick);<br>            rand </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#0000ff">new</span><span style="color:#000000"> Random();<br><br>            </span><span style="color:#008000">//</span><span style="color:#008000">设置按钮标识</span><span style="color:#008000"><br></span><span style="color:#000000">            startBtn.Tag </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">StartSelect</span><span style="color:#800000">"</span><span style="color:#000000">;<br>            stopBtn.Tag </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">StopSelect</span><span style="color:#800000">"</span><span style="color:#000000">;<br>            firstBtn.Tag </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">First</span><span style="color:#800000">"</span><span style="color:#000000">;<br>            secondBtn.Tag </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">Second</span><span style="color:#800000">"</span><span style="color:#000000">;<br>            thirdBtn.Tag </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">Third</span><span style="color:#800000">"</span><span style="color:#000000">;<br><br>            EnableEventButton(</span><span style="color:#0000ff">false</span><span style="color:#000000">);<br><br>            DataContext </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#0000ff">this</span><span style="color:#000000">;<br>        }<br><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> 控制按钮的状态<br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;/summary&gt;</span><span style="color:#008000"><br>        </span><span style="color:#808080">///</span><span style="color:#008000"> </span><span style="color:#808080">&lt;param name=&quot;p&quot;&gt;&lt;/param&gt;</span><span style="color:#808080"><br></span><span style="color:#000000">        </span><span style="color:#0000ff">private</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> EnableEventButton(</span><span style="color:#0000ff">bool</span><span style="color:#000000"> p)<br>        {<br>            stopBtn.IsEnabled </span><span style="color:#000000">=</span><span style="color:#000000"> p;<br>            firstBtn.IsEnabled </span><span style="color:#000000">=</span><span style="color:#000000"> p;<br>            secondBtn.IsEnabled </span><span style="color:#000000">=</span><span style="color:#000000"> p;<br>            thirdBtn.IsEnabled </span><span style="color:#000000">=</span><span style="color:#000000"> p;<br>        }</span></div></pre>
</div>
</div>
<p>5、添加所有按钮的Click事件，其目的是为了调用服务的方法和宿主本身的定时器的，如下所示：</p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif"><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif"><span>代码</span>
<div>
<pre><div><span style="color:#000000">   </span><span style="color:#0000ff">#region</span><span style="color:#000000"> Click events</span><span style="color:#000000"><br><br>        </span><span style="color:#0000ff">private</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> firstBtn_Click(</span><span style="color:#0000ff">object</span><span style="color:#000000"> sender, System.Windows.RoutedEventArgs e)<br>        {<br>            </span><span style="color:#008000">//</span><span style="color:#008000"> TODO: Add event handler implementation here.</span><span style="color:#008000"><br></span><span style="color:#000000">            </span><span style="color:#0000ff">try</span><span style="color:#000000"><br>            {<br>                pointSelectService.OnFirst(GetEventArgs());<br>                timer.Stop();<br>                </span><span style="color:#0000ff">if</span><span style="color:#000000"> (Number </span><span style="color:#000000">&gt;</span><span style="color:#000000"> temp)<br>                {<br>                    temp </span><span style="color:#000000">=</span><span style="color:#000000"> Number;<br>                    tempPlayer </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">First</span><span style="color:#800000">"</span><span style="color:#000000">;<br>                }<br>            }<br>            </span><span style="color:#0000ff">catch</span><span style="color:#000000">(Exception ex) {<br>                HandleException(ex);<br>            }<br>        }<br><br>        </span><span style="color:#0000ff">private</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> secondBtn_Click(</span><span style="color:#0000ff">object</span><span style="color:#000000"> sender, System.Windows.RoutedEventArgs e)<br>        {<br>            </span><span style="color:#008000">//</span><span style="color:#008000"> TODO: Add event handler implementation here.</span><span style="color:#008000"><br></span><span style="color:#000000">            </span><span style="color:#0000ff">try</span><span style="color:#000000"><br>            {<br>                pointSelectService.OnSecond(GetEventArgs());<br>                timer.Stop();<br><br>                </span><span style="color:#0000ff">if</span><span style="color:#000000"> (Number </span><span style="color:#000000">&gt;</span><span style="color:#000000"> temp)<br>                {<br>                    temp </span><span style="color:#000000">=</span><span style="color:#000000"> Number;<br>                    tempPlayer </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">Second</span><span style="color:#800000">"</span><span style="color:#000000">;<br>                }<br>            }<br>            </span><span style="color:#0000ff">catch</span><span style="color:#000000"> (Exception ex) {<br>                HandleException(ex);<br>            }<br>        }<br><br>        </span><span style="color:#0000ff">private</span><span style="color:#000000"> </span><span style="color:#0000ff">void</span><span style="color:#000000"> thirdBtn_Click(</span><span style="color:#0000ff">object</span><span style="color:#000000"> sender, System.Windows.RoutedEventArgs e)<br>        {<br>            </span><span style="color:#008000">//</span><span style="color:#008000"> TODO: Add event handler implementation here.</span><span style="color:#008000"><br></span><span style="color:#000000">            </span><span style="color:#0000ff">try</span><span style="color:#000000"><br>            {<br>                pointSelectService.OnThird(GetEventArgs());<br>                timer.Stop();<br><br>                </span><span style="color:#0000ff">if</span><span style="color:#000000"> (Number </span><span style="color:#000000">&gt;</span><span style="color:#000000"> temp)<br>                {<br>                    temp </span><span style="color:#000000">=</span><span style="color:#000000"> Number;<br>                    tempPlayer </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">Third</span><span style="color:#800000">"</span><span style="color:#000000">;<br>                }<br><br>                </span><span style="color:#0000ff">if</span><span style="color:#000000"> (tempPlayer </span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#0000ff">string</span><span style="color:#000000">.Empty)<br>                {<br>                    UpdateDelegate theDelg </span><span style="color:#000000">=</span><span style="color:#000000"> () </span><span style="color:#000000">=&gt;</span><span style="color:#000000"><br>                    {<br>                        Message </span><span style="color:#000000">=</span><span style="color:#000000"> tempPlayer </span><span style="color:#000000">+</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">得到最大数: </span><span style="color:#800000">"</span><span style="color:#000000"> </span><span style="color:#000000">+</span><span style="color:#000000"> temp.ToString();<br>                    };<br>                    Dispatcher.BeginInvoke(theDelg, </span><span style="color:#0000ff">null</span><span style="color:#000000">);<br>                }<br>            }<br>            </span><span style="color:#0000ff">catch</span><span style="color:#000000"> (Exception ex) {<br>                HandleException(ex);<br>            }<br>        }<br><br>        </span><span style="color:#0000ff">#endregion</span></div></pre>
</div>
</div>
<p>  至此，整个工程全部完成，现在在启动应用程序以后，我们就可以按如开头的工作流图的顺序依次 ：Start-First-Second-Third-Start。 </p>
<p>其实这个程序我们可以演化到多用户顺序执行程序，如网络麻将、斗地主等互动游戏的结合。</p>
<p>   完整代码下载：<a href="http://files.cnblogs.com/suyan010203/SelectGameWorkflow.rar">Workflow</a></p><img src="http://www.cnblogs.com/suyan010203/aggbug/1805007.html?type=1" width="1" height="1" alt=""><p>评论: 0　<a href="http://www.cnblogs.com/suyan010203/archive/2010/08/20/1805007.html#pagedcomment">查看评论</a>　<a href="http://www.cnblogs.com/suyan010203/archive/2010/08/20/1805007.html#commentform">发表评论</a></p><p><a href="http://job.cnblogs.com/">程序员找工作，就在博客园</a></p><hr><p>最新新闻：<br>· <a href="http://news.cnblogs.com/n/71535/">马云传媒梦构筑“大淘宝”</a><span style="color:gray">(2010-08-21 15:32)</span><br>· <a href="http://news.cnblogs.com/n/71534/">中移动入股浦发获批 将成第二大股东</a><span style="color:gray">(2010-08-21 14:40)</span><br>· <a href="http://news.cnblogs.com/n/71533/">IT史上十大收购案</a><span style="color:gray">(2010-08-21 14:07)</span><br>· <a href="http://news.cnblogs.com/n/71532/">Google TV最新视频</a><span style="color:gray">(2010-08-21 13:36)</span><br>· <a href="http://news.cnblogs.com/n/71530/">Facebook收购社交活动服务公司Hot Potato</a><span style="color:gray">(2010-08-21 13:10)</span><br></p><p>编辑推荐：<a href="http://www.cnblogs.com/nick4/archive/2010/08/19/1803393.html">十年技术，不要再迷茫</a><br></p><p>网站导航：<a href="http://www.cnblogs.com">博客园首页</a>  <a href="http://home.cnblogs.com/">个人主页</a>  <a href="http://news.cnblogs.com">新闻</a>  <a href="http://home.cnblogs.com/ing/">闪存</a>  <a href="http://home.cnblogs.com/group/">小组</a>  <a href="http://space.cnblogs.com/q/">博问</a>  <a href="http://space.cnblogs.com">社区</a>  <a href="http://kb.cnblogs.com">知识库</a></p>