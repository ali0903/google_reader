---
layout: post
title:  "编程珠玑--旋转算法"
date:   2010-11-16 07:55:00
author: yjf512
categories: program
---

## 编程珠玑--旋转算法
### by yjf512
### at 2010-11-16 07:55:00
### original <http://www.cnblogs.com/yjf512/archive/2010/11/16/1878146.html>

<p><p>旋转算法出自《编程珠玑》第二章题目。</p>
<p> </p>
<p>《编程珠玑》一书对算法是极度推崇，这点意识在我们看书的时候每每都有被灌输。使用一种好的算法往往能使得程序更加漂亮，也很能带给我们程序员某种满足感。</p>
<p> </p>
<p><strong>题目：将一个n</strong><strong>元一维数组a[n]</strong><strong>左移i</strong><strong>个位置。例如，当n=8</strong><strong>，i=3</strong><strong>时，数组abcdefgh</strong><strong>旋转为defghabc</strong><strong>。请设计一个算法完成这个任务。</strong></p>
<p> </p>
<p><strong>1. 块交换法</strong>：</p>
<p>分析：将n元一维数组a[n]分解为两块，将第一块存储在临时数组中，将第二块前移i个单位，再将临时数组加入到第二块后面。</p>
<p> </p>
<p>如：n=8，i=3时，将第一块abc存储为临时变量，第二块defgh前移3个单位，再将abc放入到defgh后面。</p>
<p> </p>
<p>思考：这种方法最大的缺陷至少需要与两块中较小的一块大小的临时变量。</p>
<p> </p>
<p><strong>2.</strong><strong>杂技算法</strong></p>
<p>分析：将a[0]存储在一个临时变量中，然后将a[i]替换a[0],a[2i]替换a[i]….当一个循环结束的时候，若替换次数小于n，则从a[1]开始替换…，需要经过gcd（n,i）(n和i的最大公约数)次循环后，才能把每一个元素都移到该移的地方。</p>
<p><img src="https://vg2nwq.bay.livefilestore.com/y1mCyjkc3sZDellNYXOfWPSQEW0o2l8Pauwg4-5nC60gC0RmtPIpmo0AW-UPD3pklXdi2_x_tE0DB8g64ppnHbINpGKum6OQtb6fEGXJkOpTMX_A9ei6Vahre9nPdGApTaQ4irQiG0fBwPcLnNX-L0VRQ/Snap1_thumb%5B2%5D.png" alt="求逆算法" width="260" height="101"></p>
<p> </p>
<p>下面是代码实现：</p>
<p> </p>
<p> </p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""><span>代码</span>
<div>
<pre><div><span style="color:#000000">#include</span><span style="color:#000000">&lt;</span><span style="color:#000000">iostream</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br><br></span><span style="color:#0000ff">using</span><span style="color:#000000"> </span><span style="color:#0000ff">namespace</span><span style="color:#000000"> std;<br><br></span><span style="color:#008000">//</span><span style="color:#008000">求最大公约数<br></span><span style="color:#008000">//</span><span style="color:#008000">辗转相除法</span><span style="color:#008000"><br></span><span style="color:#0000ff">int</span><span style="color:#000000"> gcd(</span><span style="color:#0000ff">int</span><span style="color:#000000"> a, </span><span style="color:#0000ff">int</span><span style="color:#000000"> b)<br>{<br>    </span><span style="color:#0000ff">while</span><span style="color:#000000">( a</span><span style="color:#000000">!=</span><span style="color:#000000"> </span><span style="color:#800080">0</span><span style="color:#000000">)<br>    {<br>        </span><span style="color:#0000ff">if</span><span style="color:#000000">(a</span><span style="color:#000000">&gt;=</span><span style="color:#000000">b) a</span><span style="color:#000000">-=</span><span style="color:#000000">b;<br>        </span><span style="color:#0000ff">else</span><span style="color:#000000"> <br>        {<br>            </span><span style="color:#0000ff">int</span><span style="color:#000000"> t</span><span style="color:#000000">=</span><span style="color:#000000">a;<br>            a</span><span style="color:#000000">=</span><span style="color:#000000">b;<br>            b</span><span style="color:#000000">=</span><span style="color:#000000">t;<br>        }<br>    }<br>    </span><span style="color:#0000ff">return</span><span style="color:#000000"> b;<br>}<br><br></span><span style="color:#008000">//</span><span style="color:#008000">杂技算法</span><span style="color:#008000"><br></span><span style="color:#0000ff">void</span><span style="color:#000000"> Rotate1(</span><span style="color:#0000ff">char</span><span style="color:#000000">*</span><span style="color:#000000"> a,</span><span style="color:#0000ff">int</span><span style="color:#000000"> lenth,</span><span style="color:#0000ff">int</span><span style="color:#000000"> rotateLen)<br>{<br>    </span><span style="color:#0000ff">int</span><span style="color:#000000"> gcdNum </span><span style="color:#000000">=</span><span style="color:#000000"> gcd(lenth,rotateLen);<br>    </span><span style="color:#0000ff">for</span><span style="color:#000000">(</span><span style="color:#0000ff">int</span><span style="color:#000000"> i</span><span style="color:#000000">=</span><span style="color:#800080">0</span><span style="color:#000000">; i</span><span style="color:#000000">&lt;</span><span style="color:#000000">gcdNum; i</span><span style="color:#000000">++</span><span style="color:#000000">)<br>    {<br>        </span><span style="color:#0000ff">int</span><span style="color:#000000"> temp </span><span style="color:#000000">=</span><span style="color:#000000"> a[i];<br>        </span><span style="color:#0000ff">int</span><span style="color:#000000"> first </span><span style="color:#000000">=</span><span style="color:#000000"> i;<br>        </span><span style="color:#0000ff">while</span><span style="color:#000000">(</span><span style="color:#800080">1</span><span style="color:#000000">)<br>        {<br>            </span><span style="color:#0000ff">int</span><span style="color:#000000"> second </span><span style="color:#000000">=</span><span style="color:#000000"> (first</span><span style="color:#000000">+</span><span style="color:#000000">rotateLen)</span><span style="color:#000000">%</span><span style="color:#000000"> lenth;<br>            </span><span style="color:#0000ff">if</span><span style="color:#000000">(second </span><span style="color:#000000">==</span><span style="color:#000000"> i) </span><span style="color:#0000ff">break</span><span style="color:#000000">;<br>            a[first] </span><span style="color:#000000">=</span><span style="color:#000000"> a[second];<br>            first </span><span style="color:#000000">=</span><span style="color:#000000"> second;<br>        }<br>        a[first] </span><span style="color:#000000">=</span><span style="color:#000000"> temp;<br>    }<br>}<br><br><br></span><span style="color:#0000ff">int</span><span style="color:#000000"> main()<br>{<br>    </span><span style="color:#0000ff">char</span><span style="color:#000000"> a[</span><span style="color:#800080">9</span><span style="color:#000000">] </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">abcdefgh</span><span style="color:#800000">"</span><span style="color:#000000">;<br>    Rotate1(a,</span><span style="color:#800080">8</span><span style="color:#000000">,</span><span style="color:#800080">3</span><span style="color:#000000">);<br>}<br><br></span></div></pre>
</div>
</div>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p><strong>3. </strong><strong>求逆算法</strong></p>
<p>分析：将a[n]看做是向量BC组成，最终的结果需要时CB，过程如下：将BC各分别取逆B^-1C^-1，再对整个式子取逆，得到CB。</p>
<p> </p>
<p>举例：将abcdefgh中的abc看做向量B，defgh看做向量C。</p>
<p> </p>
<p>下面是代码实现：</p>
<p> </p>
<div><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt=""><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt=""><span>代码</span>
<div>
<pre><div><span style="color:#000000">#include</span><span style="color:#000000">&lt;</span><span style="color:#000000">iostream</span><span style="color:#000000">&gt;</span><span style="color:#000000"><br><br></span><span style="color:#0000ff">using</span><span style="color:#000000"> </span><span style="color:#0000ff">namespace</span><span style="color:#000000"> std;<br><br></span><span style="color:#0000ff">void</span><span style="color:#000000"> Revert(</span><span style="color:#0000ff">char</span><span style="color:#000000">*</span><span style="color:#000000"> str,</span><span style="color:#0000ff">int</span><span style="color:#000000"> start,</span><span style="color:#0000ff">int</span><span style="color:#000000"> end)<br>{<br>    </span><span style="color:#0000ff">while</span><span style="color:#000000">(start</span><span style="color:#000000">&lt;</span><span style="color:#000000">end)<br>    {<br>        </span><span style="color:#0000ff">char</span><span style="color:#000000"> temp </span><span style="color:#000000">=</span><span style="color:#000000"> str[start];<br>        str[start] </span><span style="color:#000000">=</span><span style="color:#000000"> str[end];<br>        str[end] </span><span style="color:#000000">=</span><span style="color:#000000"> temp;<br>        start</span><span style="color:#000000">++</span><span style="color:#000000">;<br>        end</span><span style="color:#000000">--</span><span style="color:#000000">;<br>    }<br>}<br><br></span><span style="color:#0000ff">void</span><span style="color:#000000"> Rotate1(</span><span style="color:#0000ff">char</span><span style="color:#000000">*</span><span style="color:#000000"> a,</span><span style="color:#0000ff">int</span><span style="color:#000000"> start,</span><span style="color:#0000ff">int</span><span style="color:#000000"> end)<br>{<br>    Revert(a,</span><span style="color:#800080">0</span><span style="color:#000000">,</span><span style="color:#800080">2</span><span style="color:#000000">);<br>    Revert(a,</span><span style="color:#800080">3</span><span style="color:#000000">,</span><span style="color:#800080">7</span><span style="color:#000000">);<br>    Revert(a,</span><span style="color:#800080">0</span><span style="color:#000000">,</span><span style="color:#800080">7</span><span style="color:#000000">);<br>}<br><br><br></span><span style="color:#0000ff">int</span><span style="color:#000000"> main()<br>{<br>    </span><span style="color:#0000ff">char</span><span style="color:#000000"> a[</span><span style="color:#800080">9</span><span style="color:#000000">] </span><span style="color:#000000">=</span><span style="color:#000000"> </span><span style="color:#800000">"</span><span style="color:#800000">abcdefgh</span><span style="color:#800000">"</span><span style="color:#000000">;<br>    Rotate1(a,</span><span style="color:#800080">0</span><span style="color:#000000">,</span><span style="color:#800080">7</span><span style="color:#000000">);<br>}<br><br></span></div></pre>
</div>
</div>
<p> </p>
<p> </p>
<p>思考题：写一个算法实现字符串反转，将abc.sina.com反转为com.sina.abc。</p>
<p> </p>
<p>分析：使用求逆算法，将abc，sina，com作为子串进行反转，再将整个字符串进行反转</p>
<p> </p>
<p>作者：Nick Ye(yjf512)<br>出处：（<a href="http://www.cnblogs.com/yjf512/">http://www.cnblogs.com/yjf512/</a>）<br>版权声明：本文的版权归作者与博客园共有。欢迎转载阅读，转载时须注明本文的详细链接。 </p>
<p> </p>
<p>参考文档：</p>
<p>编程珠玑（第二版）</p><img src="http://www.cnblogs.com/yjf512/aggbug/1878146.html?type=1" width="1" height="1" alt=""><p>作者: <a href="http://www.cnblogs.com/yjf512/">yjf512</a> 发表于 2010-11-16 07:55 <a href="http://www.cnblogs.com/yjf512/archive/2010/11/16/1878146.html">原文链接</a></p><p>评论: 10　<a href="http://www.cnblogs.com/yjf512/archive/2010/11/16/1878146.html#pagedcomment">查看评论</a>　<a href="http://www.cnblogs.com/yjf512/archive/2010/11/16/1878146.html#commentform">发表评论</a></p><hr><p>最新新闻：<br>· <a href="http://news.cnblogs.com/n/81293/">Google Maps手机版升级 能猜用户口味轻重</a><span style="color:gray">(2010-11-16 18:03)</span><br>· <a href="http://news.cnblogs.com/n/81292/">分析称Facebook推电子邮服务预示IPO临近</a><span style="color:gray">(2010-11-16 18:01)</span><br>· <a href="http://news.cnblogs.com/n/81291/">Eric Schmidt 说 Chrome OS 适合键盘，Android 适合手指头</a><span style="color:gray">(2010-11-16 17:56)</span><br>· <a href="http://news.cnblogs.com/n/81290/">酷团网称遭同行恶意攻击 团购网站竞争加剧</a><span style="color:gray">(2010-11-16 17:53)</span><br>· <a href="http://news.cnblogs.com/n/81289/">大神乔布斯的家庭办公室</a><span style="color:gray">(2010-11-16 17:21)</span><br></p><p>编辑推荐：<a href="http://news.cnblogs.com/n/81186/">Silverlight 的未来 – 12 月 2 日揭晓？</a><br></p><p>网站导航：<a href="http://www.cnblogs.com">博客园首页</a>  <a href="http://home.cnblogs.com/">我的园子</a>  <a href="http://news.cnblogs.com">新闻</a>  <a href="http://home.cnblogs.com/ing/">闪存</a>  <a href="http://home.cnblogs.com/group/">小组</a>  <a href="http://space.cnblogs.com/q/">博问</a>  <a href="http://kb.cnblogs.com">知识库</a></p></p>