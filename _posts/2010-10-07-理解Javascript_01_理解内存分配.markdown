---
layout: post
title:  "理解Javascript_01_理解内存分配"
date:   2010-10-07 18:55:00
author: 笨蛋的座右铭
categories: program
---

## 理解Javascript_01_理解内存分配
### by 笨蛋的座右铭
### at 2010-10-07 18:55:00
### original <http://www.cnblogs.com/fool/archive/2010/10/07/1845226.html>

<p>作者: <a href="http://www.cnblogs.com/fool/">笨蛋的座右铭</a> 发表于 2010-10-07 18:55 <a href="http://www.cnblogs.com/fool/archive/2010/10/07/1845226.html">原文链接</a> 阅读: 1062 评论: 7</p><p>　　在正式开始之前，我想先说两句，理解javascript系列博文是通过带领大家分析javascript执行时的内存分配情况，来解释javascript原理，具体会涵盖javascript预加载，闭包原理，面象对象，执行模型，对象模型...,文章的视角很特别，也非常深入，希望大家能接受这种形式，并提供宝贵意见。</p>
<p> </p>
<p><strong><span style="font-size:18pt">原始值和引用值</span></strong></p>
<p>在ECMAScript中，变量可以存放两种类型的值，即原始值和引用值。</p>
<p>原始值指的就是代表原始数据类型（基本数据类型）的值，即Undefined,Null,Number,String,Boolean类型所表示的值。</p>
<p>引用值指的就是复合数据类型的值，即Object,Function,Array,以及自定义对象,等等</p>
<p> </p>
<p><strong><span style="font-size:18pt">栈和堆</span></strong></p>
<p>与原始值与引用值对应存在两种结构的内存即栈和堆</p>
<p>栈是一种后进先出的数据结构，在javascript中可以通过Array来模拟栈的行为</p>
<div>
<pre>var arr = []; //创建一个栈
arr.push("apple");//压入元素"apple"	["apple"]
arr.push("orange");//压入元素"orange"	["apple","orange"]
arr.pop();//弹出"orange"		["apple"]
arr.push("banana");//压入元素"banana"	["apple","banana"]
</pre>
</div>
<p>我们来看一下，与之对应的内存图：</p>
<p><img src="http://pic002.cnblogs.com/images/2010/138960/2010100717230870.png" alt=""></p>
<p>原始值是存储在栈中的简单数据段，也就是说，他们的值直接存储在变量访问的位置。</p>
<p> </p>
<p>堆是存放数据的基于散列算法的数据结构，在javascript中，引用值是存放在堆中的。</p>
<p>引用值是存储在堆中的对象，也就是说，存储在变量处的值(即指向对象的变量，存储在栈中）是一个指针，指向存储在堆中的实际对象.</p>
<p>例：var obj = new Object(); obj存储在栈中它指向于new Object()这个对象，而new Object()是存放在堆中的。</p>
<p> </p>
<p>那为什么引用值要放在堆中，而原始值要放在栈中，不都是在内存中吗，为什么不放在一起呢?那接下来，让我们来探索问题的答案！</p>
<p> </p>
<p>首先，我们来看一下代码：</p>
<div>
<pre>function Person(id,name,age){
	this.id = id;
	this.name = name;
	this.age = age;
}

var num = 10;
var bol = true;
var str = "abc";
var obj = new Object();
var arr = ['a','b','c'];
var person = new Person(100,"jxl",22);</pre>
</div>
<p> 然后我们来看一下内存分析图：</p>
<p> </p>
<p> <img src="http://pic002.cnblogs.com/images/2010/138960/2010100718003596.png" alt=""></p>
<p>变量num,bol,str为基本数据类型，它们的值，直接存放在栈中，obj,person,arr为复合数据类型，他们的引用变量存储在栈中，指向于存储在堆中的实际对象。</p>
<p>由上图可知，我们无法直接操纵堆中的数据，也就是说我们无法直接操纵对象，但我们可以通过栈中对对象的引用来操作对象，就像我们通过遥控机操作电视机一样，区别在于这个电视机本身并没有控制按钮。</p>
<p> </p>
<p>现在让我们来回答为什么引用值要放在堆中，而原始值要放在栈中的问题：</p>
<p>记住一句话：能量是守衡的，无非是时间换空间，空间换时间的问题</p>
<p>堆比栈大，栈比堆的运算速度快,对象是一个复杂的结构，并且可以自由扩展，如：数组可以无限扩充，对象可以自由添加属性。将他们放在堆中是为了不影响栈的效率。而是通过引用的方式查找到堆中的实际对象再进行操作。相对于简单数据类型而言，简单数据类型就比较稳定，并且它只占据很小的内存。不将简单数据类型放在堆是因为通过引用到堆中查找实际对象是要花费时间的，而这个综合成本远大于直接从栈中取得实际值的成本。所以简单数据类型的值直接存放在栈中。</p>
<p> </p>
<p>总结：</p>
<p>程序很简单，但它是一切的根本，基础是最重要的，因为摩天大厦也是一块砖一块瓦的搭建起来的。</p>
<p>内存是程序执行的根本，搞懂了内存，就等于搞懂了一切。</p>
<p>心血之作，鼓励一下自已，加油！</p>
<p> </p>
<p>参考：</p>
<p>JavaScript高级程序设计</p>
<p> </p><img src="http://www.cnblogs.com/fool/aggbug/1845226.html?type=1" width="1" height="1" alt=""><p>评论: 7　<a href="http://www.cnblogs.com/fool/archive/2010/10/07/1845226.html#pagedcomment">查看评论</a>　<a href="http://www.cnblogs.com/fool/archive/2010/10/07/1845226.html#commentform">发表评论</a></p><p><a href="http://job.cnblogs.com/">程序员找工作，就在博客园</a></p><hr><p>最新新闻：<br>· <a href="http://news.cnblogs.com/n/76599/">李开复：微软购Adobe可能性小 意在制衡苹果</a><span style="color:gray">(2010-10-08 15:29)</span><br>· <a href="http://news.cnblogs.com/n/76597/">Google最新涂鸦：庆祝甲壳虫主唱诞辰70年</a><span style="color:gray">(2010-10-08 15:22)</span><br>· <a href="http://news.cnblogs.com/n/76595/">放弃裸机版iPhone 中国联通不是打工仔</a><span style="color:gray">(2010-10-08 15:18)</span><br>· <a href="http://news.cnblogs.com/n/76593/">阿里银行“芝麻开门”</a><span style="color:gray">(2010-10-08 15:11)</span><br>· <a href="http://news.cnblogs.com/n/76591/">金山否认研发浏览器 已与傲游等厂商深入合作</a><span style="color:gray">(2010-10-08 14:55)</span><br></p><p>编辑推荐：<a href="http://news.cnblogs.com/n/76477/">远离.NET</a><br></p><p>网站导航：<a href="http://www.cnblogs.com">博客园首页</a>  <a href="http://home.cnblogs.com/">个人主页</a>  <a href="http://news.cnblogs.com">新闻</a>  <a href="http://home.cnblogs.com/ing/">闪存</a>  <a href="http://home.cnblogs.com/group/">小组</a>  <a href="http://space.cnblogs.com/q/">博问</a>  <a href="http://space.cnblogs.com">社区</a>  <a href="http://kb.cnblogs.com">知识库</a></p>