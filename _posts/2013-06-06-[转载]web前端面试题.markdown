---
layout: post
title:  "[转载]web前端面试题"
date:   2013-06-06 13:00:27
author: 晴方好玲
categories: program
---

## [转载]web前端面试题
### by 晴方好玲
### at 2013-06-06 13:00:27
### original <http://blog.sina.com.cn/s/blog_897db7b50101bu4b.html>

<div style="padding-top:15px;margin:20px 0;border:none;border-top:1px dotted #ccc"><div style="margin-bottom:12px"><span style="margin-right:25px"><strong>原文地址：</strong><a href="http://blog.sina.com.cn/s/blog_7ccaabc901013i6z.html" title="web前端面试题">web前端面试题</a></span><span><strong>作者：</strong><a href="http://blog.sina.com.cn/u/2093657033" title="追逐影子的真相">追逐影子的真相</a></span></div><div><div>
<p>1. W3C标准有哪些？</p>
<p> <font color="#008080">W3C推行的主要规范有HTML，CSS，XML，XHTML和DOM（Document Object
Model）。<br></font><font color="#000000">2.
谈谈Js的内存泄露问题。</font></p>
<p>3. 谈谈对Html 5的了解。</p>
<p>4. 谈谈对CSS 3的了解。</p>
<p>5. 用js实现随即选取10--100之间的10个数字，存入一个数组，并排序。</p>
<p>var iArray = []; </p>
<p>funtion getRandom(istart, iend){</p>
<p>
       
var iChoice = istart - iend +1;</p>
<p>
       
return Math.floor(Math.random() * iChoice + istart;</p>
<p>}</p>
<p>for(var i=0; i&lt;10; i++){</p>
<p>
       
iArray.push(getRandom(10,100));</p>
<p>}</p>
<p>iArray.sort();</p>
<p>6. 把两个数组合并，并删除第二个元素。</p>
<p>var array1 = ['a','b','c'];</p>
<p>var bArray = ['d','e','f'];</p>
<p>var cArray = array1.concat(bArray);</p>
<p>cArray.splice(1,1);</p>
<p>7. Js面向对象的几种方式。</p>
<p>8. 请谈谈原型方式构造对象的特点。</p>
<p>9. 在Css中那个属性会影响dom读取文档流的顺序。</p>
<p>答： float属性。</p>
<p>10. 请介绍几种用div实现两列布局的方案（兼容），另外要考虑文档流的加载。</p>
<p>11. 谈谈css在浏览器中的兼容问题，详细谈谈IE6的一些bug,以及解决方案。</p>
<p>12. 谈谈你对闭包的理解。以及如何实现js方法的重写。</p>
<p><br></p>
<p>[HTML &amp;&amp; CSS]<br>
1.Doctype? 严格模式与混杂模式-如何触发这两种模式，区分它们有何意义?</p>
<pre>
首先我讲讲如何触发两种模式：        加入xml头部声明可以触发IE浏览器的Quirks mode，触发之后，浏览器解析方式就和IE5.5一样，拥有IE5.5一样的bug和其他问题，行为（Javascript）也是如此。          IE6的触发        在XHTML的DOCTYPE前加入XML声明  &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;<a href="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd</a>&quot;&gt;          IE7的触发        在XML声明和XHTML的DOCTYPE之间加入HTML注释    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  &lt;!-- ... and keep IE7 in quirks mode --&gt;  &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;<a href="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd</a>&quot;&gt;          IE6和IE7都可以触发的        在HTML4.01的DOCTYPE文档头部加入HTML注释    &lt;!-- quirks mode --&gt;  &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;<a href="http://www.w3.org/TR/html4/strict.dtd">http://www.w3.org/TR/html4/strict.dtd</a>&quot;&gt;    其次是这样的意义  各个浏览器的混杂模式，基本就是各个浏览器的私有模式，不相互兼容。所以，除非是为了兼容的问题，比如你不想修改很久很久以前做的IE ONLY的网页，否则刻意触发混杂模式没有任何意义。
</pre>
<p><br>
<br>
2：行内元素有哪些？块级元素有哪些？CSS的盒模型？</p>
<p style="TexT-inDenT:2em">一.行内元素和块级元素有哪些？</p>
<p style="TexT-inDenT:2em">块级元素</p>
<table>
<thead>
<tr>
<th><br></th>
<th><br></th>
</tr>
</thead>
<tbody>
<tr>
<td>&lt;address&gt;</td>
<td>information on author</td>
</tr>
<tr>
<td>&lt;blockquote&gt;</td>
<td>long quotation</td>
</tr>
<tr>
<td>&lt;button&gt;</td>
<td>push button</td>
</tr>
<tr>
<td>&lt;caption&gt;</td>
<td>table caption</td>
</tr>
<tr>
<td>&lt;dd&gt;</td>
<td>definition description</td>
</tr>
<tr>
<td>&lt;del&gt;</td>
<td>deleted text</td>
</tr>
<tr>
<td>&lt;div&gt;</td>
<td>generic language/style container</td>
</tr>
<tr>
<td>&lt;dl&gt;</td>
<td>definition list</td>
</tr>
<tr>
<td>&lt;dt&gt;</td>
<td>definition term</td>
</tr>
<tr>
<td>&lt;fieldset&gt;</td>
<td>form control group</td>
</tr>
<tr>
<td>&lt;form&gt;</td>
<td>interactive form</td>
</tr>
<tr>
<td>&lt;h1&gt;</td>
<td>heading</td>
</tr>
<tr>
<td>&lt;h2&gt;</td>
<td>heading</td>
</tr>
<tr>
<td>&lt;h3&gt;</td>
<td>heading</td>
</tr>
<tr>
<td>&lt;h4&gt;</td>
<td>heading</td>
</tr>
<tr>
<td>&lt;h5&gt;</td>
<td>heading</td>
</tr>
<tr>
<td>&lt;h6&gt;</td>
<td>heading</td>
</tr>
<tr>
<td>&lt;hr&gt;</td>
<td>horizontal rule</td>
</tr>
<tr>
<td>&lt;iframe&gt;</td>
<td>inline subwindow</td>
</tr>
<tr>
<td>&lt;ins&gt;</td>
<td>inserted text</td>
</tr>
<tr>
<td>&lt;legend&gt;</td>
<td>fieldset legend</td>
</tr>
<tr>
<td>&lt;li&gt;</td>
<td>list item</td>
</tr>
<tr>
<td>&lt;map&gt;</td>
<td>client-side image map</td>
</tr>
<tr>
<td>&lt;noframes&gt;</td>
<td>alternate content container for non frame-based rendering</td>
</tr>
<tr>
<td>&lt;noscript&gt;</td>
<td>alternate content container for non script-based rendering</td>
</tr>
<tr>
<td>&lt;object&gt;</td>
<td>generic embedded object</td>
</tr>
<tr>
<td>&lt;ol&gt;</td>
<td>ordered list</td>
</tr>
<tr>
<td>&lt;p&gt;</td>
<td>paragraph</td>
</tr>
<tr>
<td>&lt;pre&gt;</td>
<td>preformatted text</td>
</tr>
<tr>
<td>&lt;table&gt;</td>
<td>table</td>
</tr>
<tr>
<td>&lt;tbody&gt;</td>
<td>table body</td>
</tr>
<tr>
<td>&lt;td&gt;</td>
<td>table data cell</td>
</tr>
<tr>
<td>&lt;tfoot&gt;</td>
<td>table footer</td>
</tr>
<tr>
<td>&lt;th&gt;</td>
<td>table header cell</td>
</tr>
<tr>
<td>&lt;thead&gt;</td>
<td>table header</td>
</tr>
<tr>
<td>&lt;tr&gt;</td>
<td>table row</td>
</tr>
<tr>
<td>&lt;ul&gt;</td>
<td>unordered list</td>
</tr>
</tbody>
</table>
<p style="TexT-inDenT:2em"> 行内元素</p>
<table>
<thead>
<tr>
<th><br></th>
<th><br></th>
</tr>
</thead>
<tbody>
<tr>
<td>&lt;a&gt;</td>
<td>anchor</td>
</tr>
<tr>
<td>&lt;abbr&gt;</td>
<td>abbreviated form</td>
</tr>
<tr>
<td>&lt;acronym&gt;</td>
<td>acronym</td>
</tr>
<tr>
<td>&lt;b&gt;</td>
<td>bold text style</td>
</tr>
<tr>
<td>&lt;bdo&gt;</td>
<td>I18N BiDi over-ride</td>
</tr>
<tr>
<td>&lt;big&gt;</td>
<td>large text style</td>
</tr>
<tr>
<td>&lt;br&gt;</td>
<td>forced line break</td>
</tr>
<tr>
<td>&lt;button&gt;</td>
<td>push button</td>
</tr>
<tr>
<td>&lt;cite&gt;</td>
<td>citation</td>
</tr>
<tr>
<td>&lt;code&gt;</td>
<td>computer code fragment</td>
</tr>
<tr>
<td>&lt;del&gt;</td>
<td>deleted text</td>
</tr>
<tr>
<td>&lt;dfn&gt;</td>
<td>instance definition</td>
</tr>
<tr>
<td>&lt;em&gt;</td>
<td>emphasis</td>
</tr>
<tr>
<td>&lt;i&gt;</td>
<td>italic text style</td>
</tr>
<tr>
<td>&lt;iframe&gt;</td>
<td>inline subwindow</td>
</tr>
<tr>
<td>&lt;img&gt;</td>
<td>Embedded image</td>
</tr>
<tr>
<td>&lt;input&gt;</td>
<td>form control</td>
</tr>
<tr>
<td>&lt;ins&gt;</td>
<td>inserted text</td>
</tr>
<tr>
<td>&lt;kbd&gt;</td>
<td>text to be entered by the user</td>
</tr>
<tr>
<td>&lt;label&gt;</td>
<td>form field label text</td>
</tr>
<tr>
<td>&lt;map&gt;</td>
<td>client-side image map</td>
</tr>
<tr>
<td>&lt;object&gt;</td>
<td>generic embedded object</td>
</tr>
<tr>
<td>&lt;q&gt;</td>
<td>short inline quotation</td>
</tr>
<tr>
<td>&lt;samp&gt;</td>
<td>sample program output, scripts, etc.</td>
</tr>
<tr>
<td>&lt;select&gt;</td>
<td>option selector</td>
</tr>
<tr>
<td>&lt;small&gt;</td>
<td>small text style</td>
</tr>
<tr>
<td>&lt;span&gt;</td>
<td>generic language/style container</td>
</tr>
<tr>
<td>&lt;strong&gt;</td>
<td>strong emphasis</td>
</tr>
<tr>
<td>&lt;sub&gt;</td>
<td>subscript</td>
</tr>
<tr>
<td>&lt;sup&gt;</td>
<td>superscript</td>
</tr>
<tr>
<td>&lt;textarea&gt;</td>
<td>multi-line text field</td>
</tr>
<tr>
<td>&lt;tt&gt;</td>
<td>teletype or monospaced text style</td>
</tr>
<tr>
<td>&lt;var&gt;</td>
<td>instance of a variable or program argument</td>
</tr>
</tbody>
</table>
<p style="TexT-inDenT:2em">
 二.行内元素与块级元素有什么不同？</p>
<p style="TexT-inDenT:2em">
1.尺寸-块级元素和行内元素之间的一个重要的不同点 </p>
<p style="TexT-inDenT:2em">行内元素和width</p>
<p style="TexT-inDenT:2em">W3C CSS2
标准规定行内元素、非置换元素不会应用width属性。</p>
<p style="TexT-inDenT:2em">
以下例子中，对行内元素&lt;a&gt;应用了width:200px,你可以看到，根本就没有什么效果。</p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s3.sinaimg.cn/orignal/7ccaabc9xbd76774060e2"><img src="http://s3.sinaimg.cn/middle/7ccaabc9xbd76774060e2&amp;690" height="106" width="544"></a><br>
<br></p>
<p style="TexT-inDenT:2em">行内元素和height</p>
<p style="TexT-inDenT:2em">W3C CSS2
标准规定行内元素、非置换元素不会应用height属性，但是盒子高度可以通过line-height来指定。</p>
<p style="TexT-inDenT:2em">
以下例子，对行内元素&lt;a&gt;应用了height:50px,你可以看到什么效果都没。</p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s4.sinaimg.cn/orignal/7ccaabc9xbd7679389a83"><img src="http://s4.sinaimg.cn/middle/7ccaabc9xbd7679389a83&amp;690" height="106" width="544"></a><br>
<br></p>
<p style="TexT-inDenT:2em">行内元素和padding</p>
<p style="TexT-inDenT:2em">
你可以给行内元素设置padding，但只有padding-left和padding-right生效。</p>
<p style="TexT-inDenT:2em">
以下例子，行内元素&lt;a&gt;应用了padding:50px。你可以看到对左右的内容有影响，但是对上下没影响。</p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s13.sinaimg.cn/orignal/7ccaabc9xbd7679d2ceac"><img src="http://s13.sinaimg.cn/middle/7ccaabc9xbd7679d2ceac&amp;690" height="146" width="547"></a><br>
<br></p>
<p style="TexT-inDenT:2em">行内元素和marging</p>
<p style="TexT-inDenT:2em">
margin属性也是和padding属性一样，对行内元素左右有效，上下无效。</p>
<p style="TexT-inDenT:2em">
下面的例子,对&lt;a&gt;应用了margin:50px，你可以看到左右边缘是生效了但是内容上下却没有。</p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s13.sinaimg.cn/orignal/7ccaabc9xbd767a7a126c"><img src="http://s13.sinaimg.cn/middle/7ccaabc9xbd767a7a126c&amp;690" height="106" width="544"></a><br>
<br></p>
<p style="TexT-inDenT:2em">
  记住对行内元素</p>
<p>设置宽度width   无效。<br>
设置高度height  无效，可以通过line-height来设置。<br>
设置margin 只有左右margin有效，上下无效。<br>
设置padding
只有左右padding有效，上下则无效。注意元素范围是增大了，但是对元素周围的内容是没影响的，看图上效果就知道了</p>
<p><strong>盒子模型</strong></p>
<p style="TexT-inDenT:2em">W3C
组织建议把所有网页上的对像都放在一个盒(box)中，设计师可以通过创建定义来控制这个盒的属性，这些对像包括段落、列表、标题、图片以及层。盒模型主
要定义四个区域：内容(content)、边框距(padding)、边界(border)和边距(margin)。对于初学者，经常会搞不清楚
margin，background-color，background-
image，padding，content，border之间的层次、关系和相互影响。这里提供一张盒模型的3D示意图，希望便于你的理解和记忆。</p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s1.sinaimg.cn/orignal/7ccaabc9xbd767c63a7e0"><img src="http://s1.sinaimg.cn/middle/7ccaabc9xbd767c63a7e0&amp;690" height="287" width="445"></a><br>
<br></p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s13.sinaimg.cn/orignal/7ccaabc9x7958a644149c"><img src="http://s13.sinaimg.cn/middle/7ccaabc9x7958a644149c&amp;690" height="284" width="544"></a><br>
<br></p>
<p style="TexT-inDenT:2em">
每个HTML元素都可以看作一个装了东西的盒子，盒子里面的内容到盒子的边框之间的距离即填充（padding），盒子本身有边框（border），而盒子边框外和其他盒子之间，还有边界（margin）。</p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s14.sinaimg.cn/orignal/7ccaabc9x7958a6720c4d"><img src="http://s14.sinaimg.cn/middle/7ccaabc9x7958a6720c4d&amp;690" height="482" width="568"></a><br>
<br></p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s10.sinaimg.cn/orignal/7ccaabc9xbd76826a4a59"><img src="http://s10.sinaimg.cn/middle/7ccaabc9xbd76826a4a59&amp;690"></a><br>

<br></p>
<p style="TexT-inDenT:2em">盒模型的实际宽度</p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s8.sinaimg.cn/orignal/7ccaabc9x7958a6ffbf17"><img src="http://s8.sinaimg.cn/middle/7ccaabc9x7958a6ffbf17&amp;690" height="259" width="557"></a><br>
<br></p>
<p style="TexT-inDenT:2em">关于盒模型，还有以下几点需要注意：</p>
<p style="TexT-inDenT:2em">
　　·对于块级元素（display:block），未浮动的垂直相邻元素的上边界和下边界会被压缩，例如：有上下2个元素，上元素的下边界为5px，下面元素的上边界为20px，则实际2个元素的间距为20px（2个边界值中较大的值）。如图所示。</p>
<p style="TexT-inDenT:2em"><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://s16.sinaimg.cn/orignal/7ccaabc9xbd7687a3e65f"><img src="http://s16.sinaimg.cn/middle/7ccaabc9xbd7687a3e65f&amp;690" height="380" width="441"></a><br>
<br></p>
<p style="TexT-inDenT:2em">注1. 块级元素（display： block）</p>
<p style="TexT-inDenT:2em">
每个块级元素都从一个新行开始，而且其后的元素也需另起一行开始，标题、段落、表格、层、body等都是块级元素。块级元素只能作为其他块级元素的子元素，而且需要一定的条件。</p>
<p style="TexT-inDenT:2em">
　　·内联元素，例如&lt;a&gt;、&lt;span&gt;等，定义上下边界不会影响到行高（line-height），内联元素距离上一行元素的距离由行高决定，而不是填充或边界。</p>
<p style="TexT-inDenT:2em">注2. 内联元素（display：inline）</p>
<p style="TexT-inDenT:2em">
内联元素不需要在新行内显示，而且也不强迫其后的元素换行，如a、em、span等都为内联元素。内联元素可以为任何其他元素的子元素。</p>
<p style="TexT-inDenT:2em">
　　·浮动元素（无论左或者右浮动）边界不压缩，且若浮动元素不声明宽度，则其宽度趋向于0，即压缩到其内容能承受的最小宽度。</p>
<p style="TexT-inDenT:2em">
　　·如果盒中没有内容，则即使定义了宽度和高度都为100%，实际上只占0%，因此不会被显示，此点在采取层布局的时候需特别注意。</p>
<p style="TexT-inDenT:2em">　　·边界值可为负，其显示效果各浏览器可能不相同。</p>
<p style="TexT-inDenT:2em">　　·填充值不可为负。</p>
<p style="TexT-inDenT:2em">
　　·边框默认的样式（border-style）为不显示（none）。</p>
<p><br>
3.CSS引入的方式有哪些? link和@import的区别是?</p>
<p style="TexT-inDenT:2em">本质上，这两种方式都是为了加载CSS文件，但还是存在着细微的差别。</p>
<p style="TexT-inDenT:2em">
差别1：老祖宗的差别。link属于XHTML标签，而@import完全是CSS提供的一种方式。</p>
<p style="TexT-inDenT:2em"><a href="http://www.dreamdu.com/xhtml/tag_link/">link标签</a>除了可以加载CSS外，还可以做很多其它的事情，比如定义RSS，定义<a href="http://www.dreamdu.com/xhtml/attribute_rel/">rel连接属性</a>等，@import就只能加载CSS了。</p>
<p style="TexT-inDenT:2em">
差别2：加载顺序的差别。当一个页面被加载的时候（就是被浏览者浏览的时候），link引用的CSS会同时被加载，而@import引用的CSS会等到页面全部被下载完再被加载。所以有时候浏览@import加载CSS的页面时开始会没有样式（就是闪烁），网速慢的时候还挺明显（梦之都加载CSS的方式就是使用@import，我一边下载一边浏览梦之都网页时，就会出现上述问题）。</p>
<p style="TexT-inDenT:2em">差别3：兼容性的差别。由于<a href="http://www.w3.org/TR/CSS21/cascade.html#at-imp%3Cwbr%3Eort">@import是CSS2.1</a>提出的所以老的浏览器不支持，@import只有在IE5以上的才能识别，而link标签无此问题。</p>
<p style="TexT-inDenT:2em">
差别4：使用dom控制样式时的差别。当使用javascript控制dom去改变样式的时候，只能使用link标签，因为@import不是dom可以控制的。</p>
<p style="TexT-inDenT:2em">
大致就这几种差别了（如果还有什么差别，大家告诉我，我再补充上去），其它的都一样，从上面的分析来看，还是使用link标签比较好。</p>
<p style="TexT-inDenT:2em">
标准网页制作加载CSS文件时，还应该选定要加载的媒体（media），比如screen，print，或者全部all等。这个我到CSS高级教程中再给大家介绍。</p>
<p style="TexT-inDenT:2em">注：</p>
<p style="TexT-inDenT:2em">1，网友comehope在留言中提出了另一种区别。</p>
<p style="TexT-inDenT:2em">
差别5：@import可以在css中再次引入其他样式表，比如可以创建一个主样式表，在主样式表中再引入其他的样式表，如：</p>
<p style="TexT-inDenT:2em">main.css<br>
———————-<br>
@import “sub1.css”;<br>
@import “sub2.css”;</p>
<p style="TexT-inDenT:2em">sub1.css<br>
———————-<br>
p {color:red;}</p>
<p style="TexT-inDenT:2em">sub2.css<br>
———————-<br>
.myclass {color:blue}</p>
<p style="TexT-inDenT:2em">这样更利于修改和扩展．</p>
<p style="TexT-inDenT:2em">猴
子提示：这样做有一个缺点，会对网站服务器产生过多的HTTP请求，以前是一个文件，而现在却是两个或更多文件了，服务器的压力增大，浏览量大的网站还是
谨慎使用。有兴趣的可以观察一下像新浪等网站的首页或栏目首页代码，他们总会把css或js直接写在html里，而不用外部文件。</p>
<p><br>
4.CSS选择符有哪些？哪些属性可以继承？优先级算法如何计算？内联和important哪个优先级高？</p>
<p><br>
5:前端页面有哪三层构成，分别是什么？作用是什么？</p>
<p>最准确的网页设计思路是把网页分成三个层次，即：结构层、表示层、行为层。</p>
<p><strong>网页的结构层（structural layer）</strong>由 HTML 或 XHTML
之类的标记语言负责创建。标签，也就是那些出现在尖括号里的单词，对网页内容的语义含义做出了描述，但这些标签不包含任何关于如何显示有关内容的信息。例如，P
标签表达了这样一种语义：“这是一个文本段。”</p>
<p><strong>网页的表示层（presentation layer）</strong> 由 CSS 负责创建。 CSS
对“如何显示有关内容”的问题做出了回答。</p>
<p><strong>网页的行为层（behavior
layer）</strong>负责回答“内容应该如何对事件做出反应”这一问题。这是 Javascript 语言和 DOM
主宰的领域。</p>
<p><br>
<br>
8：你做的页面在哪些流览器测试过？这些浏览器的内核分别是什么?经常遇到的浏览器的兼容性有哪些？怎么会出现？解决方法是什么？</p>
<p>点评：css的兼容性也是大家关注的热点。大家一定要注意多测试。Javascript
多浏览器兼容性问题及解决方案</p>
<p>兼容性处理要点<br>
1、DOCTYPE 影响 CSS 处理</p>
<p>2、FF: 设置 padding 后， div 会增加 height 和 width， 但 IE 不会， 故需要用
!important 多设一个 height 和 width</p>
<p>3、FF: 支持 !important， IE 则忽略， 可用 !important 为 FF
特别设置样式</p>
<p>4、div 的垂直居中问题: vertical-align:middle; 将行距增加到和整个DIV一样高
line-height:200px; 然后插入文字，就垂直居中了。缺点是要控制内容不要换行</p>
<p>5、在mozilla firefox和IE中的BOX模型解释不一致导致相差2px解决方法：</p>
<p>div{margin:30px!important;margin:28px;}</p>
<p>
注意这两个margin的顺序一定不能写反，!important这个属性IE不能识别，但别的浏览器可以识别。所以在IE下其实解释成这样：</p>
<p>div{maring:30px;margin:28px}</p>
<p>重复定义的话按照最后一个来执行，所以不可以只写margin:XXpx!important;</p>
<p>浏览器差异<br>
1、ul和ol列表缩进问题</p>
<p>
消除ul、ol等列表的缩进时，样式应写成：list-style:none;margin:0px;padding:0px;<br>
其中margin属性对IE有效，padding属性对FireFox有效。</p>
<p>[注]
经验证，在IE中，设置margin:0px可以去除列表的上下左右缩进、空白以及列表编号或圆点，设置padding对样式没有影响；在
Firefox
中，设置margin:0px仅仅可以去除上下的空白，设置padding:0px后仅仅可以去掉左右缩进，还必须设置list-
style:none才
能去除列表编号或圆点。也就是说，在IE中仅仅设置margin:0px即可达到最终效果，而在Firefox中必须同时设置margin:0px、
padding:0px以及list-style:none三项才能达到最终效果。</p>
<p>2、CSS透明问题</p>
<p>
IE：filter:progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=60)。<br>

FF：opacity:0.6。<br>
[注] 最好两个都写，并将opacity属性放在下面。</p>
<p>3、CSS圆角问题</p>
<p>IE：ie7以下版本不支持圆角。<br>
FF： -moz-border-radius:4px，或者-moz-border-radius-topleft:4px;-moz-
border- radius-topright:4px;-moz-border-radius-bottomleft:4px;-moz-
border- radius- bottomright:4px;。<br>
[注]
圆角问题是CSS中的经典问题，建议使用JQuery框架集来设置圆角，让这些复杂的问题留给别人去想吧。不过jQuery的圆角只看到支持整个区域的圆角，没有支持边框的圆角，不过这个边框的圆角可以通过一些简单的手段来实现，下次有机会介绍下。</p>
<p>4、cursor:hand VS cursor:pointer</p>
<p>问题说明：firefox不支持hand，但ie支持pointer ，两者都是手形指示。<br>
解决方法：统一使用pointer。</p>
<p>5、字体大小定义不同</p>
<p>对字体大小small的定义不同，Firefox中为13px，而IE中为16px，差别挺大。</p>
<p>解决方法：使用指定的字体大小如14px。</p>
<p>
并列排列的多个元素（图片或者链接）的div和div之间，代码中的空格和回车在firefox中都会被忽略，而IE中却默认显示为空格（约3px）。</p>
<p>6、CSS双线凹凸边框<br>
IE：border:2px outset;。<br>
FF： -moz-border-top-colors: #d4d0c8 white;-moz-border-left-colors:
#d4d0c8 white;-moz-border-right-colors:#404040
#808080;-moz-border-bottom-colors:#404040 #808080;</p>
<p>浏览器bug<br>
1、IE的双边距bug</p>
<p>设置为float的div在ie下设置的margin会加倍。这是一个ie6都存在的bug。</p>
<p>解决方案：在这个div里面加上display:inline;</p>
<p>例如：</p>
<p>&lt;#div id=”imfloat”&gt;</p>
<p>相应的css为</p>
<p>以下为引用的内容：</p>
<p>复制代码代码如下:<br>
#IamFloat{<br>
float:left;<br>
margin:5px;<br>
display:inline;<br>
}<br>
#IamFloat{<br>
float:left;<br>
margin:5px;<br>
display:inline;<br>
}</p>
<p>关
于CSS中的问题实在太多了，甚至同样的CSS定义在不同的页面标准中的显示效果都是不一样的。一个合乎发展的建议是，页面采用标准XHTML标准编写，
较少使用table，CSS定义尽量依照标准DOM，同时兼顾IE、Firefox、Opera等主流浏览器。很多情况下，FF和
Opera的CSS解释标准更贴近CSS标准，也更具有规范性。</p>
<p>2、IE选择符空格BUG<br>
今天在给博客的段落样式设置首字符样式的时候发现，原来一个空格也可以使样式失效。</p>
<p>请看以下代码：</p>
<p><br>
复制代码代码如下:<br>
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0
Transitional//EN&quot;
&quot;//www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br>

&lt;html
xmlns=&quot;//www.w3.org/1999/xhtml&quot;&gt;<br>
&lt;head&gt;<br>
&lt;title&gt;&lt;/title&gt;<br>

&lt;style type=&quot;text/css&quot;&gt;<br>
&lt;!--<br>
p{font-size:12px;}<br>
p:first-letter{font-size:300%}<br>
--&gt;<br>
&lt;/style&gt;<br>
&lt;/head&gt;<br>
&lt;body&gt;</p>
<p>
&lt;p&gt;对于世界而言，你是一个人；但是对于某个人，你是他的整个世界。纵然伤心，也不要愁眉不展，因为你不知是谁会爱上你的笑容。&lt;/p&gt;<br>

&lt;/body&gt;<br>
&lt;/html&gt;<br>
[/code]</p>
<p><br>
复制代码代码如下:<br>
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0
Transitional//EN&quot;
&quot;//www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br>

&lt;html
xmlns=&quot;//www.w3.org/1999/xhtml&quot;&gt;<br>
&lt;head&gt;<br>
&lt;title&gt;&lt;/title&gt;<br>

&lt;style type=&quot;text/css&quot;&gt;<br>
&lt;!--<br>
p{font-size:12px;}<br>
p:first-letter{font-size:300%}<br>
--&gt;<br>
&lt;/style&gt;<br>
&lt;/head&gt;<br>
&lt;body&gt;<br>
&lt;p&gt;对于世界而言，你是一个人；但是对于某个人，你是他的整个世界。纵然伤心，也不要愁眉不展，因为你不知是谁会爱上你的笑容。&lt;/p&gt;<br>

&lt;/body&gt;<br>
&lt;/html&gt;</p>
<p>这
段代码对&lt;p&gt;的首字符样式定义在IE6上看是没有效果的（IE7没测试），而在p:first-letter和{font-
size:300%}加上空格，也就是p:first-letter
{font-size:300%}后，显示就正常了。但是同样的代码，在FireFox下看是正常的。按道理说，p:first-
letter{font-size:300%}的写法是没错的。那么问题出在哪里呢？答案是伪类中的连字符”-”。IE有个BUG，在处理伪类时，如果伪
类的名称中带有连字符”-”，伪类名称后面就得跟一个空格，不然样式的定义就无效。而在FF中，加不加空格都可以正常处理。</p>
<table width="100%">
<tbody>
<tr>
<td><br>
对css缩写的支持问题： <br>
不论是ie 还是ff对css的缩写都有一小点问题 <br>
比如 <br>
border: 0xp solid #fff;两个浏览器支持都没有问题 <br>
但对于四个边的magin不同情况下，就不能用这种缩写了，无论是ie还是ff又会出现边界解释错误，而导致页面变形 <br>

正确缩写： <br>
border-width:0px 1px 2px 3px; <br>
border-style:solid; <br>
border-color:#fff;<br>
第二点是 ie对于css的magin padding
等默认值为0px，但ff却不一样，为了保持外观的统一性，即使padding为0你也要写上，以免ff在浏览中的错位。<br>
 <br>
IE与Firefox的CSS兼容大全<br>
1.DOCTYPE 影响 CSS 处理 <br>
2.FF: div 设置 margin-left, margin-right 为 auto 时已经居中, IE
不行 <br>
3.FF: body 设置 text-align 时, div 需要设置 margin: auto(主要是
margin-left,margin-right) 方可居中 <br>
4.FF: 设置 padding 后, div 会增加 height 和 width, 但 IE 不会, 故需要用
!important 多设一个 height 和 width<br>
5.FF: 支持 !important, IE 则忽略, 可用 !important 为 FF
特别设置样式，值得注意的是，一定要将xxxx !important
这句放置在另一句之上 <br>
6.div 的垂直居中问题:
vertical-align:middle; 将行距增加到和整个DIV一样高
line-height:200px;
然后插入文字，就垂直居中了。缺点是要控制内容不要换行 <br>
7.cursor: pointer 可以同时在 IE FF 中显示游标手指状， hand 仅 IE
可以 <br>
8.FF: 链接加边框和背景色，需设置 display: block, 同时设置 float: left 保证不换行。参照
menubar, 给 a 和 menubar 设置高度是为了避免底边显示错位, 若不设 height, 可以在 menubar
中插入一个空格。<br>
9.在mozilla
firefox和IE中的BOX模型解释不一致导致相差2px解决方法：div{margin:30px!important;margin:28px;} <br>

注意这两个margin的顺序一定不能写反，据阿捷的说法!important这个属性IE不能识别，但别的浏览器可以识别。所以在IE下其实解释成这样：div{maring:30px;margin:28px} <br>

重复定义的话按照最后一个来执行，所以不可以只写margin:XXpx!important;<br>
 <br>
10.IE5 和IE6的BOX解释不一致 <br>
IE5下div{width:300px;margin:0 10px 0
10px;} <br>
div
的宽度会被解释为300px-10px(右填充)-10px(左填充)最终div的宽度为280px，而在IE6和其他浏览器上宽度则是以
300px+10px(右填充)+10px(左填充)=320px来计算的。这时我们可以做如下修改div{width:300px!important;width
:340px;margin:0 10px 0 10px} <br>
关于这个是什么我也不太明白，只知道IE5和firefox都支持但IE6不支持，如果有人理解的话，请告诉我一声，谢了！：）<br>
 <br>
11.ul标签在Mozilla中默认是有padding值的,而在IE中只有margin有值所以先定义ul{margin:0;padding:0;} <br>

就能解决大部分问题<br>
注意事项：<br>
 1、float的div一定要闭合。<br>
例如：(其中floatA、floatB的属性已经设置为float:left;)&lt;#div
id=&quot;floatA&quot; &gt; <br>
&lt;#div id=&quot;floatB&quot;
&gt; <br>
&lt;#div id=&quot;NOTfloatC&quot;
&gt; <br>
这里的NOTfloatC并不希望继续平移，而是希望往下排。 <br>
这段代码在IE中毫无问题，问题出在FF。原因是NOTfloatC并非float标签，必须将float标签闭合。 <br>

在&lt;#div
class=&quot;floatB&quot;&gt; <br>
&lt;#div
class=&quot;NOTfloatC&quot;&gt; <br>
之间加上&lt;#div
class=&quot;clear&quot;&gt; <br>
这个div一定要注意声明位置，一定要放在最恰当的地方，而且必须与两个具有float属性的div同级，之间不能存在嵌套关系，否则会产生异常。 <br>

并且将clear这种样式定义为为如下即可：.clear{ <br>
clear:both;}<br>
此外，为了让高度能自动适应，要在wrapper里面加上overflow:hidden;<br></td>
</tr>
</tbody>
</table>
<p><br>
9.如何居中一个浮动元素?</p>
<p style="TexT-inDenT:2em">设置容器的浮动方式为相对定位</p>
<p style="TexT-inDenT:2em">然后确定容器的宽高 比如宽500 高 300 的层</p>
<p style="TexT-inDenT:2em">然后设置层的外边距</p>
<p style="TexT-inDenT:2em">Div{</p>
<p style="TexT-inDenT:2em">Width:500px ;</p>
<p style="TexT-inDenT:2em">height:300px;</p>
<p style="TexT-inDenT:2em">Margin: -150px 0 0 -250px;</p>
<p style="TexT-inDenT:2em">position: absolute;</p>
<p style="TexT-inDenT:2em">left:50%;</p>
<p style="TexT-inDenT:2em">top:50%;</p>
<p style="TexT-inDenT:2em">}</p>
<p><br>
<br>
10.有没有关注HTML5和CSS3?如有请简单说一些您对它们的了解情况！</p>
<p>在HTML
5平台上，视频，音频，图象，动画，以及同电脑的交互都被标准化。那么我们来看一下HTML5的技术概览有哪些：<br>
<strong>HTML5新增和移除的元素<br></strong>HTML5新增了很多多媒体和交互性元素如video,
audio，在HTML4当中如果要嵌入一个视频或是音频的话需要引入一大段的代码，还有兼容各个浏览器，而HTML5只需要通过引入一个标签就可以，就像img标签一样方便。</p>
<p>HTML5对表单的支持</p>
<p style="TexT-inDenT:2em">HTML5 提供了强大的控件类型如url, email, date,
tel等，强大的约束属性，如required表示必填，文件上传的accept属性，以及一些表单重复元素模型的支持，HTML5在提交表单的时候还可
以设置提交的方式为XML提交方式，这样服务器端接收到的数据将是XML格式，HTML5的表单被定义为“Web Forms
2.0”，目前opera9.5+对Web Forms 2.0的支持较为完美。</p>
<p>HTML5 DOM变化<br>
HTML5的Javascript APIs</p>
<p>HTML5在Javascript上面新增了哪些API呢？<br>
Video/Audio:
HTML5为Video和Audio提供了API来让开发者控制他们自己的用户界面，如可以播放或暂停媒体内容。</p>
<p>CSS3<br></p>
<p>
CSS3对于我们Web开发者来说不只是新奇的技术，更重要的是这些全新概念的web应用给我们带来更多无限的可能性，也极大地提高了我们的开发效率。我们将不必再依赖图片或者Javascript
去完成圆角、多背景、用户自定义字体、3D动画、渐变、盒阴影、文字阴影、透明度等提高Web设计质量的特色应用。</p>
<p>CSS3对于动画的支持<br></p>
<p style="TexT-inDenT:2em">CSS3
支持的动画类型有：transform(变换)、transition(过渡)和animation(动画)。你可以对特定的属性设置
transition，transiton和animation的区别不大，animation的动画是自己定义的，面向的更多的是脚本开发者，往往更加
复杂。</p>
<p><br>
11.你怎么来实现下面这个设计图,主要讲述思路 （效果图省略）</p>
<p><br>
13:如果让你来制作一个访问量很高的大型网站，你会如何来管理所有CSS文件、JS与图片？<br>
14：你对前端界面工程师这个职位是怎么样理解的？它的前景会怎么样？<br>
<br>
<br>
<br>
[Javascript]<br>
1：js是什么，js和html 的开发如何结合？<br>
<br>
2.怎样添加、移除、移动、复制、创建和查找节点<br>
3.怎样使用事件以及IE和DOM事件模型之间存在哪些主要差别<br>
4.面向对象编程:b怎么继承a<br>
5.看看下面alert的结果是什么<br>
view sourceprint?1.function b(x, y, a) {<br>
.arguments[2] = 10;<br>
.alert(a);<br>
}<br>
b(1, 2, 3);<br>
如果函数体改成下面，结果又会是什么？<br>
a = 10;<br>
alert(arguments[2] );<br>
<br>
6.请编写一个JavaScript函数
parseQueryString，它的用途是把URL参数解析为一个对象<br>
var obj = parseQueryString(url);<br>
alert(obj.key0)  // 输出0<br>
<br>
7.ajax是什么?  ajax的交互模型? 同步和异步的区别?
如何解决跨域问题?<br></p>
<p><font face="Verdana">ajax(动态网站静态化)伴随的goole
的推动，越来越多的站点开始使用了，在开大ajax(动态网站静态化)程序的时候会遇到很多的问题，主要有以下几个方面：</font></p>
<p><font face="Verdana">   
1.跨浏览器问题<br>
   
2.历史后退状态问题</font></p>
<p><font face="Verdana"><br>
   
3.跨域问题</font></p>
<p>   
跨浏览器的问题因为现在有很多的开元的框架已经解决了，我们无需为此而烦恼。</p>
<p>   
历史后退状态问题我们可以使用一个数组来保存历史纪录，然后把这些数据村到历史对象中去，中的也可以解决，并且还有很多的开元框架给与支持，这样问题就不是很大。</p>
<p>   
跨域的问题就不是很好的解决，但是还是有办法的，一下给出一些基本的解决方案供大家选择：</p>
<p>   
1.使用代理，你可以使用web端的程序编写代理程序，把所有的ajax(动态网站静态化)请求的数据进行转发，web程序可以使php(做为现在的主流
开发语言)，jsp(SUN企业级应用的首选)，asp等所有的编程语言。相信大家对这种方式一定很熟悉，这里就不详细的介绍了。<br>
   
2.使用iframe的方式来定势的刷新叶面，这种方式只是取得数据来显示，并不能真正的和求得的数据进行交互，转化成本页面的动态数据，不是很可取，应用也不是很多，我也忽略不去讨论了。<br>

   
3.使用apache(Unix平台最流行的WEB服务器平台)的代理功能，主要就是apache(Unix平台最流行的WEB服务器平台)的方向代理，
或者是url从定向，你也可以把其他的站点直接的挂在自己的网站上，这样的方式可能会友邦权的问题，多的九部介绍了，有兴趣的本有可以自己实践以下。<br>

   
4.使用《script》标签的方式，这样的话就可以保正使用真正的ajax(动态网站静态化)来跨域，并且可以使用返回来的数据，发誓很简单，在我们的后台程序处理后的到的结果都直接的用javascript
的方式返回，在我们的html中直接的使用返回数据的变量就可以了一个简单的例子<br></p>
<br>
8.什么是闭包？下面这个ul，如何点击每一列的时候alert其index?<br>
&lt;ul id=”test”&gt;<br>
&lt;li&gt;这是第一条&lt;/li&gt;&lt;li&gt;这是第二条&lt;/li&gt;&lt;li&gt;这是第三条&lt;/li&gt;<br>

&lt;/ul&gt;<br>
<br>
9.最近看的一篇Javas
<div>cript的文章是？<br>
<br>
10.常使用的库有哪些？常用的前端开发工具？开发过什么应用或组件？<br>
pageSpeed .Yslow,Fiddler、fireBug<br>
11.说说YSlow(可以详细一点)
<p> 这个插件可以分析网站的页面，并告诉你为了提高网站性能，如何基于某些规则而进行优化。</p>
<p>网页制作方向的题目</p>
<p>1.什么是网站重构？div+css的布局较table布局有什么优点？<br>
2.如何理解css盒模型？<br>
3.平时做网页经常使用哪些hack?<br>
4.如何理解表现与内容相分离？<br>
5.如何解决ie6的双边距问题？<br>
6. 如何定义高度为1px的容器？{heigh：1px; width:10px; background:#000;
overflow:hidden}ie6下这个问题是默认行高造成的，overflow:hidden | zoom:0.08 | line-
height:1px这样也可以解决<br>
7.如何实现一个层在浏览器中垂直左右居中？margin：auto<br>
8.如何解决ie6的3像素问题？_zoom:1; margin-left: value;
_margin-left: value-3px;<br>
9.为什么FF下文本无法撑开容器的高度?如何解决？ 清楚浮动<br>
10.
怎么样才能让层显示在FLASH之上呢? 解决的办法是给FLASH设置透明属性&lt;param
name=&quot;wmode&quot; value=&quot;transparent&quot;
/&gt;或者&lt;param name=&quot;wmode&quot;
value=&quot;opaque&quot; /&gt;</p>
<p style="TexT-inDenT:2em"> </p>
<p style="TexT-inDenT:2em">1、
答：把"未采用CSS，大量使用HTML进行定位、布局，或者虽然已经采用CSS，但是未遵循HTML结构化标准的站点"变成"让标记回归标记的原本意
义。通过在HTML文档中使用结构化的标记以及用CSS控制页面表现，使页面的实际内容与它们呈现的格式相分离的站点。"的过程就是网站重构</p>
<p style="TexT-inDenT:2em">网站为什么要进行重构（网站重构的好处）</p>
<p style="TexT-inDenT:2em">a、使页面加载得更快速；</p>
<p style="TexT-inDenT:2em">b、降低带宽带来的费用：节约成本；</p>
<p style="TexT-inDenT:2em">c、让你在修改设计时更有效率而代价更低；</p>
<p style="TexT-inDenT:2em">d、帮助你的整个站点保持视觉的一致性；</p>
<p style="TexT-inDenT:2em">e、更利于搜索引擎的检索（符合SEO的规范）；</p>
<p style="TexT-inDenT:2em">
f、令站点更容易被各种浏览器和用户访问（包括手机、PDA和残障人士使用的文字浏览器）；</p>
<p style="TexT-inDenT:2em">g、兼容不容忽视的Mozilla系浏览器（Firefox份额）；</p>
<p style="TexT-inDenT:2em">h、提高你的职场竞争实力(事实上也就是降低失业的风险)。</p>
<p style="TexT-inDenT:2em">div+css的布局较table布局有什么优点:</p>
<p style="TexT-inDenT:2em">1、改版的时候更方便
只要改css文件。2、页面加载速度更快、结构化清晰、页面显示简洁。3、表现与结构相分离。4、易于优化（seo）搜索引擎更友好，排名更容易靠前。</p>
<p style="TexT-inDenT:2em"> </p>
<p style="TexT-inDenT:2em">答：2.如何理解css盒模型 ： 每个HTML元素都是长方形盒子
外边局(margin)、内边距(padding)、边框(border);</p>
<p style="TexT-inDenT:2em">答：3.平时做网页用的css
hack </p>
<p style="TexT-inDenT:2em">
  Ie6 * _; ie7
*, *+,!important; ff !important.</p>
<p style="TexT-inDenT:2em"> </p>
<p style="TexT-inDenT:2em"> </p>
<p style="TexT-inDenT:2em">
答：4.表现与结构相分离简单的说就是HTML中只有标签元素 表现完全是由CSS文件控制的</p>
<p style="TexT-inDenT:2em"> </p>
<p style="TexT-inDenT:2em">
答：5.解决ie6双边距问题块级元素就加display：inline；行内元素转块级元素display：inline后面再加display：table</p>
<p style="TexT-inDenT:2em">
 6.如何定义高度为1px的容器？<br></p>
<p style="TexT-inDenT:2em">{heigh：1px; width:10px;
background:#000;
overflow:hidden}ie6下这个问题是默认行高造成的，overflow:hidden | zoom:0.08 | line-height:1px这样也可以解决<br>
</p>
<p style="TexT-inDenT:2em">7.如何实现一个层在 浏览器中垂直左右居中？<br></p>
<p style="TexT-inDenT:2em">margin：auto<br></p>
<p style="TexT-inDenT:2em">8.如何解决ie6的3像素 问题？<br></p>
<p style="TexT-inDenT:2em">_zoom:1;
 margin-left: value; _margin-left:
value-3px;<br></p>
<p style="TexT-inDenT:2em">9.为什么FF下文本无法撑开容器的高度?如何解决？<br></p>
<p style="TexT-inDenT:2em">清除浮动 .clear{ clear:both; height:0px;
overflow:hidden;}</p>
<p style="TexT-inDenT:2em"><br>
10.怎么样才能让层显示在FLASH之上呢? <br></p>
<p style="TexT-inDenT:2em">解决的办法是给FLASH设置透明属性</p>
<p style="TexT-inDenT:2em">&lt;param name=&quot;wmode&quot;
value=&quot;transparent&quot; /&gt;或者&lt;param
name=&quot;wmode&quot; value=&quot;opaque&quot; /&gt;</p>
<p style="TexT-inDenT:2em"><br></p>
<p style="TexT-inDenT:2em">补充:</p>
<p style="TexT-inDenT:2em">1、margin-left:10px在FF和IE6下显示问题。IE6显示
20px,FF显示10px。<br>
  
用!important就可以解决了。margin-left:10px
!important;margin-left:5px;<br>
2、cursor:hand在FF不显示小手，如何解决？<br>
   一句话：cursor;pointer;<br>
3、要求在FF显示height为20px;IE6下显示height为25px;IE7下显示height为30px.</p>
<p style="TexT-inDenT:2em"><br>
   #test{height:20px;}<br>
   *html
#test{height:25px;}<br>
   *+html #test{height:30px;}</p>
<p style="TexT-inDenT:2em">  
这个以前我们说过，请参考<a href="http://blog.sina.com.cn/s/blog_64d8a1d00100itat.html">【IE6的疯狂Bug之九】解决CSS兼容性最常用的"Haker"</a><br>

  
三个就写上，FF只认识第一个#test,IE6只认识第二个*html #test，IE7只认识第三个*+html
#test<br>
  PS：DTD必须加上&lt;!DOCTYPE
HTML PUBLIC “-//W3C//DTD HTML 4.01 Transitional//EN”　”<a href="http://www.w3.org/TR/html4/loose.dtd">http://www.w3.org/TR/html4/loose.dtd</a>“&gt;要不还是不认。</p>
<p style="TexT-inDenT:2em"><br>
4、在IE中内容会自适应高度，而FF不会自适应高度。<br>
在要自适应高度的层中加一个层，样式为<br>
.clear{clear:both;font-size:0px;height:1px}，<br>
这样解决有一个小小的问题，高度会多一个像素。还有一种解决方法，给当前层加上一个伪类<br>
#test:after {content: &quot;.&quot;; display:
block;   height: 0; clear: both;
visibility: hidden;}</p>
<p style="TexT-inDenT:2em"> </p>
<p style="TexT-inDenT:2em">1.超链接访问过后hover样式就不出现的问题?<br></p>
<p style="TexT-inDenT:2em">
被点击访问过的超链接样式不在具有hover和active了,解决方法是改变CSS属性的排列顺序: L-V-H-A<br></p>
<p style="TexT-inDenT:2em">2.IE6的双倍边距BUG<br></p>
<p style="TexT-inDenT:2em">例如:</p>
<p style="TexT-inDenT:2em">&lt;style
type=&quot;text/css&quot;&gt;<br>
    body
{margin:0}<br>
    div {
float:left; margin-left:10px; width:200px; height:200px; border:1px
solid red }<br>
&lt;/style&gt;</p>
<p style="TexT-inDenT:2em">
浮动后本来外边距10px,但IE解释为20px,解决办法是加上display:inline<br></p>
<p style="TexT-inDenT:2em">3.为什么FF下文本无法撑开容器的高度?<br></p>
<p style="TexT-inDenT:2em">
标准浏览器中固定高度值的容器是不会象IE6里那样被撑开的,那我又想固定高度，又想能被撑开需要怎样设置呢？办法就是去掉he
ight设置min-height:200px; 这里为了照顾不认识min-height的IE6 可以这样定义：</p>
<p style="TexT-inDenT:2em">div { height:auto!important;
height:200px; min-height:200px; }<br></p>
<p style="TexT-inDenT:2em">4.为什么web标准中IE无法设置滚动条颜色了?<br></p>
<p style="TexT-inDenT:2em">原来样式设置：</p>
<p style="TexT-inDenT:2em">&lt;style
type=&quot;text/css&quot;&gt;<br>
body { scrollbar-face-color:#f6f6f6;
scrollbar-highlight-color:#fff; scrollbar-shadow-color:#eeeeee;
scrollbar-3dlight-color:#eeeeee; scrollbar-arrow-color:#000;
scrollbar-track-color:#fff; scrollbar-darkshadow-color:#fff;
}<br>
&lt;/style&gt;</p>
<p style="TexT-inDenT:2em">解决办法是将body换成html<br></p>
<p style="TexT-inDenT:2em">5.为什么无法定义1px左右高度的容器?<br></p>
<p style="TexT-inDenT:2em">
IE6下这个问题是因为默认的行高造成的，解决的方法也有很多，例如：overflow:hidden | zoom:0.08 |
line-height:1px<br></p>
<p style="TexT-inDenT:2em">6.怎么样才能让层显示在FLASH之上呢?<br></p>
<p style="TexT-inDenT:2em">解决的办法是给FLASH设置透明:</p>
<p style="TexT-inDenT:2em">&lt;param name=&quot;wmode&quot;
value=&quot;transparent&quot; /&gt;<br></p>
<p style="TexT-inDenT:2em">7.怎样使一个层垂直居中于浏览器中?<br></p>
<p style="TexT-inDenT:2em">&lt;style
type=&quot;text/css&quot;&gt;<br>
&lt;!--<br>
div {<br>
position:absolute;<br>
top:50%;<br>
left:50%;<br>
margin:-100px 0 0 -100px;<br>
width:200px;<br>
height:200px;<br>
border:1px solid red;<br>
}<br>
--&gt;<br>
&lt;/style&gt;</p>
<p style="TexT-inDenT:2em">
这里使用百分比绝对定位，与外补丁负值的方法，负值的大小为其自身宽度高度除以二<br></p>
<p style="TexT-inDenT:2em">8、firefox嵌套div标签的居中问题的解决方法<br></p>
<p style="TexT-inDenT:2em">假定有如下情况：</p>
<p style="TexT-inDenT:2em">&lt;div
id=&quot;a&quot;&gt;<br>
   
&lt;div id=&quot;b&quot;&gt;
&lt;/div&gt;<br>
&lt;/div&gt;</p>
<p style="TexT-inDenT:2em">
如果要实现b在a中居中放置，一般只需用CSS设置a的text-align属性为center。这样的方法在IE里看起来一切正常；但是在Firefox中b却会是居左的。</p>
<p style="TexT-inDenT:2em">
解决办法就是设置b的横向margin为auto。例如设置b的CSS样式为：margin: 0 auto;。</p>
<p><br></p>
</div>
</div></div></div><br><img src="http://simg.sinajs.cn/blog7style/images/special/1265.gif"> <a href="http://sina.allyes.com/main/adfclick?db=sina&amp;bid=204720,469641,474922&amp;cid=0,0,0&amp;sid=473458&amp;advid=358&amp;camid=37389&amp;show=ignore&amp;url=http://qing.blog.sina.com.cn/tag/%E5%86%99%E7%9C%9F">青春就应该这样绽放</a>  <a href="http://sina.allyes.com/main/adfclick?db=sina&amp;bid=204720,469645,474926&amp;cid=0,0,0&amp;sid=473464&amp;advid=358&amp;camid=37389&amp;show=ignore&amp;url=http%3A%2F%2Funion.9173.com%2Fpub%3Fp%3D1%26u%3D1008">游戏测试：三国时期谁是你最好的兄弟！！</a>  <a href="http://sina.allyes.com/main/adfclick?db=sina&amp;bid=204720,469646,474927&amp;cid=0,0,0&amp;sid=473465&amp;advid=358&amp;camid=37389&amp;show=ignore&amp;url=http://qing.blog.sina.com.cn/tag/%E6%98%9F%E5%BA%A7">你不得不信的星座秘密</a><img src="http://sina.allyes.com/main/adfclick?db=sina&amp;bid=204720,470173,475454&amp;cid=0,0,0&amp;sid=474001&amp;advid=358&amp;camid=37389&amp;show=ignore&amp;url=http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif?t=2">