---
layout: post
title:  "初探Ember.js"
date:   2012-08-18 14:29:48
author: 
categories: program
---

## 初探Ember.js
### by 
### at 2012-08-18 14:29:48
### original <http://feedproxy.google.com/~r/tualatrix/~3/YQJnP-eyoD8/1753.html>

<p>Ember.js是一个MVC的JavaScript框架，由Apple前雇员创建的SproutCore 2.0改名进化而来，号称「A framework for creating ambitious web applications」，现在是1.0 preview版。</p>
<p>我也不知道从哪里开始看到它的，总之最近想用新技术去填一个老坑，于是在技术选型时，就开始找一些比较前瞻的Web技术。因为是个人项目，我不在乎这技术是否成熟或者有多少最佳实践，于是就选择了这个「full-featured」并且「Bleeding edge」的框架。</p>
<p></p>
<p>如果你还不了解什么是Ember.js，可以参考这些文章：</p>
<ul>
<li><a href="http://codebrief.com/2012/01/the-top-10-javascript-mvc-frameworks-reviewed/">The Top 10 Javascript MVC Frameworks Reviewed</a></li>
<li><a href="http://emberjs.com/guides/">Ember.js Guides</a></li>
</ul>
<p>如果你对图形编程有经验，对MVC设计模式有研究，特别是有Cocoa经验，那么翻完Ember.js的那几篇Guides以后，你就会有觉得「这东西太像Cocoa了」之类的感叹。也难怪，在它还叫SproutCore的时候，它就有「Cocoa for Web」的称号。如果你的Web Apps将有大量的数据及交互，那么可以考虑试试Ember.js。</p>
<p>因为我刚刚接触Ember.js，本篇并不是总结，而是个人学习的一点认知和收获。</p>
<p>学习Ember.js我通过Adobe官方的一个初学者指南进行《<a href="http://www.adobe.com/cn/devnet/html5/articles/flame-on-a-beginners-guide-to-emberjs.html">点燃圣火！ Ember.js 的初学者指南</a>》，然后在看完这篇Guider的demo的例子：ember-tweets，是用的0.9.6版本，而现在Ember.js已经是1.0 Pre了。我把它更新到最新版本后，就跑不起来了。</p>
<p>于是我花了一些时间重新改这个demo，在hack的过程中，对Ember.js有了些认识。这个demo的主要功能是：</p>
<ol>
<li>输入Twitter的用户名，则会在左侧显示「Recent Users」，并把Tweets载入在右侧。</li>
<li>点击用户名并有一个重新排序和重新显示的过程，点击X就会删除当前用户。</li>
</ol>
<p>注：在看我下文时，建议根据教程自己过一遍Ember.js，不然可能会有点跳跃。</p>
<h4>Ember.js的Action和数据传递</h4>
<p>在我改用了Ember.js 1.0 pre后，点击用户名并重新载入Tweets的方法就无效了，于是我研究了一下源代码：</p>
<p><strong>index.html</strong></p>
<div><pre><span>&lt;a</span> <span>href=</span><span>&quot;#&quot;</span> <span>title=</span><span>&quot;view again&quot;</span> <span>{{</span><span>action</span> <span>&quot;</span><span>searchAgain</span><span>&quot;</span> <span>target=</span><span>&quot;App.recentUsersController&quot;</span><span>}}</span><span>&gt;</span>{{this}}<span>&lt;/a&gt;</span>
</pre></div>

<p><strong>app.js</strong></p>
<div><pre><span>searchAgain</span><span>:</span> <span>function</span><span>(</span><span>view</span><span>){</span>
    <span>App</span><span>.</span><span>tweetsController</span><span>.</span><span>set</span><span>(</span><span>&#39;username&#39;</span><span>,</span> <span>view</span><span>.</span><span>context</span><span>);</span>
    <span>App</span><span>.</span><span>tweetsController</span><span>.</span><span>loadTweets</span><span>();</span>
<span>},</span>
</pre></div>

<p>这句代码主要是，在点击那个link之后，触发searchAgain的方法，然后更新App.tweetsController的username值，并重新载入Tweets。</p>
<p>在这里，但是在searchAgain: function(view) 这里，view的这个参数实际上是有问题的。根据<a href="http://docs.emberjs.com/#doc=Handlebars.helpers&amp;method=.action&amp;src=false">Handlebars.helpers</a>文档的说明，该处的参数值实际对象是jQuery.Event，view包含在这里面。但我尝试改成event.view.context时，还是无法取得我所需要的用户名。</p>
<p>改成：</p>
<div><pre><span>&lt;a</span> <span>href=</span><span>&quot;#&quot;</span> <span>title=</span><span>&quot;view again&quot;</span> <span>{{</span><span>action</span> <span>&quot;</span><span>searchAgain</span><span>&quot;</span> <span>this</span> <span>target=</span><span>&quot;App.recentUsersController&quot;</span><span>}}</span><span>&gt;</span>{{this}}<span>&lt;/a&gt;</span>
</pre></div>

<p>之后，才真正的将我要的用户名通过中间那个this传递给了event.context这个值。</p>
<h4>Ember的字符串格式化</h4>
<p>默认情况下，所以在Ember内部的字符串，都是String类型的，如果你想转换成普通字符串，则需要用"%@".fmt(context)才行，所以在app.js里面要改成：</p>
<div><pre><span>App</span><span>.</span><span>tweetsController</span><span>.</span><span>set</span><span>(</span><span>&#39;username&#39;</span><span>,</span> <span>&quot;%@&quot;</span><span>.</span><span>fmt</span><span>(</span><span>event</span><span>.</span><span>context</span><span>));</span>
</pre></div>

<p>基本上做完这两点后，这个ember-tweets就能又工作了~我将这个新的ember-tweets的代码放在了Github上，你若有兴趣可以clone下来看看到底是怎么样一个App：</p>
<p><a href="https://github.com/tualatrix/ember-tweets">https://github.com/tualatrix/ember-tweets</a></p>
<h3>Ember.js的一点小结</h3>
<p>Ember.js的MVC模式很像Cocoa，而不是Rails，这是我的第一感觉。由于Ember.js是我接触的第一个JavaScript MVC框架，下面的小结可能没啥对比意义：</p>
<ul>
<li>命名空间很不错，这样多个App可以交织运行在一个WebApp下，感觉会有利于维护和复用；</li>
<li>Model、View和Controller的结构还挺清晰，改变了我之前觉得JavaScript代码难以阅读的印象；</li>
<li>Handlebars模板机制对于有任何其他模板经验的人来说比较容易上手；</li>
</ul>
<p>更多的仍在探索中，希望到时能用Ember.js顺利实现出我想要实现的Idea。</p><p><iframe src="http://feedads.g.doubleclick.net/~ah/f/gavsth0uf3hthcbn8rvdt0vaa0/468/60#http%3A%2F%2Fimtx.me%2Farchives%2F1753.html" width="100%" height="60" frameborder="0" scrolling="no" marginwidth="0" marginheight="0"></iframe></p><div>
<a href="http://feeds.feedburner.com/~ff/tualatrix?a=YQJnP-eyoD8:zG4VGXxPy0g:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/tualatrix?d=yIl2AUoC8zA" border="0"></a>
</div><img src="http://feeds.feedburner.com/~r/tualatrix/~4/YQJnP-eyoD8" height="1" width="1">