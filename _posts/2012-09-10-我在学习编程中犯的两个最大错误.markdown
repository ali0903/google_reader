---
layout: post
title:  "我在学习编程中犯的两个最大错误"
date:   2012-09-10 03:03:27
author: 
categories: program
---

## 我在学习编程中犯的两个最大错误
### by 
### at 2012-09-10 03:03:27
### original <http://blog.jobbole.com/26552/?utm_source=rss&utm_medium=rss&utm_campaign=%25e6%2588%2591%25e5%259c%25a8%25e5%25ad%25a6%25e4%25b9%25a0%25e7%25bc%2596%25e7%25a8%258b%25e4%25b8%25ad%25e7%258a%25af%25e7%259a%2584%25e4%25b8%25a4%25e4%25b8%25aa%25e6%259c%2580%25e5%25a4%25a7%25e9%2594%2599%25e8%25af%25af>

<p>一年前，我刚从大学毕业并且决定踏入社会。我有很多初始的想法并想将它们实现，<strong>但我不懂编程</strong>。</p>
<p>听从 Yipit 联合创始人Vin Vacant 的建议之后，我开始自学编程。</p>
<p>现在我终于学了足够多的知识来自己实现产品原型，一路走来，非常坎坷。如果你在跟我同样的路上，我希望你能避免犯跟我同样的错误。<span></span></p>
<p> </p>
<p><strong>错误0：我花了太多时间学习那些我不是特别需要的东西上</strong></p>
<p>有如此多的技术，又有那么多的相互矛盾的观点以至于你很难判断什么是重要的，我根本就不知道如何开始。在Hacker News、 Quora、 Stack OverFlow上看了一大堆最流行的文章之后，我简直要疯了。下面是大杂烩清单:</p>
<blockquote><p><span style="color:#888888">HTML、CSS、 AJAX、 PHP、 Javascript、 Heroku、 Celery、 SQL、jQuery、 Django、POSTGRES、 nodeJS、 BackboneJS、Ruby、 Rails、 MongoDB、 Python</span></p></blockquote>
<p> </p>
<p>在这些技术中，我不知道哪些我需要学哪些不需要学，所以我试着把它们全部学习一遍。</p>
<p><strong>我当时本应该做的：我本应该缩小这个清单，只挑出我构建原型所需要的技术。</strong></p>
<p> </p>
<p>最终，我搞清楚了这些技术就是干什么的，然后把这个清单缩减为如下：</p>
<p>0. <a href="http://www.w3schools.com/html/default.asp">HTML</a>：构造一个网页的内容（如链接，标题等元素的选择）</p>
<p>1. <a href="http://www.css-101.org/">CSS</a>: 内容的样式（如鼠标移至链接上时改变它的颜色）</p>
<p>2. <a title="《JavaScript语言精粹》" href="http://www.amazon.cn/mn/detailApp/ref=as_li_qf_sp_asin_tl?_encoding=UTF8&amp;tag=vastwork-23&amp;linkCode=as2&amp;asin=B00264FKS0&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00264FKS0">Javascript</a>：使内容变成动态的（比如用户点击链接的时候弹出一个菜单）</p>
<p>3. <a href="http://jquery.com/">jQuery</a>: 一个包含容易使用插件的javascript库（如幻灯片效果显示图片）</p>
<p>4. <a href="http://learnpythonthehardway.org/book/">Python</a>: 处理数据（如从数据库中读取用户购买记录或推荐用户可能喜欢的产品）</p>
<p>5. <a href="http://djangobook.com/en/2.0/">Django</a>: 一个用Python编写的web框架可以将以上的技术串联起来。并且提供了很多内建的、非常必要的功能。（如用户登录，以及用python容易地任何数据库）用框架能让你的工作大大简化。</p>
<div style="width:150px"><a href="http://blog.jobbole.com/wp-content/uploads/2012/09/Suneel-Chakravorty.jpg" rel="lightbox[26552]" title="Suneel Chakravorty"><img title="Suneel Chakravorty" src="http://blog.jobbole.com/wp-content/uploads/2012/09/Suneel-Chakravorty.jpg" alt="Suneel Chakravorty" width="140" height="140"></a><p>Suneel Chakravorty</p></div>
<p> </p>
<p><strong>错误1：我没有立马开始写代码</strong></p>
<p><strong></strong>我花了太多时间阅读编程书。我不确定我读的那些东西是对我的项目有直接帮助的。更糟糕的是，我没有将书中的东西应用起来，最后发现没什么效果。</p>
<p>我本应该做的：在一开始我就应该通过一些小的项目来进行学习。我之后发现了一个非常有效的学习方法：</p>
<p>0. 在看了一些教程（比如 <a href="http://blog.jobbole.com/25858/">Yipit 的开发人员 David Sinsky 分享的文章</a>）之后积极地编写例程。</p>
<p>1. 挑选一些简单的项目，然后编码实现它。例如一个简单的博客，或者一个投票的应用。</p>
<p>2. 多次重复第二步。</p>
<p>3. 构建你的初始项目原型。</p>
<p> </p>
<p>这样做有很多好处，你可以很快地克服关于编程的任何恐惧。你将会看到你的劳动成果。<strong>最重要的是，你能够很快培养构建产品所需的技术。</strong></p>
<p> </p>
<p>英文原文：<a href="http://www.suneelius.com/2012/09/07/the-2-biggest-mistakes-i-made-when-learning-to-code/">Suneel Chakravorty</a>   编译：<span><a href="http://www.jobbole.com" title="伯乐">伯乐</a></span>在线     -     <a href="http://weibo.com/fwgisbug">@贱圣OMG</a></p>
<p><span style="color:#ff0000"> 【如需转载，请标注并保留原文链接、译文链接和译者等信息，谢谢合作！】</span></p>
<p> </p>
<h2>相关文章</h2><ul><li><a href="http://blog.jobbole.com/26624/" title="科技公司的老板非得学编程吗？">科技公司的老板非得学编程吗？</a></li><li><a href="http://blog.jobbole.com/25858/" title="我是如何在8周內自学编程的">我是如何在8周內自学编程的</a></li><li><a href="http://blog.jobbole.com/26540/" title="Java编码易疏忽的十个问题">Java编码易疏忽的十个问题</a></li><li><a href="http://blog.jobbole.com/26461/" title="爱沙尼亚为所有入学儿童引入编程课">爱沙尼亚为所有入学儿童引入编程课</a></li><li><a href="http://blog.jobbole.com/26283/" title="Bill Wagner：我得到的最佳编程建议">Bill Wagner：我得到的最佳编程建议</a></li><li><a href="http://blog.jobbole.com/26294/" title="VAL：把“hello”打印10次">VAL：把“hello”打印10次</a></li><li><a href="http://blog.jobbole.com/26279/" title="Russ Olsen：我得到的最佳编程建议">Russ Olsen：我得到的最佳编程建议</a></li><li><a href="http://blog.jobbole.com/26256/" title="那些最有争议的编程观点">那些最有争议的编程观点</a></li><li><a href="http://blog.jobbole.com/22905/" title="Peter Norvig：自学编程，十年磨一剑">Peter Norvig：自学编程，十年磨一剑</a></li><li><a href="http://blog.jobbole.com/25564/" title="Rob Pike：我得到的最佳编程建议">Rob Pike：我得到的最佳编程建议</a></li></ul>