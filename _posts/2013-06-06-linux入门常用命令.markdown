---
layout: post
title:  "linux入门常用命令"
date:   2013-06-06 13:02:48
author: 晴方好玲
categories: program
---

## linux入门常用命令
### by 晴方好玲
### at 2013-06-06 13:02:48
### original <http://blog.sina.com.cn/s/blog_897db7b50101bu4d.html>

<p><strong>1.Linux进入与退出系统<br></strong>
<strong>进入</strong><strong>Linux系统</strong>：<br>
必须要输入用户的账号，在系统安装过程中可以创建以下两种帐号：<br>
　　1．root--超级用户帐号（系统管理员），使用这个帐号可以在系统中做任何事情。<br>
　　2．普通用户--这个帐号供普通用户使用，可以进行有限的操作。<br>
　　一般的Linux使用者均为普通用户，而系统管理员一般使用超级用户帐号完成一些系统管理的工作。如果只需要完成一些由普通帐号就能完成的任务，建议不要使用超级用户帐号，以免无意中破坏系统。影响系统的正常运行。<br>

　　用户登录分两步：第一步，输入用户的登录名，系统根据该登录名识别用户；第二步，输入用户的口令，该口令是用户自己设置的一个字符串，对其他用户是保密的，是在登录时系统用来辨别真假用户的关键字。<br>

　　当用户正确地输入用户名和口令后，就能合法地进入系统。屏幕显示：</p>
<p>[<strong>root@loclhost /root] #</strong></p>
<p>这时就可以对系统做各种操作了。注意超级用户的提示符是“#”，其他用户的提示符是“$”。<br>
<br>
<strong>修改口令<br></strong>　　为了更好的保护用户帐号的安全，Linux允许用户随时修改自己的口令，修改口令的命令是passwd，它将提示用户输入旧口令和新口令，之后还要求用户再次确认新口令，以避免用户无意中按错键。如果用户忘记了口令，可以向系统管理员申请为自己重新设置一个。<br>

<br>
<strong>虚拟控制台<br></strong>　　Linux是一个真正的多用户操作系统，它可以同时接受多个用户登录。Linux还允许一个用户进行多次登录，这是因为Linux和UNIX一样，提供了虚拟控制台的访问方式，允许用户在同一时间从控制台进行多次登录。虚拟控制台的选择可以通过按下Alt键和一个功能键来实现，通常使用F1-F6例如，用户登录后，按一下Alt-F2键，用户又可以看到"login:"提示符，说明用户看到了第二个虚拟控制台。然后只需按Alt-F1键，就可以回到第一个虚拟控制台。
一个新安装的Linux系统默认允许用户使用Alt-F1到Alt-F6键来访问前六个虚拟控制台。虚拟控制台可使用户同时在多个控制台上工作，真正体现Linux系统多用户的特性。用户可以在某一虚拟控制台上进行的工作尚未结束时，切换到另一虚拟控制台开始另一项工作。<br>

<br>
<strong>退出系统<br></strong>　　不论是超级用户，还是普通用户，需要退出系统时，在shell提示符下，键入exit命令即可。</p>
<h4>Linux文件的复制、删除和移动命令<br>
<br>
<strong>cp</strong><strong>命令</strong></h4>
<p>该命令的功能是将给出的文件或目录拷贝到另一文件或目录中，同MSDOS下的copy命令一样，功能十分强大。</p>
<p>语法： cp [选项] 源文件或目录 目标文件或目录</p>
<p>说明：该命令把指定的源文件复制到目标文件或把多个源文件复制到目标目录中。</p>
<p>该命令的各选项含义如下：</p>
<p>- a 该选项通常在拷贝目录时使用。它保留链接、文件属性，并递归地拷贝目录，其作用等于dpR选项的组合。</p>
<p>- d 拷贝时保留链接。</p>
<p>- f 删除已经存在的目标文件而不提示。</p>
<p>- i 和f选项相反，在覆盖目标文件之前将给出提示要求用户确认。回答y时目标文件将被覆盖，是交互式拷贝。</p>
<p>- p 此时cp除复制源文件的内容外，还将把其修改时间和访问权限也复制到新文件中。</p>
<p>- r 若给出的源文件是一目录文件，此时cp将递归复制该目录下所有的子目录和文件。此时目标文件必须为一个目录名。</p>
<p>- l 不作拷贝，只是链接文件。</p>
<p>
　　需要说明的是，为防止用户在不经意的情况下用cp命令破坏另一个文件，如用户指定的目标文件名已存在，用cp命令拷贝文件后，这个文件就会被新源文件覆盖，因此，建议用户在使用cp命令拷贝文件时，最好使用i选项。</p>
<p><strong>mv</strong><strong>命令</strong></p>
<p>
用户可以使用mv命令来为文件或目录改名或将文件由一个目录移入另一个目录中。该命令如同MSDOS下的ren和move的组合。</p>
<p>语法：mv [选项] 源文件或目录 目标文件或目录</p>
<p>
说明：视mv命令中第二个参数类型的不同（是目标文件还是目标目录），mv命令将文件重命名或将其移至一个新的目录中。当第二个参数类型是文件时，mv命令完成文件重命名，此时，源文件只能有一个（也可以是源目录名），它将所给的源文件或目录重命名为给定的目标文件名。当第二个参数是已存在的目录名称时，源文件或目录参数可以有多个，mv命令将各参数指定的源文件均移至目标目录中。在跨文件系统移动文件时，mv先拷贝，再将原有文件删除，而链至该文件的链接也将丢失。</p>
<p>命令中各选项的含义为：</p>
<p>- I
交互方式操作。如果mv操作将导致对已存在的目标文件的覆盖，此时系统询问是否重写，要求用户回答y或n，这样可以避免误覆盖文件。</p>
<p>- f 禁止交互操作。在mv操作要覆盖某已有的目标文件时不给任何指示，指定此选项后，i选项将不再起作用。</p>
<p>
如果所给目标文件（不是目录）已存在，此时该文件的内容将被新文件覆盖。为防止用户用mv命令破坏另一个文件，使用mv命令移动文件时，最好使用i选项。</p>
<p>mv /opt/webport/* . 将/opt/webport/下所有文件移到当前目录</p>
<p>mv text.txt wbk.txt 重命名</p>
<p><strong>rm</strong><strong>命令</strong></p>
<p>
用户可以用rm命令删除不需要的文件。该命令的功能为删除一个目录中的一个或多个文件或目录，它也可以将某个目录及其下的所有文件及子目录均删除。对于链接文件，只是断开了链接，原文件保持不变。</p>
<p>rm命令的一般形式为：</p>
<p>rm [选项] 文件…</p>
<p>如果没有使用- r选项，则rm不会删除目录。</p>
<p>该命令的各选项含义如下：</p>
<p>- f 忽略不存在的文件，从不给出提示。</p>
<p>- r 指示rm将参数中列出的全部目录和子目录均递归地删除。</p>
<p>- i 进行交互式删除。</p>
<p>
使用rm命令要小心。因为一旦文件被删除，它是不能被恢复的。了防止这种情况的发生，可以使用i选项来逐个确认要删除的文件。如果用户输入y，文件将被删除。如果输入任何其他东西，文件则不会删除。</p>
<p>rm -rf Python-2.6.8/ 删除Python-2.6.8文件夹及所有文件</p>
<h4><strong>Linux</strong><strong>目录的创建与删除命令</strong></h4>
<p><strong>mkdir</strong><strong>命令</strong></p>
<p>功能：创建一个目录（类似MSDOS下的md命令）。</p>
<p>语法：mkdir [选项] dir-name</p>
<p>
说明：该命令创建由dir-name命名的目录。要求创建目录的用户在当前目录中（dir-name的父目录中）具有写权限，并且dirname不能是当前目录中已有的目录或
文件名称。</p>
<p>命令中各选项的含义为：</p>
<p>- m 对新建目录设置存取权限。也可以用chmod命令设置。</p>
<p>- p 可以是一个路径名称。此时若路径中的某些目录尚不存在， 加上此选项后，
系统将自动建立好那些尚不存在的目录，即一次可以建立多个目录。</p>
<p><strong>rmdir</strong> <strong>命令</strong></p>
<p>功能：删除空目录。</p>
<p>语法：rmdir [选项] dir-name</p>
<p>说明：dir-name表示目录名。该命令从一个目录中删除一个或多个子目录项。需要特别注意的是，一个目录被删除之前必须是空的。rm
- r dir命令可代替 rmdir，但是有危险性。删除某目录时也必须具有对父目录的写权限。</p>
<p>命令中各选项的含义为：</p>
<p>- p
递归删除目录dirname，当子目录删除后其父目录为空时，也一同被删除。如果整个路径被删除或者由于某种原因保留部分路径，则系统在标准输出上显示相应
的信息。</p>
<p><strong>cd</strong> <strong>命令</strong></p>
<p>功能：改变工作目录。</p>
<p>语法：cd [directory]</p>
<p>说明：该命令将当前目录改变至directory所指定的目录。若没有指定directory，
则回到用户的主目录。为了改变到指定目录，用户必须拥有对指定目录的执行和读 权限。</p>
<p>该命令可以使用通配符（通配符含义请参见第十章）。</p>
<p><strong><br>
pwd</strong> <strong>命令</strong></p>
<p>
在Linux层次目录结构中，用户可以在被授权的任意目录下利用mkdir命令创建新目录，也可以利用cd命令从一个目录转换到另一个目录。然而，没有提示符来告知用户目前处于哪一个目录中。要想知道当前所处的目录，可以使用pwd命令，该命令显示整个路径名。</p>
<p>语法：pwd</p>
<p>说明：此命令显示出当前工作目录的绝对路径。</p>
<p><strong>ls</strong> <strong>命令</strong></p>
<p>
ls是英文单词list的简写，其功能为列出目录的内容。这是用户最常用的一个命令之一，因为用户需要不时地查看某个目录的内容。该命令类似于DOS下的dir命令。</p>
<p>语法：ls [选项] [目录或是文件]</p>
<p>
对于每个目录，该命令将列出其中的所有子目录与文件。对于每个文件，ls将输出其文件名以及所要求的其他信息。默认情况下，输出条目按字母顺序排序。当未给出目录名或是文件名时，就显示当前目录的信息。</p>
<p>命令中各选项的含义如下：</p>
<p>- a 显示指定目录下所有子目录与文件，包括隐藏文件。</p>
<p>- A 显示指定目录下所有子目录与文件，包括隐藏文件。但不列出“.”和 “..”。</p>
<p>- b 对文件名中的不可显示字符用八进制逃逸字符显示。</p>
<p>- c 按文件的修改时间排序。</p>
<p>- C 分成多列显示各项。</p>
<p>- d 如果参数是目录，只显示其名称而不显示其下的各文件。往往与l选项一起使用，以得到目录的详细信息。</p>
<p>- f 不排序。该选项将使lts选项失效，并使aU选项有效。</p>
<p>- F
在目录名后面标记“/”，可执行文件后面标记“*”，符号链接后面标记“@”，管道（或FIFO）后面标记“|”，socket文件后面标记“=”。</p>
<p>- i 在输出的第一列显示文件的i节点号。</p>
<p>- l 以长格式来显示文件的详细信息。这个选项最常用。</p>
<p>每行列出的信息依次是： 文件类型与权限 链接数 文件属主 文件属组 文件大小 建立或最近修改的时间 名字</p>
<p>对于符号链接文件，显示的文件名之后有“—〉”和引用文件路径名。</p>
<p>对于设备文件，其“文件大小”字段显示主、次设备号，而不是文件大小。</p>
<p>目录中的总块数显示在长格式列表的开头，其中包含间接块。</p>
<p>- L 若指定的名称为一个符号链接文件，则显示链接所指向的文件。</p>
<p>- m 输出按字符流格式，文件跨页显示，以逗号分开。</p>
<p>- n 输出格式与l选项相同，只不过在输出中文件属主和属组是用相应的UID号和GID号来表示，而不是实际的名称。</p>
<p>- o 与l选项相同，只是不显示拥有者信息。</p>
<p>- p 在目录后面加一个“/”。</p>
<p>- q 将文件名中的不可显示字符用“?”代替。</p>
<p>- r 按字母逆序或最早优先的顺序显示输出结果。</p>
<p>- R 递归式地显示指定目录的各个子目录中的文件。</p>
<p>- s 给出每个目录项所用的块数，包括间接块。</p>
<p>- t 显示时按修改时间（最近优先）而不是按名字排序。若文件修改时间相同，则
按字典顺序。修改时间取决于是否使用了c或u选顶。缺省的时间标记是最后一次修 改时间。</p>
<p>- u 显示时按文件上次存取的时间（最近优先）而不是按名字排序。即将-t的时间 标记修改为最后一次访问的时间。</p>
<p>- x 按行显示出各排序项的信息。</p>
<p>用ls - l命令显示的信息中，开头是由10个字符构成的字符串，其中第一个字符表示文件类型，它可以是下述类型之一：</p>
<p>- 普通文件</p>
<p>d 目录</p>
<p>l 符号链接</p>
<p>b 块设备文件</p>
<p>c 字符设备文件</p>
<p>后面的9个字符表示文件的访问权限，分为3组，每组3位。</p>
<p>第一组表示文件属主的权限，第二组表示同组用户的权限，第三组表示其他用户的权限。每一组的三个字
符分别表示对文件的读、写和执行权限。</p>
<p>各权限如下所示：</p>
<p>r 读</p>
<p>w 写</p>
<p>x 执行。对于目录，表示进入权限。</p>
<p>s 当文件被执行时，把该文件的UID或GID赋予执行进程的UID（用户ID）或GID（组ID）。</p>
<p>t
设置标志位（留在内存，不被换出）。如果该文件是目录，在该目录中的文件只能被超级用户、目录拥有者或文件属主删除。如果它是可执行文件，在该文件执行后，指向其正文段的指针仍留在内存。这样再次执行它时，系统就能更快地装入该文件。</p>
<h4>Linux文本处理命令</h4>
<p><strong>sort</strong><strong>命令</strong></p>
<p>
sort命令的功能是对文件中的各行进行排序。sort命令有许多非常实用的选项，这些选项最初是用来对数据库格式的文件内容进行各种排序操作的。实际上，sort命令可以被认为是一个非常强大的数据管理工具，用来管理内容类似数据库记录的文件。</p>
<p>
Sort命令将逐行对文件中的内容进行排序，如果两行的首字符相同，该命令将继续比较这两行的下一字符，如果还相同，将继续进行比较。</p>
<p>语法：</p>
<p>sort [选项] 文件</p>
<p>说明：sort命令对指定文件中所有的行进行排序，并将结果显示在标准输出上。如不指定输入文件或使用“-
”，则表示排序内容来自标准输入。</p>
<p>
sort排序是根据从输入行抽取的一个或多个关键字进行比较来完成的。排序关键字定义了用来排序的最小的字符序列。缺省情况下以整行为关键字按ASCII字符顺序进行排序。</p>
<p>改变缺省设置的选项主要有：</p>
<p>- m 若给定文件已排好序，合并文件。</p>
<p>- c 检查给定文件是否已排好序，如果它们没有都排好序，则打印一个出错信息，并以状态值1退出。</p>
<p>- u 对排序后认为相同的行只留其中一行。</p>
<p>- o 输出文件
将排序输出写到输出文件中而不是标准输出，如果输出文件是输入文件之一，sort先将该文件的内容写入一个临时文件，然后再排序和写输出结果。</p>
<p>改变缺省排序规则的选项主要有：</p>
<p>- d 按字典顺序排序，比较时仅字母、数字、空格和制表符有意义。</p>
<p>- f 将小写字母与大写字母同等对待。</p>
<p>- I 忽略非打印字符。</p>
<p>- M 作为月份比较：“JAN”&lt;“FEB”</p>
<p>- r 按逆序输出排序结果。</p>
<p>＋posl - pos2
指定一个或几个字段作为排序关键字，字段位置从posl开始，到pos2为止（包括posl，不包括pos2）。如不指定pos2，则关键字为从posl到行尾。字段和字符的位置从0开始。</p>
<p>- b 在每行中寻找排序关键字时忽略前导的空白（空格和制表符）。</p>
<p>- t separator 指定字符separator作为字段分隔符。</p>
<p><strong>uniq</strong><strong>命令</strong></p>
<p>
文件经过处理后在它的输出文件中可能会出现重复的行。例如，使用cat命令将两个文件合并后，再使用sort命令进行排序，就可能出现重复行。这时可以使用uniq命令将这些重复行从输出文件中删除，只留下每条记录的唯一样本。</p>
<p>语法：</p>
<p>uniq [选项] 文件</p>
<p>
说明：这个命令读取输入文件，并比较相邻的行。在正常情况下，第二个及以后更多个重复行将被删去，行比较是根据所用字符集的排序序列进行的。该命令加工后的结果写到输出文件中。输入文件和输出文件必须不同。如果输入文件用“-
”表示，则从标准输入读取。</p>
<p>该命令各选项含义如下：</p>
<p>- c 显示输出中，在每行行首加上本行在文件中出现的次数。它可取代- u和- d选项。</p>
<p>- d 只显示重复行。</p>
<p>- u 只显示文件中不重复的各行。</p>
<p>- n
前n个字段与每个字段前的空白一起被忽略。一个字段是一个非空格、非制表符的字符串，彼此由制表符和空格隔开（字段从0开始编号）。</p>
<p>+n 前n个字符被忽略，之前的字符被跳过（字符从0开始编号）。</p>
<p>- f n 与- n相同，这里n是字段数。</p>
<p>- s n 与＋n相同，这里n是字符数。</p>
<h4><strong>Linux</strong><strong>备份与压缩命令</strong></h4>
<p><strong>tar</strong><strong>命令</strong></p>
<p>
tar可以为文件和目录创建档案。利用tar，用户可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案，如软盘。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。Linux上的tar是GNU版本的。</p>
<p>语法：tar [主选项+辅选项] 文件或者目录</p>
<p>使用该命令时，主选项是必须要有的，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。</p>
<p>主选项：</p>
<p>c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。</p>
<p>r
把要存档的文件追加到档案文件的未尾。例如用户已经作好备份文件，又发现还有一个目录或是一些文件忘记备份了，这时可以使用该选项，将忘记的目录或文件追加到备份文件中。</p>
<p>t 列出档案文件的内容，查看已经备份了哪些文件。</p>
<p>u 更新文件。就是说，用新增的文件取代原备份文件，如果在备份文件中找不到要更新的文件，则把它追加到备份文件的最后。</p>
<p>x 从档案文件中释放文件。</p>
<p>辅助选项：</p>
<p>b 该选项是为磁带机设定的。其后跟一数字，用来说明区块的大小，系统预设值为20（20*512 bytes）。</p>
<p>f 使用档案文件或设备，这个选项通常是必选的。</p>
<p>k 保存已经存在的文件。例如我们把某个文件还原，在还原的过程中，遇到相同的文件，不会进行覆盖。</p>
<p>m 在还原文件时，把所有文件的修改时间设定为现在。</p>
<p>M 创建多卷的档案文件，以便在几个磁盘中存放。</p>
<p>v 详细报告tar处理的文件信息。如无此选项，tar不报告文件信息。</p>
<p>w 每一步都要求确认。</p>
<p>z 用gzip来压缩/解压缩文件，加上该选项后可以将档案文件进行压缩，但还原时也一定要使用该选项进行解压缩。</p>
<p>tar -cvf my.tar file1 单个文件打包</p>
<p>tar -cvf my.tar dir1 dir2 多个目录打包</p>
<p>tar -xvf my.tar 解包至当前目录</p>
<p>tar -czvf /tmp/etc.tar.gz /etc 打包，以gzip压缩，使用z参数，用 .tar.gz 或 .tgz
后缀</p>
<p>tar -cjvf /tmp/etc.tar.bz2 /etc 打包，以bzip2压缩，用 .tar.bz2 后缀</p>
<p>tar -xzvf etc.tar.gz -C temp/ 将etc.tar.gz解压到temp目录</p>
<p><strong>gzip</strong><strong>命令</strong></p>
<p>
减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。gzip是在Linux系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。</p>
<p>语法：gzip [选项] 压缩（解压缩）的文件名</p>
<p>各选项的含义：</p>
<p>-c 将输出写到标准输出上，并保留原有文件。</p>
<p>-d 将压缩文件解压。</p>
<p>-l 对每个压缩文件，显示下列字段：</p>
<p>压缩文件的大小</p>
<p>未压缩文件的大小</p>
<p>压缩比</p>
<p>未压缩文件的名字</p>
<p>-r 递归式地查找指定目录并压缩其中的所有文件或者是解压缩。</p>
<p>-t 测试，检查压缩文件是否完整。</p>
<p>-v 对每一个压缩和解压的文件，显示文件名和压缩比。</p>
<p>-num
用指定的数字num调整压缩的速度，-1或--fast表示最快压缩方法（低压缩比），-9或--best表示最慢压缩方法（高压缩比）。系统缺省值为6。</p>
<p><strong>unzip</strong><strong>命令</strong></p>
<p>用MS
Windows下的压缩软件winzip压缩的文件如何在Linux系统下展开呢？可以用unzip命令，该命令用于解扩展名为.zip的压缩文件。</p>
<p>语法：unzip [选项] 压缩文件名.zip</p>
<p>各选项的含义分别为：</p>
<p>-x 文件列表 解压缩文件，但不包括指定的file文件。</p>
<p>-v 查看压缩文件目录，但不解压。</p>
<p>-t 测试文件有无损坏，但不解压。</p>
<p>-d 目录 把压缩文件解到指定目录下。</p>
<p>-z 只显示压缩文件的注解。</p>
<p>-n 不覆盖已经存在的文件。</p>
<p>-o 覆盖已存在的文件且不要求用户确认。</p>
<p>-j 不重建文档的目录结构，把所有文件解压到同一目录下。</p>
<p>unzip text.zip 解压到当前目录</p>
<p>zip -q-r temp.zip temp/ 将temp压缩到当前目录</p>
<p>zip -q-r temp.zip /home/temp</p>
<h4>在Linux环境下运行DOS命令　 　</h4>
<p>
Linux系统提供了一组称为mtools的可移植工具，可以让用户轻松地从标准的DOS软盘上读、写文件和目录。它们对DOS和Linux环境之间交换文件非常有用。它们是不具备共同的文件系统格式的系统之间交换文件的有力手段。对于一个MSDOS的软盘，只要把软盘放在软驱中，就可以利用mtools提供的命令来访问软盘上的文件。</p>
<p>mtools的主要命令如下：</p>
<p>mcd 目录名 改变MSDOS目录；</p>
<p>mcopy 源文件 目标文件 在MSDOS和Unix之间复制文件；</p>
<p>mdel 文件名 删除MSDOS文件；</p>
<p>mdir 目录名 显示MSDOS目录；</p>
<p>mformat 驱动器号 在低级格式化的软盘上创建MSDOS文件系统；</p>
<p>rnlabel 驱动器号 产生MSDOS卷标；</p>
<p>mmd 目录名 建立MSDOS目录；</p>
<p>mrd 目录名 删除MSDOS目录；</p>
<p>mren 源文件 目标文件 重新命名已存在的MSDOS文件；</p>
<p>mtype 文件名 显示MSDOS文件的内容。</p>
<p>提示：这些命令和对应的MSDOS命令非常相似。</p>
<p><strong>Linux改变文件或目录的访问权限命令</strong></p>
<p>　　Linux系统中的每个文件和目录都有访问许可权限，用它来确定谁可以通过何种方式对文件和目录进行访问和操作。</p>
<p>
　　文件或目录的访问权限分为只读，只写和可执行三种。以文件为例，只读权限表示只允许读其内容，而禁止对其做任何的更改操作。可执行权限表示允许将该文件作为一个程序执行。文件被创建时，文件所有者自动拥有对该文件的读、写和可执行权限，以便于对文件的阅读和修改。用户也可根据需要把访问权限设置为需要的任何组合。</p>
<p>
　　有三种不同类型的用户可对文件或目录进行访问：文件所有者，同组用户、其他用户。所有者一般是文件的创建者。所有者可以允许同组用户有权访问文件，还可以将文件的访问权限赋予系统中的其他用户。在这种情况下，系统中每一位用户都能访问该用户拥有的文件或目录。</p>
<p>
　　每一文件或目录的访问权限都有三组，每组用三位表示，分别为文件属主的读、写和执行权限；与属主同组的用户的读、写和执行权限；系统中其他用户的读、写和执行权限。当用ls
-l命令显示文件或目录的详细信息时，最左边的一列为文件的访问权限。例如：</p>
<p>　　$ ls -l sobsrc. tgz</p>
<p>　　-rw-r--r-- 1 root root 483997 Ju1 l5 17:3l sobsrc. tgz</p>
<p>
　　横线代表空许可。r代表只读，w代表写，x代表可执行。注意这里共有10个位置。第一个字符指定了文件类型。在通常意义上，一个目录也是一个文件。如果第一个字符是横线，表示是一个非目录的文件。如果是d，表示是一个目录。</p>
<p>　　例如：</p>
<p>　　- rw- r-- r--</p>
<p>　　普通文件 文件主 组用户 其他用户</p>
<p>　　是文件sobsrc.tgz
的访问权限，表示sobsrc.tgz是一个普通文件；sobsrc.tgz的属主有读写权限；与sobsrc.tgz属主同组的用户只有读权限；其他用户也只有读权限。</p>
<p>
　　确定了一个文件的访问权限后，用户可以利用Linux系统提供的chmod命令来重新设定不同的访问权限。也可以利用chown命令来更改某个文件或目录的所有者。利用chgrp命令来更改某个文件或目录的用户组。</p>
<p>　　下面分别对这些命令加以介绍。</p>
<p>　　chmod 命令</p>
<p>　　chmod命令是非常重要的，用于改变文件或目录的访问权限。用户用它控制文件或目录的访问权限。</p>
<p>　　该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。</p>
<p>　　1. 文字设定法</p>
<p>　　chmod [who] [+ | - | =] [mode] 文件名?</p>
<p>　　命令中各选项的含义为：</p>
<p>　　操作对象who可是下述字母中的任一个或者它们的组合：</p>
<p>　　u 表示“用户（user）”，即文件或目录的所有者。</p>
<p>　　g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户。</p>
<p>　　o 表示“其他（others）用户”。</p>
<p>　　a 表示“所有（all）用户”。它是系统默认值。</p>
<p>　　操作符号可以是：</p>
<p>　　+ 添加某个权限。</p>
<p>　　- 取消某个权限。</p>
<p>　　= 赋予给定权限并取消其他所有权限（如果有的话）。</p>
<p>　　设置mode所表示的权限可用下述字母的任意组合：</p>
<p>　　r 可读。</p>
<p>　　w 可写。</p>
<p>　　x 可执行。</p>
<p>　　X 只有目标文件对某些用户是可执行的或该目标文件是目录时才追加x 属性。</p>
<p>　　s
在文件执行时把进程的属主或组ID置为该文件的文件属主。方式“u＋s”设置文件的用户ID位，“g＋s”设置组ID位。</p>
<p>　　t 保存程序的文本到交换设备上。</p>
<p>　u 与文件属主拥有一样的权限。</p>
<p>　　g 与和文件属主同组的用户拥有一样的权限。</p>
<p>　　o 与其他用户拥有一样的权限。</p>
<p>　　文件名：以空格分开的要改变权限的文件列表，支持通配符。</p>
<p>　　在一个命令行中可给出多个权限方式，其间用逗号隔开。例如：chmod g+r，o+r example</p>
<p>　　使同组和其他用户对文件example 有读权限。</p>
<p>　　2. 数字设定法</p>
<p>
　　我们必须首先了解用数字表示的属性的含义：0表示没有权限，1表示可执行权限，2表示可写权限，4表示可读权限，然后将其相加。所以数字属性的格式应为3个从0到7的八进制数，其顺序是（u）（g）（o）。</p>
<p>　　例如，如果想让某个文件的属主有“读/写”二种权限，需要把4（可读）+2（可写）＝6（读/写）。</p>
<p>　　数字设定法的一般形式为：</p>
<p>　　chmod [mode] 文件名?</p>
<p>　　<strong>chgrp</strong><strong>命令</strong></p>
<p>　功能：改变文件或目录所属的组。</p>
<p>　　语法：chgrp [选项] group filename?</p>
<p>
　　该命令改变指定指定文件所属的用户组。其中group可以是用户组ID，也可以是/etc/group文件中用户组的组名。文件名是以空格分开的要改变属组的文件列表，支持通配符。如果用户不是该文件的属主或超级用户，则不能改变该文件的组。</p>
<p>　　该命令的各选项含义为：</p>
<p>　　- R 递归式地改变指定目录及其下的所有子目录和文件的属组。</p>
<p>　　chown 命令</p>
<p>
　　功能：更改某个文件或目录的属主和属组。这个命令也很常用。例如root用户把自己的一个文件拷贝给用户xu，为了让用户xu能够存取这个文件，root用户应该把这个文件的属主设为xu，否则，用户xu无法存取这个文件。</p>
<p>　　语法：chown [选项] 用户或组 文件</p>
<p>
　　说明：chown将指定文件的拥有者改为指定的用户或组。用户可以是用户名或用户ID。组可以是组名或组ID。文件是以空格分开的要改变权限的文件列表，支持通配符。</p>
<p>　该命令的各选项含义如下：</p>
<p>　　- R 递归式地改变指定目录及其下的所有子目录和文件的拥有者。</p>
<p>　　- v 显示chown命令所做的工作。</p>
<h4>Linux与用户有关的命令</h4>
<p><strong>passwd</strong><strong>命令</strong></p>
<p>
出于系统安全考虑，Linux系统中的每一个用户除了有其用户名外，还有其对应的用户口令。因此使用useradd命令增加时，还需使用passwd命令为每一位新增加的用户设置口令；用户以后还可以随时用passwd命令改变自己的口令。</p>
<p>该命令的一般格式为： passwd [用户名] 其中用户名为需要修改口令的用户名。只有超级用户可以使用“passwd
用户名”修改其他用户的口令，普通用户只能用不带参数的passwd命令修改自己的口令。</p>
<p>该命令的使用方法如下：</p>
<p>输入</p>
<p>passwd&lt; Enter&gt;；</p>
<p>在（current） UNIX passwd:下输入当前的口令</p>
<p>在new password:提示下输入新的口令（在屏幕上看不到这个口令）：</p>
<p>系统提示再次输入这个新口令。</p>
<p>输入正确后，这个新口令被加密并放入/etc/shdow文件。选取一个不易被破译的口令是很重要的。</p>
<p>选取口令应遵守如下规则：</p>
<p>口令应该至少有六位（最好是八位）字符；</p>
<p>口令应该是大小写字母、标点符号和数字混杂的。</p>
<p>超级用户修改其他用户（xxq）的口令的过程如下，</p>
<p># passwd root</p>
<p>New UNIX password:</p>
<p>Retype new UNIX password:</p>
<p>passwd: all authentication tokens updated successfully</p>
<p>#</p>
<p><strong>su</strong><strong>命令</strong></p>
<p>
这个命令非常重要。它可以让一个普通用户拥有超级用户或其他用户的权限，也可以让超级用户以普通用户的身份做一些事情。普通用户使用这个命令时必须有超级用户或其他用户的口令。如要离开当前用户的身份，可以打exit。</p>
<p>该命令的一般形式为： su [选项] [? ] [使用者帐号]</p>
<p>说明：若没有指定使用者帐号，则系统预设值为超级用户root。 该命令中各选项的含义分别为：</p>
<p>? c 执行一个命令后就结束。</p>
<p>? 加了这个减号的目的是使环境变量和欲转换的用户相同。</p>
<p>? m 保留环境变量不变。</p>
<p>password: 【输入超级用户的密码】 　</p>
<h4>Linux系统管理命令</h4>
<p><strong>wall</strong><strong>命令</strong></p>
<p>这个命令的功能是对全部已登录的用户发送信息，用户可以先把要发送的信息写好存入一个文件中，然后输入：</p>
<p># wall &lt; 文件名</p>
<p>这样就能对所有的用户发送信息了。</p>
<p>在上面的例子中符号“&lt;”表示输入重定向，有关它的含义和用法请参阅第十章的有关内容。 例如：</p>
<p># wall ‘Thank you!’</p>
<p>Broadcast message from root （tty1） Fri Nov 26 14：15：07 1999…</p>
<p>Thank you!</p>
<p>#</p>
<p>执行以上命令后，用户的屏幕上显示出“Thank
you!”信息后，并不出现系统提示符$（#），再次按回车键后，屏幕出现系统提示符。</p>
<p><strong>write</strong><strong>命令</strong></p>
<p>write命令的功能是向系统中某一个用户发送信息。 该命令的一般格式为：</p>
<p>write 用户帐号 [终端名称]</p>
<p>例如： $ write Guest hello</p>
<p>此时系统进入发送信息状态，用户可以输入要发送的信息，输入完毕，希望退出发送状态时，按组合键&lt;
Ctrl+c&gt;即可。</p>
<p><strong>mesg</strong><strong>指令</strong></p>
<p>mesg命令设定是否允许其他用户用write命令给自己发送信息。如果允许别人给自己发送信息，输入命令：</p>
<p># mesg y</p>
<p>否则，输入：</p>
<p># mesg n</p>
<p>对于超级用户，系统的默认值为 n；而对于一般用户系统的默认值为y。
如果mesg后不带任何参数，则显示当前的状态是y还是n.。</p>
<p>sync命令</p>
<p>　　sync命令是在关闭Linux系统时使用的。
用户需要注意的是，不能用简单的关闭电源的方法关闭系统，因为Linux象其他Unix系统一样，在内存中缓存了许多数据，在关闭系统时需要进行内存数据与硬盘数据的同步校验，保证硬盘数据在关闭系统时是最新的，只有这样才能确保数据不会丢失。一般正常的关闭系统的过程是自动进行这些工作的，在系统运行过程中也会定时做这些工作，不需要用户干预。sync命令是强制把内存中的数据写回硬盘，以免数据的丢失。用户可以在需要的时候使用此命令。该命令的一般格式为：</p>
<p>　　sync</p>
<p>shutdown命令</p>
<p>shutdown
命令可以安全地关闭或重启Linux系统，它在系统关闭之前给系统上的所有登录用户提示一条警告信息。该命令还允许用户指定一个时间参数，可以是一个精确的时间，也可以是从现在开始的一个时间段。精确时间的格式是hh:mm，表示小时和分钟；时间段由“+”和分钟数表示。系统执行该命令后，会自动进行数据同步的工作。</p>
<p>该命令的一般格式为： shutdown [选项] [时间] [警告信息] 命令中各选项的含义为：</p>
<p>- k 并不真正关机，而只是发出警告信息给所有用户。</p>
<p>- r 关机后立即重新启动。</p>
<p>- h 关机后不重新启动。</p>
<p>- f 快速关机，重启动时跳过fsck。</p>
<p>- n 快速关机，不经过init程序。</p>
<p>- c 取消一个已经运行的shutdown。</p>
<p>需要特别说明的是，该命令只能由超级用户使用。</p>
<p><strong>free</strong><strong>命令</strong></p>
<p>
free命令的功能是查看当前系统内存的使用情况，它显示系统中剩余及已用的物理内存和交换内存，以及共享内存和被核心使用的缓冲区。</p>
<p>该命令的一般格式为： free [-b | -k | -m] 命令中各选项的含义如下：</p>
<p>-b 以字节为单位显示。</p>
<p>-k 以K字节为单位显示。</p>
<p>-m 以兆字节为单位显示。</p>
<p>uptime命令</p>
<p>
uptime命令显示系统已经运行了多长时间，它依次显示下列信息：现在时间、系统已经运行了多长时间、目前有多少登录用户、系统在过去的1分钟、5分钟和15分钟内的平均负载。</p>
<p>该命令的一般格式为： uptime</p>
<h4>Linux磁盘管理</h4>
<p><strong>df</strong><strong>命令</strong></p>
<p>功能：检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。</p>
<p>语法：df [选项]</p>
<p>说明：df命令可显示所有文件系统对i节点和磁盘块的使用情况。</p>
<p>该命令各个选项的含义如下：</p>
<p>-a 显示所有文件系统的磁盘使用情况，包括0块（block）的文件系统，如/proc文件系统。</p>
<p>-k 以k字节为单位显示。</p>
<p>-i 显示i节点信息，而不是磁盘块。</p>
<p>-t 显示各指定类型的文件系统的磁盘空间使用情况。</p>
<p>-x 列出不是某一指定类型文件系统的磁盘空间使用情况（与t选项相反）。</p>
<p>-T 显示文件系统类型。</p>
<p><strong>du</strong><strong>命令</strong></p>
<p>du的英文原义为“disk usage”，含义为显示磁盘空间的使用情况。</p>
<p>功能：统计目录（或文件）所占磁盘空间的大小。</p>
<p>语法：du [选项] [Names…]</p>
<p>
说明：该命令逐级进入指定目录的每一个子目录并显示该目录占用文件系统数据块（1024字节）的情况。若没有给出Names，则对当前目录进行统计。</p>
<p>该命令的各个选项含义如下：</p>
<p>-s 对每个Names参数只给出占用的数据块总数。</p>
<p>-a
递归地显示指定目录中各文件及子孙目录中各文件占用的数据块数。若既不指定-s，也不指定-a，则只显示Names中的每一个目录及其中的各子目录所占的磁盘块数。</p>
<p>-b 以字节为单位列出磁盘空间使用情况（系统缺省以k字节为单位）。</p>
<p>-k 以1024字节为单位列出磁盘空间使用情况。</p>
<p>-c 最后再加上一个总计（系统缺省设置）。</p>
<p>-l 计算所有的文件大小，对硬链接文件，则计算多次。</p>
<p>-x 跳过在不同文件系统上的目录不予统计。</p>
<p>dd命令</p>
<p>
功能：把指定的输入文件拷贝到指定的输出文件中，并且在拷贝过程中可以进行格式转换。可以用该命令实现DOS下的diskcopy命令的作用。先用dd命令把软盘上的数据写成硬盘的一个寄存文件，再把这个寄存文件写入第二张软盘上，完成diskcopy的功能。需要注意的是，应该将硬盘上的寄存文件用rm命令删除掉。系统默认使用标准输入文件和标准输出文件。</p>
<p>语法：dd [选项]</p>
<p>if =输入文件（或设备名称）。</p>
<p>of =输出文件（或设备名称）。</p>
<p>ibs = bytes 一次读取bytes字节，即读入缓冲区的字节数。</p>
<p>skip = blocks 跳过读入缓冲区开头的ibs*blocks块。</p>
<p>obs = bytes 一次写入bytes字节，即写入缓冲区的字节数。</p>
<p>bs = bytes 同时设置读/写缓冲区的字节数（等于设置ibs和obs）。</p>
<p>cbs = byte 一次转换bytes字节。</p>
<p>count=blocks 只拷贝输入的blocks块。</p>
<p>conv = ASCII 把EBCDIC码转换为ASCIl码。</p>
<p>conv = ebcdic 把ASCIl码转换为EBCDIC码。</p>
<p>conv = ibm 把ASCIl码转换为alternate EBCDIC码。</p>
<p>conv = block 把变动位转换成固定字符。</p>
<p>conv = ublock 把固定位转换成变动位。</p>
<p>conv = ucase 把字母由小写转换为大写。</p>
<p>conv = lcase 把字母由大写转换为小写。</p>
<p>conv = notrunc 不截短输出文件。</p>
<p>conv = swab 交换每一对输入字节。</p>
<p>conv = noerror 出错时不停止处理。</p>
<p>conv = sync 把每个输入记录的大小都调到ibs的大小（用NUL填充）。</p>
<p><strong>fdformat</strong> <strong>命令</strong></p>
<p>
软盘是用户常用的存储介质之一。软盘在使用之前必须先作格式化操作，然后可以用tar、dd、cpio等命令存储数据，也可以在软盘上建立可安装的文件系统。</p>
<p>功能：低级格式化软盘</p>
<p>语法：format [-n] device</p>
<p>说明：该命令的作用是对软盘进行格式化。</p>
<p>-n 软盘格式化后不作检验。</p>
<p>device 指定要进行格式化的设备，通常是下述设备之一：</p>
<p>/dev/fd0d360</p>
<p>/dev/fd0h1200</p>
<p>/dev/fd0D360</p>
<p>/dev/fd0H360</p>
<p>/dev/fd0D720</p>
<p>/dev/fd0H720</p>
<p>/dev/fd0h360</p>
<p>/dev/fd0h720</p>
<p>/dev/fd0H1440</p>
<p>Linux其它命令</p>
<p><strong>echo</strong><strong>命令</strong></p>
<p>echo命令的功能是在显示器上显示一段文字，一般起到一个提示的作用。</p>
<p>该命令的一般格式为： echo [ -n ] 字符串</p>
<p>
其中选项n表示输出文字后不换行；字符串可以加引号，也可以不加引号。用echo命令输出加引号的字符串时，将字符串原样输出；用echo命令输出不加引号的字符串时，将字符串中的各个单词作为字符串输出，各字符串之间用一个空格分割。</p>
<p><strong>环境变量</strong></p>
<p>env 显示所有环境变量</p>
<p>echo $PATH 显示环境变量PATH</p>
<p>export PATH=/usr/local/mysql/bin:$PATH 修改环境变量</p>
<p>export JAVA_HOME=/usr/local/jdk1.5 新建环境变量</p>
<p><strong>cal</strong><strong>命令</strong></p>
<p>cal命令的功能是显示某年某月的日历。</p>
<p>该命令的一般格式为： cal [选项] [月 [年]] 命令中各选项的含义为：</p>
<p>- j 显示出给定月中的每一天是一年中的第几天（从1月1日算起）。</p>
<p>- y 显示出整年的日历。</p>
<p><strong>date</strong><strong>命令</strong></p>
<p>date命令的功能是显示和设置系统日期和时间。</p>
<p>该命令的一般格式为： date [选项] 显示时间格式（以+开头，后面接格式）</p>
<p>date 设置时间格式</p>
<p>命令中各选项的含义分别为：</p>
<p>-d datestr, --date datestr 显示由datestr描述的日期</p>
<p>-s datestr, --set datestr 设置datestr 描述的日期</p>
<p>-u, --universal 显示或设置通用时间</p>
<p>时间域</p>
<p>% H 小时（00..23）</p>
<p>% I 小时（01..12）</p>
<p>% k 小时（0..23）</p>
<p>% l 小时（1..12）</p>
<p>% M 分（00..59）</p>
<p>% p 显示出AM或PM</p>
<p>% r 时间（hh：mm：ss AM或PM），12小时</p>
<p>% s 从1970年1月1日00：00：00到目前经历的秒数</p>
<p>% S 秒（00..59）</p>
<p>% T 时间（24小时制）（hh:mm:ss）</p>
<p>% X 显示时间的格式（％H:％M:％S）</p>
<p>% Z 时区 日期域</p>
<p>% a 星期几的简称（ Sun..Sat）</p>
<p>% A 星期几的全称（ Sunday..Saturday）</p>
<p>% b 月的简称（Jan..Dec）</p>
<p>% B 月的全称（January..December）</p>
<p>% c 日期和时间（ Mon Nov 8 14：12：46 CST 1999）</p>
<p>% d 一个月的第几天（01..31）</p>
<p>% D 日期（mm／dd／yy）</p>
<p>% h 和%b选项相同</p>
<p>% j 一年的第几天（001..366）</p>
<p>% m 月（01..12）</p>
<p>% w 一个星期的第几天（0代表星期天）</p>
<p>% W 一年的第几个星期（00..53，星期一为第一天）</p>
<p>% x 显示日期的格式（mm/dd/yy）</p>
<p>% y 年的最后两个数字（ 1999则是99）</p>
<p>% Y 年（例如：1970，1996等）</p>
<p>注意：只有超级用户才有权限使用date命令设置时间，一般用户只能使用date命令显示时间。</p>
<p><strong>clear</strong><strong>命令</strong></p>
<p>clear命令的功能是清除屏幕上的信息，它类似于DOS中的 cls命令。清屏后，提示符移动到屏幕左上角。</p>
<p><strong>wget命令</strong></p>
<p>命令行下载工具，如果没有安装可在<a href="http://www.gnu.org/software/wget/">http://www.gnu.org/software/wget/</a>
下载，编译安装：</p>
<p># tar zxvf wget-1.9.1.tar.gz</p>
<p># cd wget-1.9.1</p>
<p># ./configure</p>
<p># make</p>
<p># make install</p>
<p>wget http://www.python.org/ftp/python/2.6.8/Python-2.6.8.tgz</p>
<p><strong>软件安装与卸载</strong></p>
<p><strong>1. RPM包</strong></p>
<p>安装 rpm -i package.rpm</p>
<p>强制安装 rpm --force -i package.rpm</p>
<p>列出所有安装过的包 rpm -qa</p>
<p>查找所有安装过的包含某个字符串sql的软件包 rpm -qa | grep sql</p>
<p>rpm -q mysql 可以获得系统中安装的mysql软件包全名</p>
<p>rpm -e proftpd-1.2.8-1 或 rpm -e proftpd 卸载</p>
<p><strong>2. tar.gz/bz/bz2 源代码包</strong></p>
<p>1、打开一个SHELL，即终端</p>
<p>2、用CD 命令进入源代码压缩包所在的目录</p>
<p>3、根据压缩包类型解压缩文件(*代表压缩包名称)</p>
<p>tar -zxvf ****.tar.gz</p>
<p>tar -jxvf ****.tar.bz(或bz2)</p>
<p>4、用CD命令进入解压缩后的目录</p>
<p>5、输入编译文件命令：./configure（有的压缩包已经编译过，这一步可以省去）</p>
<p>6、然后是命令：make</p>
<p>7、再是安装文件命令：make install</p>
<p>8、安装完毕</p>
<p>1、打开一个SHELL，即终端</p>
<p>2、用CD 命令进入编译后的软件目录，即安装时的目录</p>
<p>3、执行反安装命令：make uninstall</p>
<p>查看端口是否被开放：lsof -i:587</p>
<p>查看端口：netstat -apn|grep 587</p>
<p>Find 命令</p>
<p>find / -name filename 再根目录里面搜索文件名为filename的文件<br>
find /etc -name *s*在目录里面搜索带有s的文件<br>
find /etc -name *S 在目录里面搜索以s结尾的文件<br>
find /etc -name s*在目录里面搜索以s开头的文件</p><br><img src="http://simg.sinajs.cn/blog7style/images/special/1265.gif"> <a href="http://sina.allyes.com/main/adfclick?db=sina&amp;bid=204720,469641,474922&amp;cid=0,0,0&amp;sid=473458&amp;advid=358&amp;camid=37389&amp;show=ignore&amp;url=http://qing.blog.sina.com.cn/tag/%E5%86%99%E7%9C%9F">青春就应该这样绽放</a>  <a href="http://sina.allyes.com/main/adfclick?db=sina&amp;bid=204720,469645,474926&amp;cid=0,0,0&amp;sid=473464&amp;advid=358&amp;camid=37389&amp;show=ignore&amp;url=http%3A%2F%2Funion.9173.com%2Fpub%3Fp%3D1%26u%3D1008">游戏测试：三国时期谁是你最好的兄弟！！</a>  <a href="http://sina.allyes.com/main/adfclick?db=sina&amp;bid=204720,469646,474927&amp;cid=0,0,0&amp;sid=473465&amp;advid=358&amp;camid=37389&amp;show=ignore&amp;url=http://qing.blog.sina.com.cn/tag/%E6%98%9F%E5%BA%A7">你不得不信的星座秘密</a><img src="http://sina.allyes.com/main/adfclick?db=sina&amp;bid=204720,470173,475454&amp;cid=0,0,0&amp;sid=474001&amp;advid=358&amp;camid=37389&amp;show=ignore&amp;url=http://simg.sinajs.cn/blog7style/images/common/sg_trans.gif?t=1">