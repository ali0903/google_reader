---
layout: post
title:  "计算机是如何启动的？"
date:   2013-02-17 08:50:22
author: 
categories: program
---

## 计算机是如何启动的？
### by 
### at 2013-02-17 08:50:22
### original <http://blog.jobbole.com/33224/?utm_source=rss&utm_medium=rss&utm_campaign=%25e8%25ae%25a1%25e7%25ae%2597%25e6%259c%25ba%25e6%2598%25af%25e5%25a6%2582%25e4%25bd%2595%25e5%2590%25af%25e5%258a%25a8%25e7%259a%2584%25ef%25bc%259f>

<p>来源：<a href="http://www.ruanyifeng.com/blog/2013/02/booting.html" rel="nofollow">阮一峰的日志</a></p>
<p>从打开电源到开始操作，计算机的启动是一个非常复杂的过程。</p>
<p>我一直搞不清楚，这个过程到底是怎么回事，只看见屏幕快速滚动各种提示…… 这几天，我查了一些资料，试图搞懂它。下面就是我整理的笔记。<span></span></p>
<p><a href="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-01.jpg" rel="lightbox[33224]" title="计算机是如何启动的？"><img title="计算机是如何启动的？" src="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-01.jpg" alt="计算机是如何启动的？" width="400" height="332"></a></p>
<p><strong>零、boot的含义</strong></p>
<p>先问一个问题，”启动”用英语怎么说？</p>
<p>回答是boot。可是，boot原来的意思是靴子，”启动”与靴子有什么关系呢？ 原来，这里的boot是bootstrap（鞋带）的缩写，它来自一句谚语：</p>
<blockquote><p>　　”pull oneself up by one’s bootstraps”</p></blockquote>
<p>字面意思是”拽着鞋带把自己拉起来”，这当然是不可能的事情。最早的时候，工程师们用它来比喻，计算机启动是一个很矛盾的过程：必须先运行程序，然后计算机才能启动，但是计算机不启动就无法运行程序！</p>
<p>早期真的是这样，必须想尽各种办法，把一小段程序装进内存，然后计算机才能正常运行。所以，工程师们把这个过程叫做”拉鞋带”，久而久之就简称为boot了。</p>
<p>计算机的整个启动过程分成四个阶段。</p>
<p><strong>一、第一阶段：BIOS</strong></p>
<p>上个世纪70年代初，”只读内存”（read-only memory，缩写为ROM）发明，开机程序被刷入ROM芯片，计算机通电后，第一件事就是读取它。</p>
<p><a href="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-02.jpg" rel="lightbox[33224]" title="计算机是如何启动的？"><img title="计算机是如何启动的？" src="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-02.jpg" alt="计算机是如何启动的？" width="500" height="415"></a></p>
<p>这块芯片里的程序叫做”基本輸出輸入系統”（Basic Input/Output System），简称为<a href="http://en.wikipedia.org/wiki/BIOS">BIOS</a>。</p>
<p><strong>1.1 硬件自检</strong></p>
<p>BIOS程序首先检查，计算机硬件能否满足运行的基本条件，这叫做”硬件自检”（Power-On Self-Test），缩写为<a href="http://en.wikipedia.org/wiki/Power-on_self-test">POST</a>。</p>
<p>如果硬件出现问题，主板会发出不同含义的<a href="http://en.wikipedia.org/wiki/Power-on_self-test#Original_IBM_POST_beep_codes">蜂鸣</a>，启动中止。如果没有问题，屏幕就会显示出CPU、内存、硬盘等信息。</p>
<p style="text-align:center"><a href="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-03.png" rel="lightbox[33224]" title="计算机是如何启动的？"><img title="计算机是如何启动的？" src="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-03.png" alt="计算机是如何启动的？" width="528" height="330"></a></p>
<p><strong>1.2 启动顺序</strong></p>
<p>硬件自检完成后，BIOS把控制权转交给下一阶段的启动程序。</p>
<p>这时，BIOS需要知道，”下一阶段的启动程序”具体存放在哪一个设备。也就是说，BIOS需要有一个外部储存设备的排序，排在前面的设备就是优先转交控制权的设备。这种排序叫做”启动顺序”（Boot Sequence）。</p>
<p>打开BIOS的操作界面，里面有一项就是”设定启动顺序”。</p>
<p style="text-align:center"><a href="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-04.jpg" rel="lightbox[33224]" title="计算机是如何启动的？"><img title="计算机是如何启动的？" src="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-04.jpg" alt="计算机是如何启动的？" width="528" height="299"></a></p>
<p><strong>二、第二阶段：主引导记录</strong></p>
<p>BIOS按照”启动顺序”，把控制权转交给排在第一位的储存设备。</p>
<p>这时，计算机读取该设备的第一个扇区，也就是读取最前面的512个字节。如果这512个字节的最后两个字节是0×55和0xAA，表明这个设备可以用于启动；如果不是，表明设备不能用于启动，控制权于是被转交给”启动顺序”中的下一个设备。</p>
<p>这最前面的512个字节，就叫做<a href="http://en.wikipedia.org/wiki/Master_boot_record">“主引导记录”</a>（Master boot record，缩写为MBR）。</p>
<p><strong>2.1 主引导记录的结构</strong></p>
<p>“主引导记录”只有512个字节，放不了太多东西。它的主要作用是，告诉计算机到硬盘的哪一个位置去找操作系统。</p>
<p>主引导记录由三个部分组成：</p>
<blockquote><p>（1） 第1-446字节：调用操作系统的机器码。</p>
<p>（2） 第447-510字节：分区表（Partition table）。</p>
<p>（3） 第511-512字节：主引导记录签名（0×55和0xAA）。</p></blockquote>
<p>其中，第二部分”分区表”的作用，是将硬盘分成若干个区。</p>
<p><strong>2.2 分区表</strong></p>
<p>硬盘分区有很多<a href="http://en.wikipedia.org/wiki/Disk_partitioning#Benefits_of_multiple_partitions">好处</a>。考虑到每个区可以安装不同的操作系统，”主引导记录”因此必须知道将控制权转交给哪个区。</p>
<p>分区表的长度只有64个字节，里面又分成四项，每项16个字节。所以，一个硬盘最多只能分四个一级分区，又叫做”主分区”。</p>
<p>每个主分区的16个字节，由6个部分组成：</p>
<blockquote><p>　　（1） 第1个字节：如果为0×80，就表示该主分区是激活分区，控制权要转交给这个分区。四个主分区里面只能有一个是激活的。</p>
<p>（2） 第2-4个字节：主分区第一个扇区的物理位置（柱面、磁头、扇区号等等）。</p>
<p>（3） 第5个字节：<a href="http://en.wikipedia.org/wiki/Partition_type">主分区类型</a>。</p>
<p>（4） 第6-8个字节：主分区最后一个扇区的物理位置。</p>
<p>（5） 第9-12字节：该主分区第一个扇区的逻辑地址。</p>
<p>（6） 第13-16字节：主分区的扇区总数。</p></blockquote>
<p>最后的四个字节（”主分区的扇区总数”），决定了这个主分区的长度。也就是说，一个主分区的扇区总数最多不超过2的32次方。</p>
<p>如果每个扇区为512个字节，就意味着单个分区最大不超过2TB。再考虑到扇区的逻辑地址也是32位，所以单个硬盘可利用的空间最大也不超过2TB。如果想使用更大的硬盘，只有2个方法：一是提高每个扇区的字节数，二是<a href="http://en.wikipedia.org/wiki/GUID_Partition_Table">增加扇区总数</a>。</p>
<p><strong>三、第三阶段：硬盘启动</strong></p>
<p>这时，计算机的控制权就要转交给硬盘的某个分区了，这里又分成三种情况。</p>
<p><strong>3.1 情况A：卷引导记录</strong></p>
<p>上一节提到，四个主分区里面，只有一个是激活的。计算机会读取激活分区的第一个扇区，叫做<a href="http://en.wikipedia.org/wiki/Volume_Boot_Record">“卷引导记录</a>“（Volume boot record，缩写为VBR）。</p>
<p>“卷引导记录”的主要作用是，告诉计算机，操作系统在这个分区里的位置。然后，计算机就会加载操作系统了。</p>
<p><strong>3.2 情况B：扩展分区和逻辑分区</strong></p>
<p>随着硬盘越来越大，四个主分区已经不够了，需要更多的分区。但是，分区表只有四项，因此规定有且仅有一个区可以被定义成”扩展分区”（Extended partition）。</p>
<p>所谓”扩展分区”，就是指这个区里面又分成多个区。这种分区里面的分区，就叫做”逻辑分区”（logical partition）。</p>
<p>计算机先读取扩展分区的第一个扇区，叫做<a href="http://en.wikipedia.org/wiki/Extended_partition">“扩展引导记录”</a>（Extended boot record，缩写为EBR）。它里面也包含一张64字节的分区表，但是最多只有两项（也就是两个逻辑分区）。</p>
<p>计算机接着读取第二个逻辑分区的第一个扇区，再从里面的分区表中找到第三个逻辑分区的位置，以此类推，直到某个逻辑分区的分区表只包含它自身为止（即只有一个分区项）。因此，扩展分区可以包含无数个逻辑分区。</p>
<p>但是，似乎很少通过这种方式启动操作系统。如果操作系统确实安装在扩展分区，一般采用下一种方式启动。</p>
<p><strong>3.3 情况C：启动管理器</strong></p>
<p>在这种情况下，计算机读取”主引导记录”前面446字节的机器码之后，不再把控制权转交给某一个分区，而是运行事先安装的<a href="http://en.wikipedia.org/wiki/Boot_loader#Modern_boot_loaders">“启动管理器”</a>（boot loader），由用户选择启动哪一个操作系统。</p>
<p>Linux环境中，目前最流行的启动管理器是<a href="http://en.wikipedia.org/wiki/GNU_GRUB">Grub</a>。</p>
<p style="text-align:center"><a href="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-05.png" rel="lightbox[33224]" title="计算机是如何启动的？"><img title="计算机是如何启动的？" src="http://blog.jobbole.com/wp-content/uploads/2013/02/how-pc-boots-up-05.png" alt="计算机是如何启动的？" width="512" height="274"></a></p>
<p><strong>四、第四阶段：操作系统</strong></p>
<p>控制权转交给操作系统后，操作系统的内核首先被载入内存。</p>
<p>以Linux系统为例，先载入/boot目录下面的kernel。内核加载成功后，第一个运行的程序是/sbin/init。它根据配置文件（Debian系统是/etc/initab）产生init进程。这是Linux启动后的第一个进程，pid进程编号为1，其他进程都是它的后代。</p>
<p>然后，init线程加载系统的各个模块，比如窗口程序和网络程序，直至执行/bin/login程序，跳出登录界面，等待用户输入用户名和密码。</p>
<p>至此，全部启动过程完成。</p>
<p>（完）</p>
<h4>相关文章</h4>
<ul>
<li><a href="http://blog.jobbole.com/23274/"><img width="150" height="150" src="http://blog.jobbole.com/wp-content/uploads/2012/07/W020120615792815464338-150x150.jpg" alt="神舟飞天的秘密：揭秘神舟九号的太空计算机"></a><a href="http://blog.jobbole.com/23274/">神舟飞天的秘密：揭秘神舟九号的太空计算机</a></li>
<li><a href="http://blog.jobbole.com/32268/"><img src="http://blog.jobbole.com/wp-content/uploads/2011/11/software-development-logo.jpg" alt="如何编写计算机模拟器"></a><a href="http://blog.jobbole.com/32268/">如何编写计算机模拟器</a></li>
<li><a href="http://blog.jobbole.com/1238/"><img src="http://blog.jobbole.com/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/20.jpg" alt="计算机科学的奠基人：艾伦·佩利"></a><a href="http://blog.jobbole.com/1238/">计算机科学的奠基人：艾伦·佩利</a></li>
<li><a href="http://blog.jobbole.com/1215/"><img src="http://blog.jobbole.com/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/28.jpg" alt="计算机的10大经典错误"></a><a href="http://blog.jobbole.com/1215/">计算机的10大经典错误</a></li>
<li><a href="http://blog.jobbole.com/1339/"><img src="http://blog.jobbole.com/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/10.jpg" alt="那些拿着高薪的CEO"></a><a href="http://blog.jobbole.com/1339/">那些拿着高薪的CEO</a></li>
<li><a href="http://blog.jobbole.com/1575/"><img width="150" height="150" src="http://blog.jobbole.com/wp-content/uploads/2011/10/1.-minimal-spanning-tree-150x150.jpg" alt="最小生成树问题，图中粗线组成一棵最小生成树"></a><a href="http://blog.jobbole.com/1575/">算法之道：形而之上谓之道</a></li>
<li><a href="http://blog.jobbole.com/1206/"><img src="http://blog.jobbole.com/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/5.jpg" alt="分布式计算领域的哥德尔Eric Brewer"></a><a href="http://blog.jobbole.com/1206/">分布式计算领域的哥德尔Eric Brewer</a></li>
<li><a href="http://blog.jobbole.com/1383/"><img src="http://blog.jobbole.com/wp-content/uploads/2011/11/book-logo.jpg" alt="一些经典的计算机书籍"></a><a href="http://blog.jobbole.com/1383/">一些经典的计算机书籍</a></li>
<li><a href="http://blog.jobbole.com/1408/"><img src="http://blog.jobbole.com/wp-content/plugins/wordpress-23-related-posts-plugin/static/thumbs/17.jpg" alt="首个计算机Bug的由来"></a><a href="http://blog.jobbole.com/1408/">首个计算机Bug的由来</a></li>
<li><a href="http://blog.jobbole.com/32544/"><img src="http://blog.jobbole.com/wp-content/uploads/2011/11/Java-programming-language-logo.jpg" alt="Java在线教程–接口篇"></a><a href="http://blog.jobbole.com/32544/">Java在线教程–接口篇</a></li>
</ul>
<p><a href="http://blog.jobbole.com/33224/">计算机是如何启动的？</a>，首发于<a href="http://blog.jobbole.com">博客 - 伯乐在线</a>。</p>