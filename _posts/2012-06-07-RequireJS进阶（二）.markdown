---
layout: post
title:  "RequireJS进阶（二）"
date:   2012-06-07 07:48:00
author: snandy
categories: program
---

## RequireJS进阶（二）
### by snandy
### at 2012-06-07 07:48:00
### original <http://www.cnblogs.com/snandy/archive/2012/06/07/2537477.html>

<p>这一篇来认识下打包工具的paths参数，在<a href="http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html">入门一</a>中就介绍了require.config方法的paths参数。用来配置jquery模块的文件名（jQuery作为AMD模块时id为“jquery”，但文件名可通过paths配置可以不必是“jquery.js”，而是带有版本的如“jquery-1.7.2.js”）。</p><p> </p><p>在入门一中，jquery-1.7.2.js和main.js都在一个域中，即把jquery-1.7.2.js下载到本地了。但有时可能一些JS资源不在同一个域。比如直接使用Google CDN上的<a href="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js">jquery 1.7.2</a>版本。而这时应该如何使用打包工具r.js呢？</p><p> </p><p>r.js自然不会去载入非本地资源，即没有办法去把外域的js文件请求下来再合并，压缩。当使用paths参数后，使用r.js合并压缩时要忽略paths映射的文件-不合并它。让其作为一个独立模块请求。</p><p> </p><p>创建目录及文件如下</p><p><img src="http://pic002.cnblogs.com/images/2012/114013/2012060523392064.png" alt=""></p><p>和上一篇一样，但main.js代码不同，注意目录中没有jQuery库。</p><p> </p><p>main.js</p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px">require.config({<br>baseUrl: 'js',<br>paths: {<br>'jquery': 'https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min'<br>}<br>});<br><br>require(['jquery', 'event', 'selector'], function($, E, S) {<br>alert($);<br>});<br></div><p>配置了paths参数，即jquery模块使用Google CDN的文件。</p><p> </p><p>如果按照上一篇的命令来执行合并压缩，</p><p><span style="background-color:#000000;color:#ffffff">node r.js -o baseUrl=js name=main out=built.js</span></p><p><img src="http://pic002.cnblogs.com/images/2012/114013/2012060523442618.png" alt=""></p><p><span style="color:#000000;background-color:#ffffff">发现命令行报错了，提示“D:\work\req\r5\js\jquery.js”不存在。刚刚新建的目录中的确没有jquery.js，因为我们使用的是Google CDN上的jquery。</span></p><p><span style="color:#000000;background-color:#ffffff"> </span></p><p><span style="color:#000000;background-color:#ffffff">此时压缩参数paths就排上用处了，修改如下</span></p><p><span style="background-color:#000000;color:#ffffff">node r.js -o baseUrl=js name=main out=built.js paths.jquery=empty:</span></p><p><img src="http://pic002.cnblogs.com/images/2012/114013/2012060523484146.png" alt="" width="600"></p><p>注意红色圈住的参数（empty后有个冒号哦），表示paths.jquery不参与合并，压缩。这时生成的built.js也就不包含它了。</p><p> </p><p>把目录r5放到apache或其它web服务器上，访问index.html。</p><p> </p><p>网络请求如下</p><p><img src="http://pic002.cnblogs.com/images/2012/114013/2012060523533932.png" alt="" width="600"></p><p>built.js包含了main.js、event.js、cache.js，selector.js。jquery则是独立的一个请求，来自ajax.googleapis.com。</p><p> </p><p>再看看如何使用r.js来合并压缩css文件。在r5下新建一个css文件夹，里面有四个css文件：main.css、nav.css、form.css、grid.css。</p><p><img src="http://pic002.cnblogs.com/images/2012/114013/2012060611170838.png" alt=""></p><p>main.css是合并的主文件，或称配置文件。要合并的文件使用@import引入。如下</p><p> </p><p>main.css</p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px">@import url("nav.css");<br>@import url("grid.css");<br>@import url("form.css");<br></div><p> </p><p>另外三个是普通的css文件，里面定义的各种样式。这里不贴代码了。这里将使用命令行将这四个文件合并后生成到r5/css/built.css。</p><p><span style="background-color:#000000;color:#ffffff">node r.js -o cssIn=css/main.css out=css/built.css</span></p><p><img src="http://pic002.cnblogs.com/images/2012/114013/2012060611221059.png" alt=""></p><p>这时回到r5/css目录会发现多了一个built.css文件，该文件是另外四个css文件的合并项。</p><p> </p><p>还可以使用optimizeCss参数设置来配置是否压缩及压缩选项。optimizeCss的取值有standard/none/standard.keepLines/standard.keepComments/standard.keepComments.keepLines。</p><p><strong><strong>none  </strong></strong>不压缩，仅合并</p><p><strong>standard  </strong>标准压缩 去换行、空格、注释</p><p><strong>standard.keepLines</strong>  除标准压缩外，保留换行</p><p><strong>standard.keepComments</strong>  除标准压缩外，保留注释</p><p><strong>standard.keepComments.keepLines</strong>  除标准压缩外，保留换行和注释</p><p> </p><p>示例：</p><p><span style="background-color:#000000;color:#ffffff">node r.js -o cssIn=css/main.css out=css/built.css optimizeCss=standard</span></p><p>压缩后built.css整个为一行了。</p><p> </p><p>总结：</p><p>1，对于path配置的非本地的模块文件，使用r.js合并压缩时需要配置paths.xx=empty:。</p><p>2，cssIn和optimizeCss参数的使用来合并压缩css文件。</p><p> </p><p><a href="http://files.cnblogs.com/snandy/r5.zip">r5.zip</a></p><img src="http://www.cnblogs.com/snandy/aggbug/2537477.html?type=1" width="1" height="1" alt=""><p><a href="http://www.cnblogs.com/snandy/archive/2012/06/07/2537477.html">本文链接</a></p>