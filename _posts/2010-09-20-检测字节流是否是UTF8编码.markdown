---
layout: post
title:  "检测字节流是否是UTF8编码"
date:   2010-09-20 12:01:00
author: 葡萄城控件技术团队博客
categories: program
---

## 检测字节流是否是UTF8编码
### by 葡萄城控件技术团队博客
### at 2010-09-20 12:01:00
### original <http://www.cnblogs.com/powertoolsteam/archive/2010/09/20/1831638.html>

<p><a href="http://www.cnblogs.com/powertoolsteam/"><img src="http://pic.cnblogs.com/face/u139239.jpg" alt="" border="0"></a><br>作者: <a href="http://www.cnblogs.com/powertoolsteam/">葡萄城控件技术团队博客</a> 发表于 2010-09-20 12:01 <a href="http://www.cnblogs.com/powertoolsteam/archive/2010/09/20/1831638.html">原文链接</a> 阅读: 1632 评论: 6</p><p>几天前偶尔看到有人发帖子问“如何自动识别判断url中的中文参数是GB2312还是Utf-8编码” </p>
<p>也拜读了wcwtitxu使用巨牛的正则表达式检测UTF8编码的算法。 </p>
<p>使用无数或条件的正则表达式用起来却是性能不高。 </p>
<p>刚好曾经在项目中有类似的需求，这里把处理思路和整理后的源代码贴出来供大家参考 </p>
<p>先聊聊原理： </p>
<p>UTF8的编码规则如下表 </p>
<p><img height="482" width="735" src="http://hi.csdn.net/attachment/201009/19/0_12848914870qEE.gif" alt="UTF8 Encoding Rule"></p>
<p>看起来很复杂，总结起来如下： </p>
<p>ASCII码（U+0000 - U+007F），不编码 </p>
<p>其余编码规则为 </p>
<blockquote>
<p>•第一个Byte二进制以形式为n个1紧跟个0 (n &gt;= 2), 0后面的位数用来存储真正的字符编码，n的个数说明了这个多Byte字节组字节数（包括第一个Byte） <br>•结下来会有n个以10开头的Byte，后6个bit存储真正的字符编码。 <br>因此对整个编码byte流进行分析可以得出是否是UTF8编码的判断。 </p>
</blockquote>
<p>根据这个规则，我给出的C#代码如下： </p>
<pre>        /// &lt;summary&gt;
        ///   Determines whether the given &lt;paramref name=&quot;inputStream&quot;/&gt;is UTF8 encoding bytes.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;inputStream&quot;&gt;
        ///    The input stream.
        ///  &lt;/param&gt;
        /// &lt;returns&gt;
        ///   &lt;see langword=&quot;true&quot;/&gt; if given bystes stream is in UTF8 encoding; otherwise, &lt;see langword=&quot;false&quot;/&gt;.
        /// &lt;/returns&gt;
        /// &lt;remarks&gt;
        ///   All ASCII chars will regards not UTF8 encoding.
        /// &lt;/remarks&gt;
        public static bool IsTextUTF8(ref byte[] inputStream)
        {
            int encodingBytesCount = 0;
            bool allTextsAreASCIIChars = true;

            for (int i = 0; i &lt; inputStream.Length; i++)
            {
                byte current = inputStream[i];

                if ((current &amp; 0x80) == 0x80)
                {                    
                    allTextsAreASCIIChars = false;
                }
                // First byte
                if (encodingBytesCount == 0)
                {
                    if ((current &amp; 0x80) == 0)
                    {
                        // ASCII chars, from 0x00-0x7F
                        continue;
                    }

                    if ((current &amp; 0xC0) == 0xC0)
                    {
                        encodingBytesCount = 1;
                        current &lt;&lt;= 2;

                        // More than two bytes used to encoding a unicode char.
                        // Calculate the real length.
                        while ((current &amp; 0x80) == 0x80)
                        {
                            current &lt;&lt;= 1;
                            encodingBytesCount++;
                        }
                    }                    
                    else
                    {
                        // Invalid bits structure for UTF8 encoding rule.
                        return false;
                    }
                }                
                else
                {
                    // Following bytes, must start with 10.
                    if ((current &amp; 0xC0) == 0x80)
                    {                        
                        encodingBytesCount--;
                    }
                    else
                    {
                        // Invalid bits structure for UTF8 encoding rule.
                        return false;
                    }
                }
            }

            if (encodingBytesCount != 0)
            {
                // Invalid bits structure for UTF8 encoding rule.
                // Wrong following bytes count.
                return false;
            }

            // Although UTF8 supports encoding for ASCII chars, we regard as a input stream, whose contents are all ASCII as default encoding.
            return !allTextsAreASCIIChars;
        }</pre>
<p> </p>
<p> </p>
<p>再附上单元测试代码：</p>
<p> </p>
<pre>    /// &lt;summary&gt;
    ///This is a test class for EncodingHelperTest and is intended
    ///to contain all EncodingHelperTest Unit Tests
    ///&lt;/summary&gt;
    [TestClass()]
    public class EncodingHelperTest
    {
        /// &lt;summary&gt;
        ///  Normal test for this method.
        ///&lt;/summary&gt;
        [TestMethod()]
        public void IsTextUTF8Test()
        {
            for (int i = 0; i &lt; 1000; i++)
            {
                List&lt;Char&gt; chars = new List&lt;char&gt;();
                chars.Add(&#39;中&#39;);

                List&lt;UnicodeCategory&gt; temp = new List&lt;UnicodeCategory&gt;();
                Random rd = new Random((int)(DateTime.Now.Ticks &amp; 0x7FFFFFFF));

                for (int j = 0; j &lt; 255; j++)
                {
                    char ch = (char)rd.Next(0xFFFF);
                    UnicodeCategory uc = System.Globalization.CharUnicodeInfo.GetUnicodeCategory(ch);
                    if (uc == UnicodeCategory.Surrogate || // Single surrogate could not be encoding correctly.
                        uc == UnicodeCategory.PrivateUse || // Private use blocks should be excluded.
                        uc == UnicodeCategory.OtherNotAssigned
                        )
                    {
                        j--;
                    }
                    else
                    {
                        chars.Add(ch);
                        temp.Add(uc);
                    }
                }

                string str = new string(chars.ToArray());

                byte[] inputStream = Encoding.UTF8.GetBytes(str);
                bool expected = true; 
                bool actual;
                actual = EncodingHelper.IsTextUTF8(ref inputStream);
                Assert.AreEqual(expected, actual, string.Format(&quot;UTF8_Assert Fails at:{0}&quot;, str));

                inputStream = Encoding.GetEncoding(932).GetBytes(str);
                expected = false;

                actual = EncodingHelper.IsTextUTF8(ref inputStream);
                Assert.AreEqual(expected, actual, string.Format(&quot;ShiftJIS_Assert Fails at:{0}&quot;, str));
            }
        }

        /// &lt;summary&gt;
        ///   Check with All ASCII chars
        /// &lt;/summary&gt;
        [TestMethod]
        public void IsTextUTF8Test_AllASCII()
        {
            string str = &quot;ABCDEFGHKLHSJKLDFHJKLHAJKLSHJKLHAJKLSHDJKLAHSDJKLHAJKLSDHJKLASHDJKLHASJKLDHJKLASD&quot;;

            byte[] inputStream = Encoding.UTF8.GetBytes(str);
            bool expected = false;
            bool actual;
            actual = EncodingHelper.IsTextUTF8(ref inputStream);
            Assert.AreEqual(expected, actual, string.Format(&quot;UTF8_Assert Fails at:{0}&quot;, str));


        }
    }</pre>
<p> </p>
<p>另：</p>
<p>如果是判断一个文件是否使用了UTF8编码，不一定非用这种方法，因为<strong>通常</strong>以UTF8格式保存的文件最初两个字符是BOM头，标示该文件使用了UTF8编码。</p>
<p>参考：</p>
<p>维基百科：<a href="http://en.wikipedia.org/wiki/UTF-8">http://en.wikipedia.org/wiki/UTF-8</a></p><img src="http://www.cnblogs.com/powertoolsteam/aggbug/1831638.html?type=1" width="1" height="1" alt=""><p>评论: 6　<a href="http://www.cnblogs.com/powertoolsteam/archive/2010/09/20/1831638.html#pagedcomment">查看评论</a>　<a href="http://www.cnblogs.com/powertoolsteam/archive/2010/09/20/1831638.html#commentform">发表评论</a></p><p><a href="http://job.cnblogs.com/">程序员找工作，就在博客园</a></p><hr><p>最新新闻：<br>· <a href="http://news.cnblogs.com/n/74999/">Adobe修复Flash 10.1高危漏洞 最新版下载</a><span style="color:gray">(2010-09-21 08:54)</span><br>· <a href="http://news.cnblogs.com/n/74998/">苹果iPad可参加以旧换新 消费者至少能省400元</a><span style="color:gray">(2010-09-21 08:53)</span><br>· <a href="http://news.cnblogs.com/n/74997/">戴志康谈加入腾讯：比创业时心态更放松</a><span style="color:gray">(2010-09-21 08:50)</span><br>· <a href="http://news.cnblogs.com/n/74996/">千橡互动宣布将逐步合并旗下人人网和开心网</a><span style="color:gray">(2010-09-21 08:49)</span><br>· <a href="http://news.cnblogs.com/n/74995/">英国歌手Lily Allen状告苹果 要求找出黑她电脑的真凶</a><span style="color:gray">(2010-09-21 08:41)</span><br></p><p>编辑推荐：<a href="http://news.cnblogs.com/n/74950/">用脚本实现哄小孩睡觉</a><br></p><p>网站导航：<a href="http://www.cnblogs.com">博客园首页</a>  <a href="http://home.cnblogs.com/">个人主页</a>  <a href="http://news.cnblogs.com">新闻</a>  <a href="http://home.cnblogs.com/ing/">闪存</a>  <a href="http://home.cnblogs.com/group/">小组</a>  <a href="http://space.cnblogs.com/q/">博问</a>  <a href="http://space.cnblogs.com">社区</a>  <a href="http://kb.cnblogs.com">知识库</a></p>