---
layout: post
title:  "获取剪贴板数据"
date:   2011-11-07 23:31:57
author: 
categories: program
---

## 获取剪贴板数据
### by 
### at 2011-11-07 23:31:57
### original <http://yiminghe.iteye.com/blog/1240853>

<h1>兼容性：
</h1>
<p> </p>
<p>获取剪贴板数据这块各个浏览器间存在很大的兼容性问题：</p>
<p> </p>
<h2>
ie:
</h2>
<p> </p>
<p>通过监听 paster 或 beforepaste ，在全局变量 <a href="http://msdn.microsoft.com/en-us/library/ms535220%28v=vs.85%29.aspx">clipboardData </a>
中取得黏贴数据:</p>
<p> </p>
<pre name="code">onpaste=function(){

alert(clipboardData.getData("Text"););

}</pre>
<p> </p>
<p>但局限性在于只能取得文本数据而不能取得富文本html.</p>
<p> </p>
<p> </p>
<h2>
firefox:
</h2>
<p> </p>
<p>ff 提供了丰富的 <a href="https://developer.mozilla.org/en/Using_the_Clipboard">api </a>
接口，但需要用户<a href="http://www.mozilla.org/projects/security/components/signed-scripts.html">提升权限</a>
这一条就使得 ff 的 api形同虚设。</p>
<p> </p>
<p> </p>
<h2>
chrome:
</h2>
<p> </p>
<p>支持 w3 <a href="http://www.w3.org/TR/clipboard-apis/">clipboard api</a>
 (借鉴 ie，不过 clipboardData 和事件关联)，可以随意取得 html/text 格式的剪贴板内容，十分方便：</p>
<p> </p>
<p> </p>
<pre name="code">onpaste=function(e){
e.clipboardData.getData("text/html"); // html 格式
e.clipboardData.getData("text/plain");// 纯文本格式
}</pre>
<p> </p>
<p> </p>
<h1>
换个思路自己实现
</h1>
<p> </p>
<p>其实可以完全绕开浏览器的剪贴板相关 api，经过一些 trick，可以取得用户的粘贴信息，主要关注以下事件：</p>
<p> </p>
<p><a href="http://msdn.microsoft.com/en-us/library/ms536905(v=VS.85).aspx">beforepaste</a>
 : ie only. 在黏贴的数据放到页面前触发，返回 false 则允许右键菜单有黏贴选项。</p>
<p> </p>
<p>paste : </p>
<p> </p>
<p>   <a href="http://msdn.microsoft.com/en-us/library/ms536955%28v=vs.85%29.aspx">ie</a>
 : 黏贴的数据放到页面后触发。</p>
<p>   <a href="https://developer.mozilla.org/en/DOM/element.onpaste">firefox/chrome</a>
 : 黏贴的数据放到页面前触发。</p>
<p> </p>
<p> </p>
<p>主要实现思路为在将数据黏贴到 a 输入区域前，将焦点定位到隐藏的b输入区域，使得用户数据被黏贴在 b 区域，然后从 b 区域中取出处理后再填入 a 区域，并恢复焦点到 a 区域：</p>
<p> </p>
<p> </p>
<pre name="code">$("#a").on(ie?"beforepaste":"paste",function(e){		
		$("#b").text("");
		$("#b")[0].focus();
		setTimeout(function(){
			$("#a").text($("#b").text().replace(/[^\d]+/,""));
			$("#a")[0].focus();
		},0);
	});
});</pre>
 
<p>这样就可以间接得取得剪贴板数据进行处理。</p>
<p> </p>
<p>不过很有必要进行一些复杂的其它处理 ( <strong>待续 </strong>
)：对 a 进行选择区域位置的保存与恢复以及替换被黏贴的部分内容.</p>
<p> </p>
<p><a href="http://lite-ext.googlecode.com/svn/trunk/lite-ext/playground/event_paste/demo.html?t=7">event paste demo @ google code</a>
</p>
<p> </p>
<h1>
refer
</h1>
<p> </p>
<p><a href="http://stackoverflow.com/questions/2176861/javascript-get-clipboard-data-on-paste-event-cross-browser">http://stackoverflow.com/questions/2176861/javascript-get-clipboard-data-on-paste-event-cross-browser</a>
<br><br><a href="http://msdn.microsoft.com/en-us/library/ms536905%28v=VS.85%29.aspx">http://msdn.microsoft.com/en-us/library/ms536905%28v=VS.85%29.aspx</a>
<br><br><a href="https://developer.mozilla.org/en/DOM/element.onpaste">https://developer.mozilla.org/en/DOM/element.onpaste</a>
<br><br><a href="http://help.dottoro.com/ljxqbxkf.php">http://help.dottoro.com/ljxqbxkf.php</a>
<br><br><a href="http://almaer.com/blog/supporting-the-system-clipboard-in-your-web-applications-what-a-pain">http://almaer.com/blog/supporting-the-system-clipboard-in-your-web-applications-what-a-pain</a>
</p>
<p> </p>
<p> </p>
              
              <br><br>
              <span style="color:red">
                <a href="http://yiminghe.iteye.com/blog/1240853#comments" style="color:red">已有 <strong>0</strong> 人发表留言，猛击-&gt;&gt;<strong>这里</strong>&lt;&lt;-参与讨论</a>
              </span>
              <br><br><br>
<span style="color:#e28822">ITeye推荐</span>
<br>
<ul><li><a href="http://yiminghe.iteye.com/clicks/433"><span style="color:red;font-weight:bold">—软件人才免语言低担保 赴美带薪读研！— </span></a></li></ul>
<br><br><br>