---
layout: post
title:  "编程语言进入“拼爹”时代"
date:   2012-10-08 13:30:40
author: bigwhite
categories: program
---

## 编程语言进入“拼爹”时代
### by bigwhite
### at 2012-10-08 13:30:40
### original <http://tonybai.com/2012/10/08/the-new-age-of-programming-language/?utm_source=rss&utm_medium=rss&utm_campaign=the-new-age-of-programming-language>

<p>近期看到一则新闻，说是<a href="http://www.microsoft.com">Microsoft</a>推出了一门开源的编程语言叫<a href="http://en.wikipedia.org/wiki/TypeScript">TypeScript</a>，该Project的主要负责人是大名鼎鼎的<a href="http://en.wikipedia.org/wiki/Anders_Hejlsberg">Anders Hejlsberg</a>，就是那个<a href="http://en.wikipedia.org/wiki/Turbo_Pascal">Turbo Pascal </a>、<a href="http://en.wikipedia.org/wiki/Embarcadero_Delphi">Delphi</a>以及<a href="http://en.wikipedia.org/wiki/C_Sharp_(programming_language)">C#</a>之父。结合近几年来出现的颇受关注的其他几门编程语言，如<a href="http://golang.org">Go</a>、<a href="http://www.rust-lang.org">Rust</a>、<a href="http://en.wikipedia.org/wiki/Dart_(programming_language)">Dart</a>等，让我感觉到编程语言似乎进入了&quot;拼爹&quot;时代。</p>
<p>我们来列举一下这几门新兴语言的“老爹”(设计者)：</p>
<p>* Go语言 – Robert Griesemer、<a href="http://en.wikipedia.org/wiki/Rob_Pike">Rob Pike</a>和<a href="http://en.wikipedia.org/wiki/Ken_Thompson">Ken Thompson</a>。<br>
	这里最著名也最NB的当属Ken Thompson，Unix之父，并与<a href="http://en.wikipedia.org/wiki/Dennis_Ritchie">Dennis Ritchie</a>一起创造了最伟大的工业编程语言<a href="http://en.wikipedia.org/wiki/C_(programming_language)">C</a>，<a href="http://en.wikipedia.org/wiki/Turing_Award">图灵奖</a>得主。Rob Pike也是<a href="http://en.wikipedia.org/wiki/Bell_Labs">Bell Labs</a>元老，Unix和Plan 9计划的参与者，Limbo语言的设计者之一。至于Robert Griesemer名气似乎小一些，我也不甚熟悉。不过有了前两位，想必Golang就会有足够的号召力了。</p>
<p>* Rust语言 – 来自著名的Mozilla Lab，其主要设计者包括Brendan Eich，Dave Herman以及Graydon Hoare。其中Brendan Eich是JavaScript语言之父。</p>
<p>* Dart语言 – 这门语言的最初两个设计者Lars Bak和Kasper Lund似乎并不著名，但这门语言背后有一个更大的后台，那就是在互联网搜索时代叱诧风云的Google公司。凭借着Google的号召力，围绕在这门语 言周围的Fans也应该为数不少。再考虑这门语言旨在替代JavaScript成为新<a href="http://en.wikipedia.org/wiki/Html5">Html5</a>标准下主力Web开发语言的目标，Dart受到的关注一定 不少。</p>
<p>这里再顺便回顾一下编程语言发展的几个历史时期(个人的一点拙见)。</p>
<p>* 结构化时代<br>
	20世纪六七十年代，以C、Fortran、Pascal、Basic为代表的结构化程序设计语言的诞生，标志着编程语言进入了结构化时代。人们逐渐脱离 生产效率低下的汇编，而转移到中级/高级语言行列。最终C以其Unix平台语言的身份胜出，并以其简洁高效的生成代码在二十世纪末期在嵌入式领域独占鳌 头。</p>
<p>* OO时代<br>
	随着人们的关注点逐渐向问题域转移，人们迫切需要一门能对现实问题进行更好抽象的语言。面向对象语言逐渐进入人们的视野。代表语言包括C++、Ada、 Delphi、Java以及C#等。C++和Delphi因其卓越的性能以及不熟的IDE支持，在桌面程序设计领域(包括PC游戏领域)成为主角。 Java则在企业应用兴起后逐渐发展壮大，最终成为OO时代的No.1。</p>
<p>* Web时代<br>
	随着全球互联网时代的到来，诸多Web语言走到了前台，代表语言包括PHP、JavaScript、ASP等，另外一些轻巧且生产高效的脚本语言也开始被 大家所青睐，它们既能轻松完成系统管理的任务又支持Web开发，这其中的代表语言包括：Perl、Python、Ruby、Lua等。</p>
<p>* 新时代<br>
	这里暂且叫作新时代，这个时代有几个特点：<br>
	1) 传统语言不断翻新，融入新特性<br>
	C和C++于今年发布了C11标准；Java也给出了JDK8规范的发布时间表。在新标准中，这些传统语言也加入了一些适宜这个时代开发的新特性，比如函数范式以及对多核并行程序的支持。</p>
<p>2) 终端开发语言迅速崛起<br>
	随着iPhone和Android的迅速发展，终端开发语言逐渐壮大，最典型的代表则是<a href="http://en.wikipedia.org/wiki/Objective-C">Objective-C</a>，依靠苹果公司这棵大树，与C++同时期的Objective-C仿佛坐着火箭一般迅速串升到<a href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html">编程语言排行榜</a>前3甲的位置。</p>
<p>3) 函数式语言的回归<br>
	以Common Lisp、Haskell、Erlang等为代表的函数式程序设计语言重装归来，誓与传统命令式语言一绝高下。函数式范型语言的回归意义似乎不在于占领更 大的市场，而是在于其对后续新兴编程语言的设计决策的影响，甚至像C++这样的老牌OO语言在新规范中也加入了函数式范型的支持。</p>
<p>4) &quot;拼爹&quot;的新兴语言<br>
	就如上面所讲的，一些传统语言的设计大师汲取之前语言的设计经验和教训后，二次出手，设计出了以Go、Rust、TypeScript等为代表的新兴语 言，并且他们的号召力对这些新兴语言有着很大的影响。这些语言站在巨人的肩膀上，获得了重新的设计，使得语言能满足未来市场对应用程序以及硬件设备的要 求。这些语言将会是未来10年乃至20年间编程领域的主力。</p>
<p>目前的确是编程语言的一个新时代，更是一个<strong>百花齐放，百家争鸣</strong>的时代。作为这个时代的程序员是幸运的，因为有这么多优秀语言可供学习和选择；同时也是&quot;不幸的&quot;，有这么多语言要去学习(当然也可以不学^_^)。</p>
<p style="text-align:left">© 2012, <a href="http://tonybai.com">bigwhite</a>. 版权所有. </p><img src="http://www1.feedsky.com/t1/693249377/bigwhite/feedsky/s.gif?r=http://tonybai.com/2012/10/08/the-new-age-of-programming-language/?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=the-new-age-of-programming-language" border="0" height="0" width="0">