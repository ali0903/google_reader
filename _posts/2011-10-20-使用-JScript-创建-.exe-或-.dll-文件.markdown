---
layout: post
title:  "使用 JScript 创建 .exe 或 .dll 文件"
date:   2011-10-20 12:27:56
author: 
categories: program
---

## 使用 JScript 创建 .exe 或 .dll 文件
### by 
### at 2011-10-20 12:27:56
### original <http://item.feedsky.com/~feedsky/planabc/~7049616/567271388/5157647/1/item.html>

<p><strong>什么是 JScript？</strong></p>
<p>JScript 是由微软开发的活动脚本语言，基于 ECMAScript 规范实现。Internet Explorer 中的 JavaScript，实际上是指 JScript。JScript 已被 Windows Script Host（WSH）支持（WSH 中的 JavaScript shell scripting：<code>C:\&gt; cscript jslint.js</code>）。JScript 最新的版本（JScript.NET）基于 ECMAScript 4.0 ，并且可以在 .Net 环境下编译。</p>
<p>.NET Framwork 中包含有 JScript 编译器 ：<strong>JScriptCompiler</strong> （C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\jsc.exe），其可以将 JScript 文件编译为一个 .exe 或者 .dll 文件。</p>
<p>为了方便使用，我们可以将 JScriptCompiler 的路径加入到环境变量（环境变量 –&gt; 系统变量 –&gt; Path）中。在 CMD 程序运行窗口中直接调用命令 “jsc”，就可以看到编译器相关的帮助选项。</p>
<blockquote style="font-family:Consolas;font-size:12px"><p>jsc [选项]  [[选项] …]</p>
<p>                         JScript 编译器选项</p>
<p>                           – 输出文件 -<br>
  /out:&lt;file&gt;              指定二进制输出文件的名称<br>
  /t[arget]:exe            创建控制台应用程序(默认)<br>
  /t[arget]:winexe         创建 Windows 应用程序<br>
  /t[arget]:library        创建库程序集<br>
  /platform:&lt;platform&gt;     限制此代码可以在其上运行的平台；必须是 x86、Itanium、x64 或 anycpu。默认为 anycpu</p>
<p>                           – 输入文件 -<br>
  /autoref[+|-]            基于导入的命名空间和完全限定名称自动引用程序集(默认情<br>
况下为 on)<br>
  /lib:&lt;path&gt;              指定要在其中搜索引用的附加目录<br>
  /r[eference]:&lt;file list&gt; 从指定的程序集文件引用元数据 &lt;file list&gt;: &lt;assembly name&gt;[;&lt;assembly name&gt;...]</p>
<p>                           – 资源 -<br>
  /win32res:&lt;file&gt;        指定 Win32 资源文件(.res)<br>
  /res[ource]:&lt;info&gt;       嵌入指定的资源 &lt;info&gt;: &lt;filename&gt;[,&lt;name&gt;[,public|private]]<br>
  /linkres[ource]:&lt;info&gt;   将指定的资源链接到此程序集 &lt;info&gt;: &lt;filename&gt;[,&lt;name&gt;[,public|private]]</p>
<p>                           – 代码生成 -<br>
  /debug[+|-]              发出调试信息<br>
  /fast[+|-]               禁用语言功能以使代码更好地生成<br>
  /warnaserror[+|-]        将警告视为错误<br>
  /w[arn]:&lt;level&gt;          设置警告等级(0-4)</p>
<p>                           – 杂项 -<br>
  @&lt;filename&gt;              有关更多选项，请阅读响应文件<br>
  /?                       显示帮助<br>
  /help                    显示帮助<br>
  /d[efine]:&lt;symbols&gt;      定义条件编译符号<br>
  /nologo                  不显示编译器版权标志<br>
  /print[+|-]              提供 print() 函数</p>
<p>                           – 高级 -<br>
  /codepage:&lt;id&gt;           使用指定的代码页 ID 打开源文件<br>
  /lcid:&lt;id&gt;               将指定的 LCID 用于消息和默认代码页<br>
  /nostdlib[+|-]           不导入标准库(mscorlib.dll)并将 autoref 默认值更改为 off<br>
  /utf8output[+|-]         以 UTF-8 字符编码形式发出编译器输出<br>
  /versionsafe[+|-]        为没有标记为“override”或“hide”的成员指定默认值</p></blockquote>
<p><strong>创建 .exe 文件</strong></p>
<p>先创建 JS 文件（C:\test\helloWorld.js），内容如下：</p>
<pre><code>var date = new Date();
print('Hello World! \nToday is ' + date );</code></pre>
<p>接着我们进行编译：</p>
<pre><code>C:\test&gt;jsc helloWorld.js

Microsoft (R) JScript Compiler version 8.00.50727
for Microsoft (R) .NET Framework version 2.0.50727
Copyright (C) Microsoft Corporation 1996-2005。保留所有权利。</code></pre>
<p>你会惊讶的发现，C:\test 目录下多了个 helloWorld.exe 文件，非常简单吧，呵呵</p>
<p>最后我们可以直接执行 helloWorld.exe 文件：</p>
<pre><code>C:\test&gt;helloWorld

Hello World!
Today is Fri Jun 3 23:13:20 UTC+8 2011</code></pre>
<p>大功告成！！</p>
<p><strong>创建 .dll 文件</strong></p>
<p>.dll 文件的创建也同样非常简单：</p>
<pre><code>package LibHW {
    class HelloWorld {
        function run() {
            var date = new Date();
            return 'Hello World! \nToday is ' + date;
        }
    }
}</code></pre>
<p>编译语句：</p>
<pre><code>C:\test&gt;jsc /t:library LibHW.js</code></pre>
<p>对于生成的 LibHW.dll 文件，我们可以通过创建新的 .exe 文件（consumer.js –&gt; consumer.exe）以导入模块的方式调用（类似于 Python）。</p>
<p>先创建 consumer.js 文件：</p>
<pre><code>import LibHW;
var hw = new LibHW.HelloWorld();
print(hw.run());</code></pre>
<p>然后编译 consumer.js 文件，执行 consumer.exe：</p>
<pre><code>C:\test&gt;jsc consumer.js

Microsoft (R) JScript Compiler version 8.00.50727
for Microsoft (R) .NET Framework version 2.0.50727
Copyright (C) Microsoft Corporation 1996-2005。保留所有权利。

C:\test&gt;consumer

Hello World!
Today is Sat Jun 4 00:42:35 UTC+8 2011</code></pre>
<p>当然你还可以创建 windows 的应用，上例中的 consumer.js 文件修改如下：</p>
<pre><code>import System.Windows.Forms; // this has a MessageBox class
import LibHW;

var hw = new LibHW.HelloWorld();
MessageBox.Show(
    hw.run(),
    "Dude!",
    MessageBoxButtons.OK,
    MessageBoxIcon.Exclamation
);</code></pre>
<p>编译语句：</p>
<pre><code>C:\test&gt;jsc /t:winexe consumer.js</code></pre>
<p>双击新生成的 consumer.exe 文件，哈哈，是不是很有成就感！</p>
<p>从上面的例子可以看到 JScript 的潜力无限，没有做不到，只有想不到。</p>
<p>扩展阅读：</p>
<ul>
<li><a href="http://www.phpied.com/make-your-javascript-a-windows-exe/" title="Make your javascript a Windows .exe">《Make your javascript a Windows .exe》</a></li>
<li><a href="http://www.phpied.com/javascript-shell-scripting/" title="JavaScript shell scripting">《JavaScript shell scripting》</a></li>
</ul>
<img src="http://www.planabc.net/?ak_action=api_record_view&amp;id=653&amp;type=feed" alt=""><img src="http://www1.feedsky.com/t1/567271388/planabc/feedsky/s.gif?r=http://item.feedsky.com/~feedsky/planabc/~7049616/567271388/5157647/1/item.html" border="0" height="0" width="0">