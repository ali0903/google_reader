---
layout: post
title:  "JavaScript:实例讲解使用ES6中默认参数和剩余参数时的注意事项"
date:   2012-12-18 15:06:00
author: 紫云飞
categories: program
---

## JavaScript:实例讲解使用ES6中默认参数和剩余参数时的注意事项
### by 紫云飞
### at 2012-12-18 15:06:00
### original <http://www.cnblogs.com/ziyunfei/archive/2012/12/18/2823243.html>

<p>1.如果一个参数有了默认参数值,则其他所有类型的参数(普通参数,默认参数,剩余参数)都不能再有和它有相同的参数名:</p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre><span style="color:#0000ff">function</span> foo(x, x = 1<span style="color:#000000">) {}</span><span style="color:#008000">//</span><span style="color:#008000">SyntaxError: duplicate argument names not allowed in this context</span></pre></div><p>2.普通参数不能放在默认参数的右边:</p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre><span style="color:#0000ff">function</span> foo(x = 1<span style="color:#000000">, y) {}</span><span style="color:#008000">//</span><span style="color:#008000">SyntaxError: parameter(s) with default followed by parameter without default</span></pre></div><p>3.剩余参数必须在参数列表的最右边,它的右边不能再有任何类型的参数(也就是只能有一个剩余参数):</p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre><span style="color:#0000ff">function</span><span style="color:#000000"> foo(...x,y){}</span><span style="color:#008000">//</span><span style="color:#008000">SyntaxError: parameter after rest parameter</span></pre></div><p>4.剩余参数不能有默认参数值:</p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre><span style="color:#0000ff">function</span> foo(x, ...y = 1<span style="color:#000000">) {}</span><span style="color:#008000">//</span><span style="color:#008000">SyntaxError: rest parameter may not have a default</span></pre></div><p>5.默认参数值表达式中不能有<a href="http://wiki.ecmascript.org/doku.php?id=harmony:generators">yield表达式:</a></p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre><span style="color:#0000ff">function</span> foo(x = yield 1<span style="color:#000000">) {}</span><span style="color:#008000">//</span><span style="color:#008000">SyntaxError: yield in default expression</span></pre></div><p>6.在使用了剩余参数的函数中不能使用arguments对象:</p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre><span style="color:#0000ff">function</span><span style="color:#000000"> foo(...x) {arguments}  <br></span><span style="color:#008000">//解析时错误</span><span style="color:#000000"><br></span><span style="color:#008000">//</span><span style="color:#008000">SyntaxError: 'arguments' object may not be used in conjunction with a rest parameter</span></pre></div><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre><span style="color:#0000ff">(function</span><span style="color:#000000"> foo(...x) {eval("arguments")})()  <br></span><span style="color:#008000">//执行时错误</span><span style="color:#000000"><br></span><span style="color:#008000">//</span><span style="color:#008000">SyntaxError: 'arguments' object may not be used in conjunction with a rest parameter</span></pre></div><p>7.如果不在严格模式中,直接把arguments重定义成剩余参数如何?看起来不错,但还是换个名字吧:</p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre>(<span style="color:#0000ff">function</span> foo(...arguments) {<span style="color:#0000ff">return</span> arguments})(1,2,3<span style="color:#000000">)</span><span style="color:#008000">//</span><span style="color:#008000">[1,2,3]</span></pre></div><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre>(<span style="color:#0000ff">function</span> foo(...rest) {"use strict";<span style="color:#0000ff">return</span> rest})(1,2,3<span style="color:#000000">)<br></span><span style="color:#008000">//</span><span style="color:#008000">[1,2,3]</span></pre></div><p>8. 函数声明提升(hosting),x已经有值,所以,虽然x没有对应实参,但默认参数x的赋值操作x=1也不会执行.</p><div style="background-color:#f5f5f5;border:1px solid #cccccc;padding:10px"><pre>(<span style="color:#0000ff">function</span> foo(x = 1<span style="color:#000000">) {    </span><span style="color:#0000ff">function</span><span style="color:#000000"> x() {}    </span><span style="color:#0000ff">return</span><span style="color:#000000"> x;})()</span><span style="color:#008000">//</span><span style="color:#008000">function x() {}</span></pre></div><p>上面代码示例的运行环境为Firefox 20.</p><img src="http://www.cnblogs.com/ziyunfei/aggbug/2823243.html?type=1" width="1" height="1" alt=""><p><a href="http://www.cnblogs.com/ziyunfei/archive/2012/12/18/2823243.html">本文链接</a></p>