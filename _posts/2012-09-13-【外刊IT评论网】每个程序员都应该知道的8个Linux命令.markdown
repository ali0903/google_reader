---
layout: post
title:  "【外刊IT评论网】每个程序员都应该知道的8个Linux命令"
date:   2012-09-13 00:04:03
author: Aqee
categories: program
---

## 【外刊IT评论网】每个程序员都应该知道的8个Linux命令
### by Aqee
### at 2012-09-13 00:04:03
### original <http://aqee.feedsportal.com/c/34519/f/631690/s/2359b1d2/l/0L0Saqee0Bnet0C80Elinux0Ecommands0Eevery0Edeveloper0Eshould0Eknow0C/story01.htm>

<br><p>每个程序员，在职业生涯的某个时刻，总会发现自己需要知道一些Linux方面的知识。我并不是说你应该成为一个Linux专家，我的意思是，当面对linux命令行任务时，你应该能很熟练的完成。事实上，学会了下面8个命令，我基本上能完成任何需要完成的任务。</p> <p>注意：下面的每个命令都有十分丰富的文档说明。这篇文章并不是来详尽的展示每个命令的各种功用的。我在这里要讲的是这几个最常用的命令的最常见用法。如果你对linux命令并不是很了解，你想找一些这方面的资料学习，那这篇文章将会给你一个基本的指导。</p> <p>让我们从处理一些数据开始。假设我们有两个文件，分别记录的订单清单和订单处理结果。</p> <pre>order.out.log 8:22:19 111, 1, Patterns of Enterprise Architecture, Kindle edition, 39.99 8:23:45 112, 1, Joy of Clojure, Hardcover, 29.99 8:24:19 113, -1, Patterns of Enterprise Architecture, Kindle edition, 39.99 order.in.log 8:22:20 111, Order Complete 8:23:50 112, Order sent to fulfillment 8:24:20 113, Refund sent to processing</pre> <h3>cat</h3> <blockquote><p><a href="http://linux.about.com/od/commands/l/blcmdl1_cat.htm">cat</a> – 连接文件，并输出结果</p></blockquote> <p>cat 命令非常的简单，你从下面的例子可以看到。</p> <pre>jfields$ cat order.out.log 8:22:19 111, 1, Patterns of Enterprise Architecture, Kindle edition, 39.99 8:23:45 112, 1, Joy of Clojure, Hardcover, 29.99 8:24:19 113, -1, Patterns of Enterprise Architecture, Kindle edition, 39.99</pre> <p>就像它的说明描述的，你可以用它来连接多个文件。</p> <pre>jfields$ cat order.* 8:22:20 111, Order Complete 8:23:50 112, Order sent to fulfillment 8:24:20 113, Refund sent to processing 8:22:19 111, 1, Patterns of Enterprise Architecture, Kindle edition, 39.99 8:23:45 112, 1, Joy of Clojure, Hardcover, 29.99 8:24:19 113, -1, Patterns of Enterprise Architecture, Kindle edition, 39.99</pre> <p>如果你想看这些log文件的内容，你可以把它们连接起来并输出到标准输出上，就是上面的例子展示的。这很有用，但输出的内容可以更有逻辑些。</p> <h3>sort</h3> <blockquote><p><a href="http://linux.about.com/library/cmd/blcmdl1_sort.htm">sort</a> – 文件里的文字按行排序</p></blockquote> <p>此时sort命令显然是你最佳的选择。</p> <pre>jfields$ cat order.* | sort 8:22:19 111, 1, Patterns of Enterprise Architecture, Kindle edition, 39.99 8:22:20 111, Order Complete 8:23:45 112, 1, Joy of Clojure, Hardcover, 29.99 8:23:50 112, Order sent to fulfillment 8:24:19 113, -1, Patterns of Enterprise Architecture, Kindle edition, 39.99 8:24:20 113, Refund sent to processing</pre> <p>就像上面例子显示的，文件里的数据已经经过排序。对于一些小文件，你可以读取整个文件来处理它们，然而，真正的log文件通常有大量的内容，你不能不考虑这个情况。此时你应该考虑过滤出某些内容，把cat、sort后的内容通过<a href="http://en.wikipedia.org/wiki/Pipeline_%28Unix%29">管道</a>传递给过滤工具。</p> <h3>grep</h3> <blockquote><p><a href="http://linux.about.com/od/commands/l/blcmdl1_grep.htm">grep</a>, egrep, fgrep – 打印出匹配条件的文字行</p></blockquote> <p>假设我们只对Patterns of Enterprise Architecture这本书的订单感兴趣。使用grep，我们能限制只输出含有Patterns字符的订单。</p> <pre>jfields$ cat order.* | sort | grep Patterns 8:22:19 111, 1, Patterns of Enterprise Architecture, Kindle edition, 39.99 8:24:19 113, -1, Patterns of Enterprise Architecture, Kindle edition, 39.99</pre> <p>假设退款订单113出了一些问题，你希望查看所有相关订单——你又需要使用grep了。</p> <pre>jfields$ cat order.* | sort | grep ":\d\d 113, " 8:24:19 113, -1, Patterns of Enterprise Architecture, Kindle edition, 39.99 8:24:20 113, Refund sent to processing</pre> <p>你会发现在grep上的匹配模式除了“113”外还有一些其它的东西。这是因为113还可以匹配上书目或价格，加上额外的字符后，我们可以精确的搜索到我们想要的东西。</p> <p>现在我们已经知道了退货的详细信息，我们还想知道日销售和退款总额。但我们只关心Patterns of Enterprise Architecture这本书的信息，而且只关心数量和价格。我现在要做到是切除我们不关心的任何信息。</p> <h3>cut</h3> <blockquote><p><a href="http://linux.about.com/od/commands/l/blcmdl1_cut.htm">cut</a> – 删除文件中字符行上的某些区域</p></blockquote> <p>又要使用grep，我们用grep过滤出我们想要的行。有了我们想要的行信息，我们就可以把它们切成小段，删除不需要的部分数据。</p> <pre>jfields$ cat order.* | sort | grep Patterns 8:22:19 111, 1, Patterns of Enterprise Architecture, Kindle edition, 39.99 8:24:19 113, -1, Patterns of Enterprise Architecture, Kindle edition, 39.99 jfields$ cat order.* | sort | grep Patterns | cut -d"," -f2,5 1, 39.99 -1, 39.99</pre> <p>现在，我们把数据缩减为我们计算想要的形式，把这些数据粘贴到Excel里立刻就能得到结果了。</p> <p>cut是用来消减信息、简化任务的，但对于输出内容，我们通常会有更复杂的形式。假设我们还需要知道订单的ID，这样可以用来关联相关的其他信息。我们用cut可以获得ID信息，但我们希望把ID放到行的最后，用单引号包上。</p> <h3>sed</h3> <blockquote><p><a href="http://linux.about.com/od/commands/l/blcmdl1_sed.htm">sed</a> – 一个流编辑器。它是用来在输入流上执行基本的文本变换。</p></blockquote> <p>下面的例子展示了如何用sed命令变换我们的文件行，之后我们在再用cut移除无用的信息。</p> <pre>jfields$ cat order.* | sort | grep Patterns \ &gt;| sed s/&quot;[0-9\:]* \([0-9]*\)\, \(.*\)&quot;/&quot;\2, &#39;\1&#39;&quot;/ 1, Patterns of Enterprise Architecture, Kindle edition, 39.99, &#39;111&#39; -1, Patterns of Enterprise Architecture, Kindle edition, 39.99, &#39;113&#39; lmp-jfields01:~ jfields$ cat order.* | sort | grep Patterns \ &gt;| sed s/&quot;[0-9\:]* \([0-9]*\)\, \(.*\)&quot;/&quot;\2, &#39;\1&#39;&quot;/ | cut -d&quot;,&quot; -f1,4,5 1, 39.99, &#39;111&#39; -1, 39.99, &#39;113&#39;</pre> <p>我们对例子中使用的正则表达式多说几句，不过也没有什么复杂的。正则表达式做了下面几种事情</p> <ul> <li>删除时间戳</li> <li>捕捉订单号</li> <li>删除订单号后的逗号和空格</li> <li>捕捉余下的行信息</li> </ul> <p>里面的引号和反斜杠有点乱，但使用命令行时必须要用到这些。</p> <p>一旦捕捉到了我们想要的数据，我们可以使用 \1 &amp; \2 来存储它们，并把它们输出成我们想要的格式。我们还在其中加入了要求的单引号，为了保持格式统一，我们还加入了逗号。最后，用cut命令把不必要的数据删除。</p> <p>现在我们有麻烦了。我们上面已经演示了如何把log文件消减成更简洁的订单形式，但我们的财务部门需要知道订单里一共有哪些书。</p> <h3>uniq</h3> <blockquote><p><a href="http://linux.about.com/library/cmd/blcmdl_uniq.htm">uniq</a> – 删除重复的行</p></blockquote> <p>下面的例子展示了如何过滤出跟书相关的交易，删除不需要的信息，获得一个不重复的信息。</p> <pre>jfields$ cat order.out.log | grep "\(Kindle\|Hardcover\)" | cut -d"," -f3 | sort | uniq -c 1 Joy of Clojure 2 Patterns of Enterprise Architecture</pre> <p>看起来这是一个很简单的任务。</p> <p>这都是很好用的命令，但前提是你要能找到你想要的文件。有时候你会发现一些文件藏在很深的文件夹里，你根本不知道它们在哪。但如果你是知道你要寻找的文件的名字的话，这对你就不是个问题了。</p> <h3>find</h3> <blockquote><p><a href="http://linux.about.com/od/commands/l/blcmdl1_find.htm">find</a> – 在文件目录中搜索文件</p></blockquote> <p>在上面的例子中我们处理了order.in.log和order.out.log这两个文件。这两个文件放在我的home目录里的。下面了例子将向大家展示如何在一个很深的目录结构里找到这样的文件。</p> <pre>jfields$ find /Users -name "order*" Users/jfields/order.in.log Users/jfields/order.out.log</pre> <p>find命令有很多其它的参数，但99%的时间里我只需要这一个就够了。</p> <p>简单的一行，你就能找到你想要的文件，然后你可以用cat查看它，用cut修剪它。但文件很小时，你用管道把它们输出到屏幕上是可以的，但当文件大到超出屏幕时，你也许应该用管道把它们输出给less命令。</p> <h3>less</h3> <blockquote><p><a href="http://linux.about.com/library/cmd/blcmdl1_less.htm">less</a> – 在文件里向前或向后移动</p></blockquote> <p>让我们再回到简单的 cat | sort 例子中来，下面的命令就是将经过合并、排序后的内容输出到less命令里。在 less 命令，使用“/”来执行向前搜索，使用“？”命令执行向后搜索。搜索条件是一个正则表达式。</p> <pre>jfields$ cat order* | sort | less</pre> <p>如果你在 less 命令里使用 /113.*，所有113订单的信息都会高亮。你也可以试试?.*112，所有跟订单112相关的时间戳都会高亮。最后你可以用 ‘q’ 来退出less命令。</p> <p>linux里有很丰富的各种命令，有些是很难用的。然而，学会了前面说的这8个命令，你已经能处理大量的log分析任务了，完全不需要用脚本语言写程序来处理它们。</p> <hr>本文来自<a href="http://www.aqee.net">外刊IT评论网</a>(<a href="http://www.aqee.net">www.aqee.net</a>)，原始地址：<a href="http://www.aqee.net/8-linux-commands-every-developer-should-know/" rel="bookmark">每个程序员都应该知道的8个Linux命令</a><br><img width="1" height="1" src="http://aqee.feedsportal.com/c/34519/f/631690/s/2359b1d2/mf.gif" border="0"><div><table border="0"><tr><td valign="middle"><a href="http://share.feedsportal.com/viral/sendEmail.cfm?lang=en&amp;title=%E3%80%90%E5%A4%96%E5%88%8AIT%E8%AF%84%E8%AE%BA%E7%BD%91%E3%80%91%E6%AF%8F%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E9%83%BD%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%848%E4%B8%AALinux%E5%91%BD%E4%BB%A4&amp;link=http%3A%2F%2Fwww.aqee.net%2F8-linux-commands-every-developer-should-know%2F"><img src="http://res3.feedsportal.com/images/emailthis2.gif" border="0"></a></td><td valign="middle"><a href="http://res.feedsportal.com/viral/bookmark.cfm?title=%E3%80%90%E5%A4%96%E5%88%8AIT%E8%AF%84%E8%AE%BA%E7%BD%91%E3%80%91%E6%AF%8F%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E9%83%BD%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%848%E4%B8%AALinux%E5%91%BD%E4%BB%A4&amp;link=http%3A%2F%2Fwww.aqee.net%2F8-linux-commands-every-developer-should-know%2F"><img src="http://res3.feedsportal.com/images/bookmark.gif" border="0"></a></td></tr></table></div><br><br><a href="http://da.feedsportal.com/r/144540341867/u/0/f/631690/c/34519/s/2359b1d2/a2.htm"><img src="http://da.feedsportal.com/r/144540341867/u/0/f/631690/c/34519/s/2359b1d2/a2.img" border="0"></a><img width="1" height="1" src="http://pi.feedsportal.com/r/144540341867/u/0/f/631690/c/34519/s/2359b1d2/a2t.img" border="0"><img src="http://www1.feedsky.com/t1/678390186/aqee-net/feedsky/s.gif?r=http://aqee.feedsportal.com/c/34519/f/631690/s/2359b1d2/l/0L0Saqee0Bnet0C80Elinux0Ecommands0Eevery0Edeveloper0Eshould0Eknow0C/story01.htm" border="0" height="0" width="0">