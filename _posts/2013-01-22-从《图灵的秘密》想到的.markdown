---
layout: post
title:  "从《图灵的秘密》想到的"
date:   2013-01-22 22:05:51
author: Yurii
categories: program
---

## 从《图灵的秘密》想到的
### by Yurii
### at 2013-01-22 22:05:51
### original <http://www.luanxiang.org/blog/archives/1396.html>

<p>托图灵诞生100年的福，去年出版了许多关于图灵的书籍。《图灵的秘密：他的生平、思想及论文解读》是其中的一本，前几周看完了，收获不小。说起来也惭愧，虽然自己学的是计算机专业，也知道图灵这个人，却不清楚他究竟做过什么，印象深一点的只有关于人工智能的“图灵检验”。看过《图灵的秘密》才弄清楚，图灵在计算机发展史上究竟作出了什么贡献，比如可计算性判定，比如通用图灵机，配合书中对他的论文的解读，又了解了他所处的时代和环境，以及他局限和所犯的错误。不过我最高兴的，还是通过阅读填补了自己知识结构中的若干鸿沟：原始的计算机都是专用于“计算”的，后来如何转变为能做任何事情的机器？大千世界的众多信息是怎样一步步进入计算机世界里，被表现和构建出来的？这些问题之前一直困扰着我，也找不到答案，看过这本书算是终于地摸到了答案，这本身就值得高兴；而且，填补断层有利于把所学的知识联接为统一的有机体，以后记忆和运用起来也更自如。</p>
<p>不过合上书本，也有遗憾：如果早能弄清楚这些问题该多好，在计算机科学中这些都应当是相当基本的常识，却需要花费这么多的周折，这么长的时间才弄明白。以前有位读中文的朋友说，老师在课堂上讲，《理想国》这样的书还有是什么好想的，直接买回来啃就对了。每每想起这句话，我都非常感慨：这位老师不一定有特别高水准，但至少在向学生推荐读本这一点上，他还算称职。相比之下，计算机专业在这方面实在差的太远了。一方面许多老师的知识水平不敢恭维，不过如果有好的教材供学生自学，这问题倒不算特别严重，偏偏在国内的计算机教育界既缺乏高水准的原创教材，也缺乏对国外经典教材的认知和推荐的气魄。情况真是再糟也没有了。</p>
<p><span></span></p>
<p>从目前计算机教育的教学大纲上看，知识点似乎都覆盖了，实际情况却相差万里。计算机科学本来是讲究“贯彻”的知识，许多看似高深或者无用的知识，其实正是问题的核心，它隐藏在表象之下，在语言和语法之后。比如我的一个朋友在做证券分析时曾用到二部图，我自己在做解码时曾用过极大连通分支，这些问题的表面看起来各异，背后的原理却是万变不离其宗，只看你能不能联想到。可惜大多数老师在传授这些知识时基本做不了此类分析和联系，只会照本宣科，说到多态只会举例三角形、圆形的面积计算，说到派生只会举例“黑狗是狗的派生”。本来，老师是如此也就罢了，一些经典教材能讲得深入浅出，而且会不断更新（比如《现代操作系统》最新版本就新增了MeeGo的相关内容），如果能下功夫阅读，结果也不会差。不幸的是目前关于经典教材并没有太多常识，也没有推荐学习的气氛，学习起来反而有诸多阻碍——我读书时曾经在一本算法书上看到汉诺塔问题的迭代解法，因为国内某名校教师编纂的教材上说明汉诺塔问题只能用递归来解，就写邮件去咨询，结果换来一顿抢白，说我胡搅蛮缠，非常无聊。在这种既缺合格教师，又缺经典教材的环境中成长，无怪乎许多程序员一边高呼学校里学的知识毫无作用，另一方面又在缺乏理论指引的情况下盲目做苦工。</p>
<p>以上的问题大家可能都知道，但是近来看过《图灵的秘密》等等书籍，我又想到一个更严重的问题，目前的计算机专业的知识体系（如果可以叫“体系”的话）太割裂凌乱了，缺乏普通正常学科所具有的源流认识和内在联系。举例来说，随便问物理系的学生，亚里士多德做了什么，伽利略做了什么，牛顿、爱因斯坦又做了什么，整个物理学有哪些主要的思潮和流派，他们往往都知道个大概。计算机专业的情况则截然不同，就拿作为教育重点的编程语言来说，目前主流的编程语言分为哪几个流派？都是怎么发展演化而来的？彼此之间的关系是什么？答得上来的人估计不多。再退一步，拿入门就要学习的二进制来说，有几个学生知道它是莱布尼茨发明的？它又是怎样被用来表示信息的？麦克斯韦、西拉德、香农分别作出了哪些贡献？不要以为这些问题不重要，不了解这些背景知识，一则容易死记硬背而丧失兴趣，二则容易犯想当然的错误，认为“二进制对计算机来说就是现成的”，认为“莱布尼茨为了解决计算机表达信息的问题发明了二进制”，完全忽略了逐步探索试错的历史过程。停留在这种认知水平，在工作中想一步步地接近解决新出现的复杂问题（无论是理论的还是实际的），完全就是奢望；现实中有很多程序员找不到现成类库就干不了活，没有强大的debug工具就排不了错，一部分原因也在于此。与此相反，了解这些背景也是构造知识内在联接，构建整门学科图谱的重要因素；有了丰富的内在联系，有完整的图谱，对整门学科的认知才会更深入，也更有可能从多种方面解决复杂问题。</p>
<p>从学校毕业到现在，深一脚浅一脚地走来，我时常在反思自己走过的弯路，也希望知道理想的计算机教育应当是怎样的。我想，应该要有好的教师，能把知识讲得深入浅出——相机上的转接环就是Bridge模式的应用；要有广泛知道的好的教材——《现代操作系统》和《操作系统概念》是学习操作系统的必读书；还要有类似《图灵的秘密》之类的书籍把学科背后的源流梳理清楚——原来图灵关心的是可计算序列而不是可计算数，这样计算机就不只会算“数”了。如果以上几个条件都能具备，相信这个行业里广大同仁的痛苦和遗憾会减少许多，这门专业也会更有吸引力。</p>
<p>Update：以下列出我记得的一些整体介绍计算机科学的书籍，供有兴趣的读者参考。</p>
<p><a href="http://book.douban.com/subject/4822685/">《编码：隐匿在计算机软硬件背后的语言》</a>，<a href="http://book.douban.com/subject/1391740/">《逻辑的引擎》</a>，<a href="http://book.douban.com/subject/6749832/">《复杂》</a>，<a href="http://book.douban.com/subject/10779604/">《图灵的秘密》</a>。</p>